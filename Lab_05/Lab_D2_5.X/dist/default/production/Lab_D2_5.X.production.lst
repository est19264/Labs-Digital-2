

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 16 14:50:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	functab,global,class=ENTRY,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225                           
   226                           	psect	strings
   227  0321                     __pstrings:
   228  0321                     stringtab:
   229  0321                     __stringtab:
   230  0321                     stringcode:	
   231                           ;	String table - string pointers are 1 byte each
   232                           
   233  0321                     stringdir:
   234  0321  3003               	movlw	high stringdir
   235  0322  008A               	movwf	10
   236  0323  0804               	movf	4,w
   237  0324  0A84               	incf	4,f
   238  0325  0782               	addwf	2,f
   239  0326                     __stringbase:
   240  0326  3400               	retlw	0
   241  0327                     __end_of__stringtab:
   242  0327                     _dpowers:
   243  0327  3401               	retlw	1
   244  0328  3400               	retlw	0
   245  0329  340A               	retlw	10
   246  032A  3400               	retlw	0
   247  032B  3464               	retlw	100
   248  032C  3400               	retlw	0
   249  032D  34E8               	retlw	232
   250  032E  3403               	retlw	3
   251  032F  3410               	retlw	16
   252  0330  3427               	retlw	39
   253  0331                     __end_of_dpowers:
   254  001A                     _RCREG	set	26
   255  000C                     _PIR1bits	set	12
   256  0018                     _RCSTAbits	set	24
   257  0009                     _PORTE	set	9
   258  0007                     _PORTC	set	7
   259  0006                     _PORTB	set	6
   260  0019                     _TXREG	set	25
   261  0008                     _PORTD	set	8
   262  0005                     _PORTA	set	5
   263  000B                     _INTCONbits	set	11
   264  0006                     _PORTBbits	set	6
   265  0065                     _RCIF	set	101
   266  0064                     _TXIF	set	100
   267  0058                     _RBIF	set	88
   268  008C                     _PIE1bits	set	140
   269  009A                     _SPBRGH	set	154
   270  0099                     _SPBRG	set	153
   271  0098                     _TXSTAbits	set	152
   272  0096                     _IOCBbits	set	150
   273  0095                     _WPUB	set	149
   274  0081                     _OPTION_REGbits	set	129
   275  008F                     _OSCCONbits	set	143
   276  0088                     _TRISD	set	136
   277  0086                     _TRISBbits	set	134
   278  0085                     _TRISA	set	133
   279  0187                     _BAUDCTLbits	set	391
   280  0189                     _ANSELH	set	393
   281  0188                     _ANSEL	set	392
   282  0331                     STR_3:
   283  0331  3449               	retlw	73	;'I'
   284  0332  346E               	retlw	110	;'n'
   285  0333  3467               	retlw	103	;'g'
   286  0334  3472               	retlw	114	;'r'
   287  0335  3465               	retlw	101	;'e'
   288  0336  3473               	retlw	115	;'s'
   289  0337  3461               	retlw	97	;'a'
   290  0338  3472               	retlw	114	;'r'
   291  0339  3420               	retlw	32	;' '
   292  033A  346E               	retlw	110	;'n'
   293  033B  3475               	retlw	117	;'u'
   294  033C  346D               	retlw	109	;'m'
   295  033D  3465               	retlw	101	;'e'
   296  033E  3472               	retlw	114	;'r'
   297  033F  346F               	retlw	111	;'o'
   298  0340  3420               	retlw	32	;' '
   299  0341  3470               	retlw	112	;'p'
   300  0342  3461               	retlw	97	;'a'
   301  0343  3472               	retlw	114	;'r'
   302  0344  3461               	retlw	97	;'a'
   303  0345  3420               	retlw	32	;' '
   304  0346  3465               	retlw	101	;'e'
   305  0347  346C               	retlw	108	;'l'
   306  0348  3420               	retlw	32	;' '
   307  0349  3463               	retlw	99	;'c'
   308  034A  346F               	retlw	111	;'o'
   309  034B  346E               	retlw	110	;'n'
   310  034C  3474               	retlw	116	;'t'
   311  034D  3461               	retlw	97	;'a'
   312  034E  3464               	retlw	100	;'d'
   313  034F  346F               	retlw	111	;'o'
   314  0350  3472               	retlw	114	;'r'
   315  0351  343A               	retlw	58	;':'
   316  0352  3420               	retlw	32	;' '
   317  0353  3452               	retlw	82	;'R'
   318  0354  3461               	retlw	97	;'a'
   319  0355  346E               	retlw	110	;'n'
   320  0356  3467               	retlw	103	;'g'
   321  0357  346F               	retlw	111	;'o'
   322  0358  3428               	retlw	40	;'('
   323  0359  3430               	retlw	48	;'0'
   324  035A  342D               	retlw	45	;'-'
   325  035B  3432               	retlw	50	;'2'
   326  035C  3435               	retlw	53	;'5'
   327  035D  3435               	retlw	53	;'5'
   328  035E  3429               	retlw	41	;')'
   329  035F  340D               	retlw	13
   330  0360  3400               	retlw	0
   331  0361                     STR_4:
   332  0361  3445               	retlw	69	;'E'
   333  0362  346C               	retlw	108	;'l'
   334  0363  3420               	retlw	32	;' '
   335  0364  346E               	retlw	110	;'n'
   336  0365  3475               	retlw	117	;'u'
   337  0366  346D               	retlw	109	;'m'
   338  0367  3465               	retlw	101	;'e'
   339  0368  3472               	retlw	114	;'r'
   340  0369  346F               	retlw	111	;'o'
   341  036A  3420               	retlw	32	;' '
   342  036B  3465               	retlw	101	;'e'
   343  036C  346C               	retlw	108	;'l'
   344  036D  3465               	retlw	101	;'e'
   345  036E  3467               	retlw	103	;'g'
   346  036F  3469               	retlw	105	;'i'
   347  0370  3464               	retlw	100	;'d'
   348  0371  346F               	retlw	111	;'o'
   349  0372  3420               	retlw	32	;' '
   350  0373  3465               	retlw	101	;'e'
   351  0374  3473               	retlw	115	;'s'
   352  0375  343A               	retlw	58	;':'
   353  0376  3420               	retlw	32	;' '
   354  0377  3425               	retlw	37	;'%'
   355  0378  3464               	retlw	100	;'d'
   356  0379  3420               	retlw	32	;' '
   357  037A  340D               	retlw	13
   358  037B  3400               	retlw	0
   359  037C                     STR_1:
   360  037C  3456               	retlw	86	;'V'
   361  037D  3461               	retlw	97	;'a'
   362  037E  346C               	retlw	108	;'l'
   363  037F  346F               	retlw	111	;'o'
   364  0380  3472               	retlw	114	;'r'
   365  0381  3420               	retlw	32	;' '
   366  0382  3464               	retlw	100	;'d'
   367  0383  3465               	retlw	101	;'e'
   368  0384  346C               	retlw	108	;'l'
   369  0385  3420               	retlw	32	;' '
   370  0386  3463               	retlw	99	;'c'
   371  0387  346F               	retlw	111	;'o'
   372  0388  346E               	retlw	110	;'n'
   373  0389  3474               	retlw	116	;'t'
   374  038A  3461               	retlw	97	;'a'
   375  038B  3464               	retlw	100	;'d'
   376  038C  346F               	retlw	111	;'o'
   377  038D  3472               	retlw	114	;'r'
   378  038E  343A               	retlw	58	;':'
   379  038F  340D               	retlw	13
   380  0390  3400               	retlw	0
   381  0391                     STR_5:
   382  0391  3425               	retlw	37	;'%'
   383  0392  3464               	retlw	100	;'d'
   384  0393  3400               	retlw	0
   385  037A                     
   386                           	psect	cinit
   387  000F                     start_initialization:	
   388                           ; #config settings
   389                           
   390  000F                     __initialization:
   391                           
   392                           ; Clear objects allocated to COMMON
   393  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   394  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   395                           
   396                           ; Clear objects allocated to BANK0
   397  0011  1283               	bcf	3,5	;RP0=0, select bank0
   398  0012  1303               	bcf	3,6	;RP1=0, select bank0
   399  0013  01E9               	clrf	__pbssBANK0& (0+127)
   400  0014  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   401  0015  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   402  0016  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   403                           
   404                           ; Clear objects allocated to BANK1
   405  0017  1683               	bsf	3,5	;RP0=1, select bank1
   406  0018  1303               	bcf	3,6	;RP1=0, select bank1
   407  0019  01A0               	clrf	__pbssBANK1& (0+127)
   408  001A  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   409  001B  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   410  001C  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   411  001D  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   412  001E  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   413  001F  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   414  0020  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   415  0021  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   416  0022  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   417  0023                     end_of_initialization:	
   418                           ;End of C runtime variable initialization code
   419                           
   420  0023                     __end_of__initialization:
   421  0023  0183               	clrf	3
   422  0024  120A  118A  2E70   	ljmp	_main	;jump to C main() function
   423                           
   424                           	psect	bssCOMMON
   425  007A                     __pbssCOMMON:
   426  007A                     _dec:
   427  007A                     	ds	1
   428  007B                     _residuo:
   429  007B                     	ds	1
   430                           
   431                           	psect	bssBANK0
   432  0069                     __pbssBANK0:
   433  0069                     _cen:
   434  0069                     	ds	1
   435  006A                     _unidades:
   436  006A                     	ds	1
   437  006B                     _decenas:
   438  006B                     	ds	1
   439  006C                     _centenas:
   440  006C                     	ds	1
   441                           
   442                           	psect	bssBANK1
   443  00A0                     __pbssBANK1:
   444  00A0                     _full:
   445  00A0                     	ds	2
   446  00A2                     _select:
   447  00A2                     	ds	2
   448  00A4                     _count:
   449  00A4                     	ds	2
   450  00A6                     _con:
   451  00A6                     	ds	1
   452  00A7                     _var:
   453  00A7                     	ds	1
   454  00A8                     _uni:
   455  00A8                     	ds	1
   456  00A9                     _valor:
   457  00A9                     	ds	1
   458                           
   459                           	psect	cstackBANK1
   460  00AA                     __pcstackBANK1:
   461  00AA                     ??_Text:
   462                           
   463                           ; 1 bytes @ 0x0
   464  00AA                     	ds	5
   465                           
   466                           	psect	cstackCOMMON
   467  0070                     __pcstackCOMMON:
   468  0070                     ?_isdigit:
   469  0070                     ?_setup:	
   470                           ; 1 bit 
   471                           
   472  0070                     ?_Text:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_division:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_isr:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ??_isr:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_main:	
   485                           ; 1 bytes @ 0x0
   486                           
   487                           
   488                           ; 1 bytes @ 0x0
   489  0070                     	ds	2
   490  0072                     ??_setup:
   491  0072                     ?_strcat:	
   492                           ; 1 bytes @ 0x2
   493                           
   494  0072                     ??_isdigit:	
   495                           ; 1 bytes @ 0x2
   496                           
   497  0072                     ?_putch:	
   498                           ; 1 bytes @ 0x2
   499                           
   500  0072                     ?___wmul:	
   501                           ; 1 bytes @ 0x2
   502                           
   503  0072                     ?___awdiv:	
   504                           ; 2 bytes @ 0x2
   505                           
   506  0072                     ?___awmod:	
   507                           ; 2 bytes @ 0x2
   508                           
   509  0072                     ?___lwdiv:	
   510                           ; 2 bytes @ 0x2
   511                           
   512  0072                     putch@data:	
   513                           ; 2 bytes @ 0x2
   514                           
   515  0072                     _isdigit$932:	
   516                           ; 1 bytes @ 0x2
   517                           
   518  0072                     strcat@from:	
   519                           ; 1 bytes @ 0x2
   520                           
   521  0072                     ___wmul@multiplier:	
   522                           ; 1 bytes @ 0x2
   523                           
   524  0072                     ___awdiv@divisor:	
   525                           ; 2 bytes @ 0x2
   526                           
   527  0072                     ___awmod@divisor:	
   528                           ; 2 bytes @ 0x2
   529                           
   530  0072                     ___lwdiv@divisor:	
   531                           ; 2 bytes @ 0x2
   532                           
   533                           
   534                           ; 2 bytes @ 0x2
   535  0072                     	ds	1
   536  0073                     ??_strcat:
   537  0073                     ??_putch:	
   538                           ; 1 bytes @ 0x3
   539                           
   540  0073                     isdigit@c:	
   541                           ; 1 bytes @ 0x3
   542                           
   543                           
   544                           ; 1 bytes @ 0x3
   545  0073                     	ds	1
   546  0074                     strcat@to:
   547  0074                     ___wmul@multiplicand:	
   548                           ; 1 bytes @ 0x4
   549                           
   550  0074                     ___awdiv@dividend:	
   551                           ; 2 bytes @ 0x4
   552                           
   553  0074                     ___awmod@dividend:	
   554                           ; 2 bytes @ 0x4
   555                           
   556  0074                     ___lwdiv@dividend:	
   557                           ; 2 bytes @ 0x4
   558                           
   559                           
   560                           ; 2 bytes @ 0x4
   561  0074                     	ds	1
   562  0075                     strcat@cp:
   563                           
   564                           ; 1 bytes @ 0x5
   565  0075                     	ds	1
   566  0076                     ??___wmul:
   567  0076                     ??___awdiv:	
   568                           ; 1 bytes @ 0x6
   569                           
   570  0076                     ??___awmod:	
   571                           ; 1 bytes @ 0x6
   572                           
   573  0076                     ??___lwdiv:	
   574                           ; 1 bytes @ 0x6
   575                           
   576  0076                     ___wmul@product:	
   577                           ; 1 bytes @ 0x6
   578                           
   579                           
   580                           ; 2 bytes @ 0x6
   581  0076                     	ds	1
   582  0077                     ___awmod@counter:
   583  0077                     ___lwdiv@quotient:	
   584                           ; 1 bytes @ 0x7
   585                           
   586                           
   587                           ; 2 bytes @ 0x7
   588  0077                     	ds	1
   589  0078                     ?_atoi:
   590  0078                     ___awmod@sign:	
   591                           ; 2 bytes @ 0x8
   592                           
   593                           
   594                           ; 1 bytes @ 0x8
   595  0078                     	ds	1
   596  0079                     division@valor:
   597  0079                     ___lwdiv@counter:	
   598                           ; 1 bytes @ 0x9
   599                           
   600                           
   601                           ; 1 bytes @ 0x9
   602  0079                     	ds	1
   603  007A                     ??_main:
   604                           
   605                           	psect	cstackBANK0
   606  0020                     __pcstackBANK0:	
   607                           ; 1 bytes @ 0xA
   608                           
   609  0020                     ??_atoi:
   610  0020                     ?___lwmod:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0020                     ___awdiv@counter:	
   614                           ; 2 bytes @ 0x0
   615                           
   616  0020                     ___lwmod@divisor:	
   617                           ; 1 bytes @ 0x0
   618                           
   619                           
   620                           ; 2 bytes @ 0x0
   621  0020                     	ds	1
   622  0021                     ___awdiv@sign:
   623                           
   624                           ; 1 bytes @ 0x1
   625  0021                     	ds	1
   626  0022                     atoi@sign:
   627  0022                     ___awdiv@quotient:	
   628                           ; 1 bytes @ 0x2
   629                           
   630  0022                     ___lwmod@dividend:	
   631                           ; 2 bytes @ 0x2
   632                           
   633                           
   634                           ; 2 bytes @ 0x2
   635  0022                     	ds	1
   636  0023                     atoi@a:
   637                           
   638                           ; 2 bytes @ 0x3
   639  0023                     	ds	1
   640  0024                     ??_division:
   641  0024                     ??___lwmod:	
   642                           ; 1 bytes @ 0x4
   643                           
   644                           
   645                           ; 1 bytes @ 0x4
   646  0024                     	ds	1
   647  0025                     ___lwmod@counter:
   648  0025                     atoi@s:	
   649                           ; 1 bytes @ 0x5
   650                           
   651                           
   652                           ; 1 bytes @ 0x5
   653  0025                     	ds	1
   654  0026                     ?__doprnt:
   655  0026                     __doprnt@f:	
   656                           ; 2 bytes @ 0x6
   657                           
   658                           
   659                           ; 1 bytes @ 0x6
   660  0026                     	ds	1
   661  0027                     __doprnt@ap:
   662                           
   663                           ; 1 bytes @ 0x7
   664  0027                     	ds	1
   665  0028                     ??__doprnt:
   666                           
   667                           ; 1 bytes @ 0x8
   668  0028                     	ds	3
   669  002B                     __doprnt@flag:
   670                           
   671                           ; 1 bytes @ 0xB
   672  002B                     	ds	1
   673  002C                     __doprnt@prec:
   674                           
   675                           ; 1 bytes @ 0xC
   676  002C                     	ds	1
   677  002D                     __doprnt@val:
   678                           
   679                           ; 2 bytes @ 0xD
   680  002D                     	ds	2
   681  002F                     __doprnt@c:
   682                           
   683                           ; 1 bytes @ 0xF
   684  002F                     	ds	1
   685  0030                     __doprnt@pb:
   686                           
   687                           ; 1 bytes @ 0x10
   688  0030                     	ds	1
   689  0031                     ?_printf:
   690  0031                     ?_sprintf:	
   691                           ; 2 bytes @ 0x11
   692                           
   693  0031                     sprintf@f:	
   694                           ; 2 bytes @ 0x11
   695                           
   696                           
   697                           ; 1 bytes @ 0x11
   698  0031                     	ds	2
   699  0033                     ??_printf:
   700                           
   701                           ; 1 bytes @ 0x13
   702  0033                     	ds	1
   703  0034                     ??_sprintf:
   704                           
   705                           ; 1 bytes @ 0x14
   706  0034                     	ds	1
   707  0035                     printf@ap:
   708                           
   709                           ; 1 bytes @ 0x15
   710  0035                     	ds	1
   711  0036                     printf@f:
   712  0036                     sprintf@wh:	
   713                           ; 1 bytes @ 0x16
   714                           
   715                           
   716                           ; 1 bytes @ 0x16
   717  0036                     	ds	1
   718  0037                     sprintf@ap:
   719  0037                     printf@pb:	
   720                           ; 1 bytes @ 0x17
   721                           
   722                           
   723                           ; 2 bytes @ 0x17
   724  0037                     	ds	1
   725  0038                     sprintf@pb:
   726                           
   727                           ; 2 bytes @ 0x18
   728  0038                     	ds	2
   729  003A                     ?_concat:
   730  003A                     concat@a:	
   731                           ; 2 bytes @ 0x1A
   732                           
   733                           
   734                           ; 2 bytes @ 0x1A
   735  003A                     	ds	2
   736  003C                     concat@b:
   737                           
   738                           ; 2 bytes @ 0x1C
   739  003C                     	ds	2
   740  003E                     ??_concat:
   741                           
   742                           ; 1 bytes @ 0x1E
   743  003E                     	ds	1
   744  003F                     concat@s2:
   745                           
   746                           ; 20 bytes @ 0x1F
   747  003F                     	ds	20
   748  0053                     concat@s1:
   749                           
   750                           ; 20 bytes @ 0x33
   751  0053                     	ds	20
   752  0067                     concat@c:
   753                           
   754                           ; 2 bytes @ 0x47
   755  0067                     	ds	2
   756                           
   757                           	psect	maintext
   758  0670                     __pmaintext:	
   759 ;;
   760 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   761 ;;
   762 ;; *************** function _main *****************
   763 ;; Defined at:
   764 ;;		line 67 in file "main.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : B00/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0
   780 ;;      Temps:          0       0       0       0       0
   781 ;;      Totals:         0       0       0       0       0
   782 ;;Total ram usage:        0 bytes
   783 ;; Hardware stack levels required when called:    6
   784 ;; This function calls:
   785 ;;		_Text
   786 ;;		_setup
   787 ;; This function is called by:
   788 ;;		Startup code after reset
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           
   793                           ;psect for function _main
   794  0670                     _main:
   795  0670                     l2020:	
   796                           ;incstack = 0
   797                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   798                           
   799                           
   800                           ;main.c: 69:     PORTD = 0x00;
   801  0670  120A  118A  2505  120A  118A  	fcall	_setup
   802  0675                     l2022:
   803                           
   804                           ;main.c: 72: ;main.c: 73:     OSCCONbits.IRCF0 = 0;
   805  0675  1683               	bsf	3,5	;RP0=1, select bank1
   806  0676  1303               	bcf	3,6	;RP1=0, select bank1
   807  0677  0824               	movf	_count^(0+128),w
   808  0678  1283               	bcf	3,5	;RP0=0, select bank0
   809  0679  1303               	bcf	3,6	;RP1=0, select bank0
   810  067A  0085               	movwf	5	;volatile
   811  067B                     l2024:
   812                           
   813                           ;main.c: 74:     OSCCONbits.IRCF1 = 1;
   814  067B  1683               	bsf	3,5	;RP0=1, select bank1
   815  067C  1303               	bcf	3,6	;RP1=0, select bank1
   816  067D  0822               	movf	_select^(0+128),w
   817  067E  1283               	bcf	3,5	;RP0=0, select bank0
   818  067F  1303               	bcf	3,6	;RP1=0, select bank0
   819  0680  0088               	movwf	8	;volatile
   820  0681                     l2026:
   821                           
   822                           ;main.c: 75:     OSCCONbits.IRCF2 = 1;
   823  0681  120A  118A  2030  120A  118A  	fcall	_Text
   824  0686  2E75               	goto	l2022
   825  0687  120A  118A  280C   	ljmp	start
   826  068A                     __end_of_main:
   827                           
   828                           	psect	text1
   829  0505                     __ptext1:	
   830 ;; *************** function _setup *****************
   831 ;; Defined at:
   832 ;;		line 89 in file "main.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;		None
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		wreg, status,2
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   846 ;;      Params:         0       0       0       0       0
   847 ;;      Locals:         0       0       0       0       0
   848 ;;      Temps:          0       0       0       0       0
   849 ;;      Totals:         0       0       0       0       0
   850 ;;Total ram usage:        0 bytes
   851 ;; Hardware stack levels used:    1
   852 ;; Hardware stack levels required when called:    1
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_main
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           
   861                           ;psect for function _setup
   862  0505                     _setup:
   863  0505                     l1614:	
   864                           ;incstack = 0
   865                           ; Regs used in _setup: [wreg+status,2]
   866                           
   867                           
   868                           ;main.c: 91: 
   869  0505  1683               	bsf	3,5	;RP0=1, select bank3
   870  0506  1703               	bsf	3,6	;RP1=1, select bank3
   871  0507  0188               	clrf	8	;volatile
   872                           
   873                           ;main.c: 92:     RCSTAbits.SPEN = 1;
   874  0508  0189               	clrf	9	;volatile
   875                           
   876                           ;main.c: 95:     TXSTAbits.TX9 = 0;
   877  0509  1683               	bsf	3,5	;RP0=1, select bank1
   878  050A  1303               	bcf	3,6	;RP1=0, select bank1
   879  050B  0185               	clrf	5	;volatile
   880  050C                     l1616:
   881                           
   882                           ;main.c: 96: 
   883  050C  1406               	bsf	6,0	;volatile
   884  050D                     l1618:
   885                           
   886                           ;main.c: 97:     TXSTAbits.TXEN = 1;
   887  050D  1486               	bsf	6,1	;volatile
   888                           
   889                           ;main.c: 98: 
   890  050E  0188               	clrf	8	;volatile
   891                           
   892                           ;main.c: 101: 
   893  050F  1283               	bcf	3,5	;RP0=0, select bank0
   894  0510  1303               	bcf	3,6	;RP1=0, select bank0
   895  0511  0185               	clrf	5	;volatile
   896                           
   897                           ;main.c: 102: 
   898  0512  0186               	clrf	6	;volatile
   899                           
   900                           ;main.c: 103:     INTCONbits.GIE = 1;
   901  0513  0187               	clrf	7	;volatile
   902                           
   903                           ;main.c: 104:     INTCONbits.PEIE = 1;
   904  0514  0188               	clrf	8	;volatile
   905                           
   906                           ;main.c: 105:     PIE1bits.RCIE = 0;
   907  0515  0189               	clrf	9	;volatile
   908  0516                     l1620:
   909                           
   910                           ;main.c: 108:     INTCONbits.RBIE = 1;
   911  0516  1683               	bsf	3,5	;RP0=1, select bank1
   912  0517  1303               	bcf	3,6	;RP1=0, select bank1
   913  0518  120F               	bcf	15,4	;volatile
   914  0519                     l1622:
   915                           
   916                           ;main.c: 109: 
   917  0519  168F               	bsf	15,5	;volatile
   918  051A                     l1624:
   919                           
   920                           ;main.c: 110: }
   921  051A  170F               	bsf	15,6	;volatile
   922  051B                     l1626:
   923                           
   924                           ;main.c: 111: 
   925  051B  140F               	bsf	15,0	;volatile
   926  051C                     l1628:
   927                           
   928                           ;main.c: 114:      _delay((unsigned long)((250)*(4000000/4000.0)));
   929  051C  1381               	bcf	1,7	;volatile
   930  051D                     l1630:
   931                           
   932                           ;main.c: 115:      division(count);
   933  051D  3003               	movlw	3
   934  051E  0095               	movwf	21	;volatile
   935  051F                     l1632:
   936                           
   937                           ;main.c: 116:     printf("Valor del contador:\r");
   938  051F  1416               	bsf	22,0	;volatile
   939  0520                     l1634:
   940                           
   941                           ;main.c: 117:     _delay((unsigned long)((250)*(4000000/4000.0)));
   942  0520  1496               	bsf	22,1	;volatile
   943  0521                     l1636:
   944                           
   945                           ;main.c: 120:     TXREG = decenas;
   946  0521  1218               	bcf	24,4	;volatile
   947  0522                     l1638:
   948                           
   949                           ;main.c: 121:     _delay((unsigned long)((250)*(4000000/4000.0)));
   950  0522  1518               	bsf	24,2	;volatile
   951  0523                     l1640:
   952                           
   953                           ;main.c: 122:     TXREG = unidades;
   954  0523  1683               	bsf	3,5	;RP0=1, select bank3
   955  0524  1703               	bsf	3,6	;RP1=1, select bank3
   956  0525  1187               	bcf	7,3	;volatile
   957  0526                     l1642:
   958                           
   959                           ;main.c: 124:     printf("\r");
   960  0526  3019               	movlw	25
   961  0527  1683               	bsf	3,5	;RP0=1, select bank1
   962  0528  1303               	bcf	3,6	;RP1=0, select bank1
   963  0529  0099               	movwf	25	;volatile
   964  052A                     l1644:
   965                           
   966                           ;main.c: 125: 
   967  052A  3001               	movlw	1
   968  052B  009A               	movwf	26	;volatile
   969  052C                     l1646:
   970                           
   971                           ;main.c: 127:      printf("Ingresar numero para el contador: Rango(0-255)\r");
   972  052C  1283               	bcf	3,5	;RP0=0, select bank0
   973  052D  1303               	bcf	3,6	;RP1=0, select bank0
   974  052E  1798               	bsf	24,7	;volatile
   975  052F                     l1648:
   976                           
   977                           ;main.c: 128:       defensa1:
   978  052F  1318               	bcf	24,6	;volatile
   979  0530                     l1650:
   980                           
   981                           ;main.c: 129:        while(RCIF == 0);
   982  0530  1618               	bsf	24,4	;volatile
   983  0531                     l1652:
   984                           
   985                           ;main.c: 130:         cen = RCREG -48;
   986  0531  1683               	bsf	3,5	;RP0=1, select bank1
   987  0532  1303               	bcf	3,6	;RP1=0, select bank1
   988  0533  1318               	bcf	24,6	;volatile
   989  0534                     l1654:
   990                           
   991                           ;main.c: 132:        while(RCREG > '2'){
   992  0534  1698               	bsf	24,5	;volatile
   993  0535                     l1656:
   994                           
   995                           ;main.c: 134:        }
   996  0535  1283               	bcf	3,5	;RP0=0, select bank0
   997  0536  1303               	bcf	3,6	;RP1=0, select bank0
   998  0537  128C               	bcf	12,5	;volatile
   999  0538                     l1658:
  1000                           
  1001                           ;main.c: 135: 
  1002  0538  120C               	bcf	12,4	;volatile
  1003  0539                     l1660:
  1004                           
  1005                           ;main.c: 138:          dec = RCREG -48;
  1006  0539  178B               	bsf	11,7	;volatile
  1007  053A                     l1662:
  1008                           
  1009                           ;main.c: 139: 
  1010  053A  170B               	bsf	11,6	;volatile
  1011  053B                     l1664:
  1012                           
  1013                           ;main.c: 140:         if(cen == 2){
  1014  053B  1683               	bsf	3,5	;RP0=1, select bank1
  1015  053C  1303               	bcf	3,6	;RP1=0, select bank1
  1016  053D  128C               	bcf	12,5	;volatile
  1017  053E                     l1666:
  1018                           
  1019                           ;main.c: 141:            while(RCREG > '5'){
  1020  053E  120C               	bcf	12,4	;volatile
  1021  053F                     l1668:
  1022                           
  1023                           ;main.c: 142:                goto defensa2;
  1024  053F  140B               	bsf	11,0	;volatile
  1025  0540                     l1670:
  1026                           
  1027                           ;main.c: 143:            }
  1028  0540  158B               	bsf	11,3	;volatile
  1029  0541                     l125:
  1030  0541  0008               	return
  1031  0542                     __end_of_setup:
  1032                           
  1033                           	psect	text2
  1034  0030                     __ptext2:	
  1035 ;; *************** function _Text *****************
  1036 ;; Defined at:
  1037 ;;		line 148 in file "main.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;		None
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         0       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0
  1053 ;;      Temps:          0       0       5       0       0
  1054 ;;      Totals:         0       0       5       0       0
  1055 ;;Total ram usage:        5 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    5
  1058 ;; This function calls:
  1059 ;;		_concat
  1060 ;;		_division
  1061 ;;		_printf
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           
  1068                           ;psect for function _Text
  1069  0030                     _Text:
  1070  0030                     l1972:	
  1071                           ;incstack = 0
  1072                           ; Regs used in _Text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1073                           
  1074                           
  1075                           ;main.c: 149: 
  1076  0030  3002               	movlw	2
  1077  0031  1683               	bsf	3,5	;RP0=1, select bank1
  1078  0032  1303               	bcf	3,6	;RP1=0, select bank1
  1079  0033  00AC               	movwf	(??_Text^(0+128)+2)
  1080  0034  3045               	movlw	69
  1081  0035  00AB               	movwf	(??_Text^(0+128)+1)
  1082  0036  30A9               	movlw	169
  1083  0037  00AA               	movwf	??_Text^(0+128)
  1084  0038                     u1807:
  1085  0038  0BAA               	decfsz	??_Text^(0+128),f
  1086  0039  2838               	goto	u1807
  1087  003A  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1088  003B  2838               	goto	u1807
  1089  003C  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1090  003D  2838               	goto	u1807
  1091  003E                     l1974:
  1092                           
  1093                           ;main.c: 150:        if(cen == 2 && dec == 5){
  1094  003E  1683               	bsf	3,5	;RP0=1, select bank1
  1095  003F  1303               	bcf	3,6	;RP1=0, select bank1
  1096  0040  0824               	movf	_count^(0+128),w
  1097  0041  120A  118A  2394  120A  118A  	fcall	_division
  1098  0046                     l1976:
  1099                           
  1100                           ;main.c: 151:            while(RCREG > '5'){
  1101  0046  3056               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1102  0047  120A  118A  2655  120A  118A  	fcall	_printf
  1103  004C                     l1978:
  1104                           
  1105                           ;main.c: 152:                goto defensa3;
  1106  004C  3002               	movlw	2
  1107  004D  1683               	bsf	3,5	;RP0=1, select bank1
  1108  004E  1303               	bcf	3,6	;RP1=0, select bank1
  1109  004F  00AC               	movwf	(??_Text^(0+128)+2)
  1110  0050  3045               	movlw	69
  1111  0051  00AB               	movwf	(??_Text^(0+128)+1)
  1112  0052  30A9               	movlw	169
  1113  0053  00AA               	movwf	??_Text^(0+128)
  1114  0054                     u1817:
  1115  0054  0BAA               	decfsz	??_Text^(0+128),f
  1116  0055  2854               	goto	u1817
  1117  0056  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1118  0057  2854               	goto	u1817
  1119  0058  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1120  0059  2854               	goto	u1817
  1121  005A                     l1980:
  1122                           
  1123                           ;main.c: 153:            }
  1124  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1125  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1126  005C  086C               	movf	_centenas,w
  1127  005D  0099               	movwf	25	;volatile
  1128  005E                     l1982:
  1129                           
  1130                           ;main.c: 154:        }
  1131  005E  3002               	movlw	2
  1132  005F  1683               	bsf	3,5	;RP0=1, select bank1
  1133  0060  1303               	bcf	3,6	;RP1=0, select bank1
  1134  0061  00AC               	movwf	(??_Text^(0+128)+2)
  1135  0062  3045               	movlw	69
  1136  0063  00AB               	movwf	(??_Text^(0+128)+1)
  1137  0064  30A9               	movlw	169
  1138  0065  00AA               	movwf	??_Text^(0+128)
  1139  0066                     u1827:
  1140  0066  0BAA               	decfsz	??_Text^(0+128),f
  1141  0067  2866               	goto	u1827
  1142  0068  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1143  0069  2866               	goto	u1827
  1144  006A  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1145  006B  2866               	goto	u1827
  1146  006C                     l1984:
  1147                           
  1148                           ;main.c: 155:       con = concat(cen, dec);
  1149  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1150  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1151  006E  086B               	movf	_decenas,w
  1152  006F  0099               	movwf	25	;volatile
  1153  0070                     l1986:
  1154                           
  1155                           ;main.c: 156:       full = concat(con, uni);
  1156  0070  3002               	movlw	2
  1157  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1158  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1159  0073  00AC               	movwf	(??_Text^(0+128)+2)
  1160  0074  3045               	movlw	69
  1161  0075  00AB               	movwf	(??_Text^(0+128)+1)
  1162  0076  30A9               	movlw	169
  1163  0077  00AA               	movwf	??_Text^(0+128)
  1164  0078                     u1837:
  1165  0078  0BAA               	decfsz	??_Text^(0+128),f
  1166  0079  2878               	goto	u1837
  1167  007A  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1168  007B  2878               	goto	u1837
  1169  007C  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1170  007D  2878               	goto	u1837
  1171  007E                     l1988:
  1172                           
  1173                           ;main.c: 157:       _delay((unsigned long)((250)*(4000000/4000.0)));
  1174  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1175  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1176  0080  086A               	movf	_unidades,w
  1177  0081  0099               	movwf	25	;volatile
  1178  0082                     l1990:
  1179                           
  1180                           ;main.c: 158:     printf("El numero elegido es: %d \r", full);
  1181  0082  3002               	movlw	2
  1182  0083  1683               	bsf	3,5	;RP0=1, select bank1
  1183  0084  1303               	bcf	3,6	;RP1=0, select bank1
  1184  0085  00AC               	movwf	(??_Text^(0+128)+2)
  1185  0086  3045               	movlw	69
  1186  0087  00AB               	movwf	(??_Text^(0+128)+1)
  1187  0088  30A9               	movlw	169
  1188  0089  00AA               	movwf	??_Text^(0+128)
  1189  008A                     u1847:
  1190  008A  0BAA               	decfsz	??_Text^(0+128),f
  1191  008B  288A               	goto	u1847
  1192  008C  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1193  008D  288A               	goto	u1847
  1194  008E  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1195  008F  288A               	goto	u1847
  1196  0090                     l1992:
  1197                           
  1198                           ;main.c: 159:     select = full;
  1199  0090  3054               	movlw	(low (((STR_4+25)-__stringbase)| (0+32768)))& (0+255)
  1200  0091  120A  118A  2655  120A  118A  	fcall	_printf
  1201  0096                     l1994:
  1202                           
  1203                           ;main.c: 162: 
  1204  0096  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1205  0097  120A  118A  2655  120A  118A  	fcall	_printf
  1206  009C                     l129:
  1207  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1208  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1209  009E  1E8C               	btfss	12,5	;volatile
  1210  009F  28A1               	goto	u1711
  1211  00A0  28A2               	goto	u1710
  1212  00A1                     u1711:
  1213  00A1  289C               	goto	l129
  1214  00A2                     u1710:
  1215  00A2                     l1996:
  1216                           
  1217                           ;main.c: 165:     residuo = valor%100;
  1218  00A2  081A               	movf	26,w	;volatile
  1219  00A3  3ED0               	addlw	208
  1220  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  1221  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  1222  00A6  00AA               	movwf	??_Text^(0+128)
  1223  00A7  082A               	movf	??_Text^(0+128),w
  1224  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1225  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1226  00AA  00E9               	movwf	_cen
  1227  00AB                     l1998:	
  1228                           ;main.c: 167:     unidades = residuo%10;
  1229                           
  1230                           
  1231                           ;main.c: 167:     unidades = residuo%10;
  1232  00AB  3033               	movlw	51
  1233  00AC  021A               	subwf	26,w	;volatile
  1234  00AD  1803               	skipnc
  1235  00AE  28B0               	goto	u1721
  1236  00AF  28B1               	goto	u1720
  1237  00B0                     u1721:
  1238  00B0  289C               	goto	l129
  1239  00B1                     u1720:
  1240  00B1                     l136:
  1241  00B1  1E8C               	btfss	12,5	;volatile
  1242  00B2  28B4               	goto	u1731
  1243  00B3  28B5               	goto	u1730
  1244  00B4                     u1731:
  1245  00B4  28B1               	goto	l136
  1246  00B5                     u1730:
  1247  00B5                     l2000:
  1248                           
  1249                           ;main.c: 173: 
  1250  00B5  081A               	movf	26,w	;volatile
  1251  00B6  3ED0               	addlw	208
  1252  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  1253  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  1254  00B9  00AA               	movwf	??_Text^(0+128)
  1255  00BA  082A               	movf	??_Text^(0+128),w
  1256  00BB  00FA               	movwf	_dec
  1257                           
  1258                           ;main.c: 175: int concat(int a, int b)
  1259  00BC  3002               	movlw	2
  1260  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1261  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1262  00BF  0669               	xorwf	_cen,w
  1263  00C0  1D03               	btfss	3,2
  1264  00C1  28C3               	goto	u1741
  1265  00C2  28C4               	goto	u1740
  1266  00C3                     u1741:
  1267  00C3  28CA               	goto	l144
  1268  00C4                     u1740:
  1269  00C4                     l2004:
  1270                           
  1271                           ;main.c: 176: {
  1272  00C4  3036               	movlw	54
  1273  00C5  021A               	subwf	26,w	;volatile
  1274  00C6  1803               	skipnc
  1275  00C7  28C9               	goto	u1751
  1276  00C8  28CA               	goto	u1750
  1277  00C9                     u1751:
  1278  00C9  28B1               	goto	l136
  1279  00CA                     u1750:
  1280  00CA                     l144:
  1281  00CA  1E8C               	btfss	12,5	;volatile
  1282  00CB  28CD               	goto	u1761
  1283  00CC  28CE               	goto	u1760
  1284  00CD                     u1761:
  1285  00CD  28CA               	goto	l144
  1286  00CE                     u1760:
  1287  00CE                     l2006:
  1288                           
  1289                           ;main.c: 183: 
  1290  00CE  081A               	movf	26,w	;volatile
  1291  00CF  3ED0               	addlw	208
  1292  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  1293  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  1294  00D2  00AA               	movwf	??_Text^(0+128)
  1295  00D3  082A               	movf	??_Text^(0+128),w
  1296  00D4  00A8               	movwf	_uni^(0+128)
  1297                           
  1298                           ;main.c: 185:     strcat(s1, s2);
  1299  00D5  3002               	movlw	2
  1300  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1301  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1302  00D8  0669               	xorwf	_cen,w
  1303  00D9  1D03               	btfss	3,2
  1304  00DA  28DC               	goto	u1771
  1305  00DB  28DD               	goto	u1770
  1306  00DC                     u1771:
  1307  00DC  28E9               	goto	l2014
  1308  00DD                     u1770:
  1309  00DD                     l2008:
  1310  00DD  3005               	movlw	5
  1311  00DE  067A               	xorwf	_dec,w
  1312  00DF  1D03               	btfss	3,2
  1313  00E0  28E2               	goto	u1781
  1314  00E1  28E3               	goto	u1780
  1315  00E2                     u1781:
  1316  00E2  28E9               	goto	l2014
  1317  00E3                     u1780:
  1318  00E3                     l2012:
  1319                           
  1320                           ;main.c: 186: 
  1321  00E3  3036               	movlw	54
  1322  00E4  021A               	subwf	26,w	;volatile
  1323  00E5  1803               	skipnc
  1324  00E6  28E8               	goto	u1791
  1325  00E7  28E9               	goto	u1790
  1326  00E8                     u1791:
  1327  00E8  28CA               	goto	l144
  1328  00E9                     u1790:
  1329  00E9                     l2014:
  1330                           
  1331                           ;main.c: 190: 
  1332  00E9  0869               	movf	_cen,w
  1333  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1334  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  1335  00EC  00AA               	movwf	??_Text^(0+128)
  1336  00ED  01AB               	clrf	(??_Text^(0+128)+1)
  1337  00EE  082A               	movf	??_Text^(0+128),w
  1338  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1339  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1340  00F1  00BA               	movwf	concat@a
  1341  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  1342  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  1343  00F4  082B               	movf	(??_Text+1)^(0+128),w
  1344  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1345  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1346  00F7  00BB               	movwf	concat@a+1
  1347  00F8  087A               	movf	_dec,w
  1348  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  1349  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  1350  00FB  00AC               	movwf	(??_Text+2)^(0+128)
  1351  00FC  01AD               	clrf	((??_Text+2)^(0+128)+1)
  1352  00FD  082C               	movf	(??_Text+2)^(0+128),w
  1353  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1354  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1355  0100  00BC               	movwf	concat@b
  1356  0101  1683               	bsf	3,5	;RP0=1, select bank1
  1357  0102  1303               	bcf	3,6	;RP1=0, select bank1
  1358  0103  082D               	movf	(??_Text+3)^(0+128),w
  1359  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0105  1303               	bcf	3,6	;RP1=0, select bank0
  1361  0106  00BD               	movwf	concat@b+1
  1362  0107  120A  118A  2542  120A  118A  	fcall	_concat
  1363  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1364  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1365  010E  083A               	movf	?_concat,w
  1366  010F  1683               	bsf	3,5	;RP0=1, select bank1
  1367  0110  1303               	bcf	3,6	;RP1=0, select bank1
  1368  0111  00AE               	movwf	(??_Text+4)^(0+128)
  1369  0112  082E               	movf	(??_Text+4)^(0+128),w
  1370  0113  00A6               	movwf	_con^(0+128)
  1371                           
  1372                           ;main.c: 191: 
  1373  0114  0826               	movf	_con^(0+128),w
  1374  0115  00AA               	movwf	??_Text^(0+128)
  1375  0116  01AB               	clrf	(??_Text^(0+128)+1)
  1376  0117  082A               	movf	??_Text^(0+128),w
  1377  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1379  011A  00BA               	movwf	concat@a
  1380  011B  1683               	bsf	3,5	;RP0=1, select bank1
  1381  011C  1303               	bcf	3,6	;RP1=0, select bank1
  1382  011D  082B               	movf	(??_Text+1)^(0+128),w
  1383  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1384  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0120  00BB               	movwf	concat@a+1
  1386  0121  1683               	bsf	3,5	;RP0=1, select bank1
  1387  0122  1303               	bcf	3,6	;RP1=0, select bank1
  1388  0123  0828               	movf	_uni^(0+128),w
  1389  0124  00AC               	movwf	(??_Text+2)^(0+128)
  1390  0125  01AD               	clrf	((??_Text+2)^(0+128)+1)
  1391  0126  082C               	movf	(??_Text+2)^(0+128),w
  1392  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0129  00BC               	movwf	concat@b
  1395  012A  1683               	bsf	3,5	;RP0=1, select bank1
  1396  012B  1303               	bcf	3,6	;RP1=0, select bank1
  1397  012C  082D               	movf	(??_Text+3)^(0+128),w
  1398  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1399  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1400  012F  00BD               	movwf	concat@b+1
  1401  0130  120A  118A  2542  120A  118A  	fcall	_concat
  1402  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1403  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1404  0137  083B               	movf	?_concat+1,w
  1405  0138  1683               	bsf	3,5	;RP0=1, select bank1
  1406  0139  1303               	bcf	3,6	;RP1=0, select bank1
  1407  013A  00A1               	movwf	(_full+1)^(0+128)
  1408  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1409  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1410  013D  083A               	movf	?_concat,w
  1411  013E  1683               	bsf	3,5	;RP0=1, select bank1
  1412  013F  1303               	bcf	3,6	;RP1=0, select bank1
  1413  0140  00A0               	movwf	_full^(0+128)
  1414  0141                     l2016:
  1415                           
  1416                           ;main.c: 192:     return c;
  1417  0141  3002               	movlw	2
  1418  0142  1683               	bsf	3,5	;RP0=1, select bank1
  1419  0143  1303               	bcf	3,6	;RP1=0, select bank1
  1420  0144  00AC               	movwf	(??_Text^(0+128)+2)
  1421  0145  3045               	movlw	69
  1422  0146  00AB               	movwf	(??_Text^(0+128)+1)
  1423  0147  30A9               	movlw	169
  1424  0148  00AA               	movwf	??_Text^(0+128)
  1425  0149                     u1857:
  1426  0149  0BAA               	decfsz	??_Text^(0+128),f
  1427  014A  2949               	goto	u1857
  1428  014B  0BAB               	decfsz	(??_Text^(0+128)+1),f
  1429  014C  2949               	goto	u1857
  1430  014D  0BAC               	decfsz	(??_Text^(0+128)+2),f
  1431  014E  2949               	goto	u1857
  1432  014F                     l2018:
  1433                           
  1434                           ;main.c: 193: }
  1435  014F  1683               	bsf	3,5	;RP0=1, select bank1
  1436  0150  1303               	bcf	3,6	;RP1=0, select bank1
  1437  0151  0821               	movf	(_full+1)^(0+128),w
  1438  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0154  00B2               	movwf	?_printf+1
  1441  0155  1683               	bsf	3,5	;RP0=1, select bank1
  1442  0156  1303               	bcf	3,6	;RP1=0, select bank1
  1443  0157  0820               	movf	_full^(0+128),w
  1444  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1446  015A  00B1               	movwf	?_printf
  1447  015B  303B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1448  015C  120A  118A  2655  120A  118A  	fcall	_printf
  1449  0161  1683               	bsf	3,5	;RP0=1, select bank1
  1450  0162  1303               	bcf	3,6	;RP1=0, select bank1
  1451  0163  0821               	movf	(_full+1)^(0+128),w
  1452  0164  00A3               	movwf	(_select+1)^(0+128)
  1453  0165  0820               	movf	_full^(0+128),w
  1454  0166  00A2               	movwf	_select^(0+128)
  1455  0167                     l151:
  1456  0167  0008               	return
  1457  0168                     __end_of_Text:
  1458                           
  1459                           	psect	text3
  1460  0655                     __ptext3:	
  1461 ;; *************** function _printf *****************
  1462 ;; Defined at:
  1463 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  f               1    wreg     PTR const unsigned char 
  1466 ;;		 -> STR_4(27), STR_3(48), STR_2(2), STR_1(21), 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  f               1   22[BANK0 ] PTR const unsigned char 
  1469 ;;		 -> STR_4(27), STR_3(48), STR_2(2), STR_1(21), 
  1470 ;;  pb              2   23[BANK0 ] struct __prbuf
  1471 ;;  ap              1   21[BANK0 ] PTR void [1]
  1472 ;;		 -> ?_sprintf(2), ?_printf(2), 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  2   17[BANK0 ] int 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1482 ;;      Params:         0       2       0       0       0
  1483 ;;      Locals:         0       4       0       0       0
  1484 ;;      Temps:          0       2       0       0       0
  1485 ;;      Totals:         0       8       0       0       0
  1486 ;;Total ram usage:        8 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    3
  1489 ;; This function calls:
  1490 ;;		__doprnt
  1491 ;; This function is called by:
  1492 ;;		_Text
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _printf
  1498  0655                     _printf:
  1499                           
  1500                           ;incstack = 0
  1501                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1502                           ;printf@f stored from wreg
  1503  0655  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0656  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0657  00B6               	movwf	printf@f
  1506  0658                     l1952:
  1507  0658  01B7               	clrf	printf@pb
  1508  0659                     l1954:
  1509  0659  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  1510  065A  00B3               	movwf	??_printf
  1511  065B  0833               	movf	??_printf,w
  1512  065C  00B8               	movwf	low ((printf@pb| 0+1))
  1513  065D                     l1956:
  1514  065D  3031               	movlw	(low (?_printf| 0))& (0+255)
  1515  065E  00B3               	movwf	??_printf
  1516  065F  0833               	movf	??_printf,w
  1517  0660  00B5               	movwf	printf@ap
  1518  0661                     l1958:
  1519                           
  1520                           ;	Return value of _printf is never used
  1521  0661  0836               	movf	printf@f,w
  1522  0662  00B3               	movwf	??_printf
  1523  0663  0833               	movf	??_printf,w
  1524  0664  00A6               	movwf	__doprnt@f
  1525  0665  3035               	movlw	(low (printf@ap| 0))& (0+255)
  1526  0666  00B4               	movwf	??_printf+1
  1527  0667  0834               	movf	??_printf+1,w
  1528  0668  00A7               	movwf	__doprnt@ap
  1529  0669  3037               	movlw	(low (printf@pb| 0))& (0+255)
  1530  066A  120A  118A  2168  120A  118A  	fcall	__doprnt
  1531  066F                     l720:
  1532  066F  0008               	return
  1533  0670                     __end_of_printf:
  1534                           
  1535                           	psect	text4
  1536  0394                     __ptext4:	
  1537 ;; *************** function _division *****************
  1538 ;; Defined at:
  1539 ;;		line 198 in file "main.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  valor           1    wreg     unsigned char 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  valor           1    9[COMMON] unsigned char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      unsigned char 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0, pclath, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         0       0       0       0       0
  1554 ;;      Locals:         1       0       0       0       0
  1555 ;;      Temps:          0       3       0       0       0
  1556 ;;      Totals:         1       3       0       0       0
  1557 ;;Total ram usage:        4 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    2
  1560 ;; This function calls:
  1561 ;;		___awdiv
  1562 ;;		___awmod
  1563 ;; This function is called by:
  1564 ;;		_Text
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           
  1569                           ;psect for function _division
  1570  0394                     _division:
  1571                           
  1572                           ;incstack = 0
  1573                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  1574                           ;division@valor stored from wreg
  1575  0394  00F9               	movwf	division@valor
  1576  0395                     l1944:
  1577  0395  3064               	movlw	100
  1578  0396  00F2               	movwf	___awdiv@divisor
  1579  0397  3000               	movlw	0
  1580  0398  00F3               	movwf	___awdiv@divisor+1
  1581  0399  0879               	movf	division@valor,w
  1582  039A  1283               	bcf	3,5	;RP0=0, select bank0
  1583  039B  1303               	bcf	3,6	;RP1=0, select bank0
  1584  039C  00A4               	movwf	??_division
  1585  039D  01A5               	clrf	??_division+1
  1586  039E  0824               	movf	??_division,w
  1587  039F  00F4               	movwf	___awdiv@dividend
  1588  03A0  0825               	movf	??_division+1,w
  1589  03A1  00F5               	movwf	___awdiv@dividend+1
  1590  03A2  120A  118A  23FF  120A  118A  	fcall	___awdiv
  1591  03A7  0872               	movf	?___awdiv,w
  1592  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  1593  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  1594  03AA  00A6               	movwf	??_division+2
  1595  03AB  0826               	movf	??_division+2,w
  1596  03AC  00EC               	movwf	_centenas
  1597  03AD  3064               	movlw	100
  1598  03AE  00F2               	movwf	___awmod@divisor
  1599  03AF  3000               	movlw	0
  1600  03B0  00F3               	movwf	___awmod@divisor+1
  1601  03B1  0879               	movf	division@valor,w
  1602  03B2  00A4               	movwf	??_division
  1603  03B3  01A5               	clrf	??_division+1
  1604  03B4  0824               	movf	??_division,w
  1605  03B5  00F4               	movwf	___awmod@dividend
  1606  03B6  0825               	movf	??_division+1,w
  1607  03B7  00F5               	movwf	___awmod@dividend+1
  1608  03B8  120A  118A  2468  120A  118A  	fcall	___awmod
  1609  03BD  0872               	movf	?___awmod,w
  1610  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1611  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1612  03C0  00A6               	movwf	??_division+2
  1613  03C1  0826               	movf	??_division+2,w
  1614  03C2  00FB               	movwf	_residuo
  1615  03C3  300A               	movlw	10
  1616  03C4  00F2               	movwf	___awdiv@divisor
  1617  03C5  3000               	movlw	0
  1618  03C6  00F3               	movwf	___awdiv@divisor+1
  1619  03C7  087B               	movf	_residuo,w
  1620  03C8  00A4               	movwf	??_division
  1621  03C9  01A5               	clrf	??_division+1
  1622  03CA  0824               	movf	??_division,w
  1623  03CB  00F4               	movwf	___awdiv@dividend
  1624  03CC  0825               	movf	??_division+1,w
  1625  03CD  00F5               	movwf	___awdiv@dividend+1
  1626  03CE  120A  118A  23FF  120A  118A  	fcall	___awdiv
  1627  03D3  0872               	movf	?___awdiv,w
  1628  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1629  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1630  03D6  00A6               	movwf	??_division+2
  1631  03D7  0826               	movf	??_division+2,w
  1632  03D8  00EB               	movwf	_decenas
  1633  03D9  300A               	movlw	10
  1634  03DA  00F2               	movwf	___awmod@divisor
  1635  03DB  3000               	movlw	0
  1636  03DC  00F3               	movwf	___awmod@divisor+1
  1637  03DD  087B               	movf	_residuo,w
  1638  03DE  00A4               	movwf	??_division
  1639  03DF  01A5               	clrf	??_division+1
  1640  03E0  0824               	movf	??_division,w
  1641  03E1  00F4               	movwf	___awmod@dividend
  1642  03E2  0825               	movf	??_division+1,w
  1643  03E3  00F5               	movwf	___awmod@dividend+1
  1644  03E4  120A  118A  2468  120A  118A  	fcall	___awmod
  1645  03E9  0872               	movf	?___awmod,w
  1646  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  1647  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  1648  03EC  00A6               	movwf	??_division+2
  1649  03ED  0826               	movf	??_division+2,w
  1650  03EE  00EA               	movwf	_unidades
  1651  03EF                     l1946:
  1652  03EF  086C               	movf	_centenas,w
  1653  03F0  3E30               	addlw	48
  1654  03F1  00A4               	movwf	??_division
  1655  03F2  0824               	movf	??_division,w
  1656  03F3  00EC               	movwf	_centenas
  1657  03F4                     l1948:
  1658  03F4  086B               	movf	_decenas,w
  1659  03F5  3E30               	addlw	48
  1660  03F6  00A4               	movwf	??_division
  1661  03F7  0824               	movf	??_division,w
  1662  03F8  00EB               	movwf	_decenas
  1663  03F9                     l1950:
  1664  03F9  086A               	movf	_unidades,w
  1665  03FA  3E30               	addlw	48
  1666  03FB  00A4               	movwf	??_division
  1667  03FC  0824               	movf	??_division,w
  1668  03FD  00EA               	movwf	_unidades
  1669  03FE                     l154:
  1670  03FE  0008               	return
  1671  03FF                     __end_of_division:
  1672                           
  1673                           	psect	text5
  1674  0468                     __ptext5:	
  1675 ;; *************** function ___awmod *****************
  1676 ;; Defined at:
  1677 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  divisor         2    2[COMMON] int 
  1680 ;;  dividend        2    4[COMMON] int 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  sign            1    8[COMMON] unsigned char 
  1683 ;;  counter         1    7[COMMON] unsigned char 
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  2    2[COMMON] int 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         4       0       0       0       0
  1694 ;;      Locals:         2       0       0       0       0
  1695 ;;      Temps:          1       0       0       0       0
  1696 ;;      Totals:         7       0       0       0       0
  1697 ;;Total ram usage:        7 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    1
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_division
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function ___awmod
  1709  0468                     ___awmod:
  1710  0468                     l1548:	
  1711                           ;incstack = 0
  1712                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1713                           
  1714  0468  01F8               	clrf	___awmod@sign
  1715  0469                     l1550:
  1716  0469  1FF5               	btfss	___awmod@dividend+1,7
  1717  046A  2C6C               	goto	u1181
  1718  046B  2C6D               	goto	u1180
  1719  046C                     u1181:
  1720  046C  2C74               	goto	l1556
  1721  046D                     u1180:
  1722  046D                     l1552:
  1723  046D  09F4               	comf	___awmod@dividend,f
  1724  046E  09F5               	comf	___awmod@dividend+1,f
  1725  046F  0AF4               	incf	___awmod@dividend,f
  1726  0470  1903               	skipnz
  1727  0471  0AF5               	incf	___awmod@dividend+1,f
  1728  0472                     l1554:
  1729  0472  01F8               	clrf	___awmod@sign
  1730  0473  0AF8               	incf	___awmod@sign,f
  1731  0474                     l1556:
  1732  0474  1FF3               	btfss	___awmod@divisor+1,7
  1733  0475  2C77               	goto	u1191
  1734  0476  2C78               	goto	u1190
  1735  0477                     u1191:
  1736  0477  2C7D               	goto	l1560
  1737  0478                     u1190:
  1738  0478                     l1558:
  1739  0478  09F2               	comf	___awmod@divisor,f
  1740  0479  09F3               	comf	___awmod@divisor+1,f
  1741  047A  0AF2               	incf	___awmod@divisor,f
  1742  047B  1903               	skipnz
  1743  047C  0AF3               	incf	___awmod@divisor+1,f
  1744  047D                     l1560:
  1745  047D  0872               	movf	___awmod@divisor,w
  1746  047E  0473               	iorwf	___awmod@divisor+1,w
  1747  047F  1903               	btfsc	3,2
  1748  0480  2C82               	goto	u1201
  1749  0481  2C83               	goto	u1200
  1750  0482                     u1201:
  1751  0482  2CB2               	goto	l1578
  1752  0483                     u1200:
  1753  0483                     l1562:
  1754  0483  01F7               	clrf	___awmod@counter
  1755  0484  0AF7               	incf	___awmod@counter,f
  1756  0485  2C91               	goto	l1568
  1757  0486                     l1564:
  1758  0486  3001               	movlw	1
  1759  0487                     u1215:
  1760  0487  1003               	clrc
  1761  0488  0DF2               	rlf	___awmod@divisor,f
  1762  0489  0DF3               	rlf	___awmod@divisor+1,f
  1763  048A  3EFF               	addlw	-1
  1764  048B  1D03               	skipz
  1765  048C  2C87               	goto	u1215
  1766  048D                     l1566:
  1767  048D  3001               	movlw	1
  1768  048E  00F6               	movwf	??___awmod
  1769  048F  0876               	movf	??___awmod,w
  1770  0490  07F7               	addwf	___awmod@counter,f
  1771  0491                     l1568:
  1772  0491  1FF3               	btfss	___awmod@divisor+1,7
  1773  0492  2C94               	goto	u1221
  1774  0493  2C95               	goto	u1220
  1775  0494                     u1221:
  1776  0494  2C86               	goto	l1564
  1777  0495                     u1220:
  1778  0495                     l1570:
  1779  0495  0873               	movf	___awmod@divisor+1,w
  1780  0496  0275               	subwf	___awmod@dividend+1,w
  1781  0497  1D03               	skipz
  1782  0498  2C9B               	goto	u1235
  1783  0499  0872               	movf	___awmod@divisor,w
  1784  049A  0274               	subwf	___awmod@dividend,w
  1785  049B                     u1235:
  1786  049B  1C03               	skipc
  1787  049C  2C9E               	goto	u1231
  1788  049D  2C9F               	goto	u1230
  1789  049E                     u1231:
  1790  049E  2CA5               	goto	l1574
  1791  049F                     u1230:
  1792  049F                     l1572:
  1793  049F  0872               	movf	___awmod@divisor,w
  1794  04A0  02F4               	subwf	___awmod@dividend,f
  1795  04A1  0873               	movf	___awmod@divisor+1,w
  1796  04A2  1C03               	skipc
  1797  04A3  03F5               	decf	___awmod@dividend+1,f
  1798  04A4  02F5               	subwf	___awmod@dividend+1,f
  1799  04A5                     l1574:
  1800  04A5  3001               	movlw	1
  1801  04A6                     u1245:
  1802  04A6  1003               	clrc
  1803  04A7  0CF3               	rrf	___awmod@divisor+1,f
  1804  04A8  0CF2               	rrf	___awmod@divisor,f
  1805  04A9  3EFF               	addlw	-1
  1806  04AA  1D03               	skipz
  1807  04AB  2CA6               	goto	u1245
  1808  04AC                     l1576:
  1809  04AC  3001               	movlw	1
  1810  04AD  02F7               	subwf	___awmod@counter,f
  1811  04AE  1D03               	btfss	3,2
  1812  04AF  2CB1               	goto	u1251
  1813  04B0  2CB2               	goto	u1250
  1814  04B1                     u1251:
  1815  04B1  2C95               	goto	l1570
  1816  04B2                     u1250:
  1817  04B2                     l1578:
  1818  04B2  0878               	movf	___awmod@sign,w
  1819  04B3  1903               	btfsc	3,2
  1820  04B4  2CB6               	goto	u1261
  1821  04B5  2CB7               	goto	u1260
  1822  04B6                     u1261:
  1823  04B6  2CBC               	goto	l1582
  1824  04B7                     u1260:
  1825  04B7                     l1580:
  1826  04B7  09F4               	comf	___awmod@dividend,f
  1827  04B8  09F5               	comf	___awmod@dividend+1,f
  1828  04B9  0AF4               	incf	___awmod@dividend,f
  1829  04BA  1903               	skipnz
  1830  04BB  0AF5               	incf	___awmod@dividend+1,f
  1831  04BC                     l1582:
  1832  04BC  0875               	movf	___awmod@dividend+1,w
  1833  04BD  00F3               	movwf	?___awmod+1
  1834  04BE  0874               	movf	___awmod@dividend,w
  1835  04BF  00F2               	movwf	?___awmod
  1836  04C0                     l409:
  1837  04C0  0008               	return
  1838  04C1                     __end_of___awmod:
  1839                           
  1840                           	psect	text6
  1841  03FF                     __ptext6:	
  1842 ;; *************** function ___awdiv *****************
  1843 ;; Defined at:
  1844 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  divisor         2    2[COMMON] int 
  1847 ;;  dividend        2    4[COMMON] int 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  quotient        2    2[BANK0 ] int 
  1850 ;;  sign            1    1[BANK0 ] unsigned char 
  1851 ;;  counter         1    0[BANK0 ] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  2    2[COMMON] int 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         4       0       0       0       0
  1862 ;;      Locals:         0       4       0       0       0
  1863 ;;      Temps:          1       0       0       0       0
  1864 ;;      Totals:         5       4       0       0       0
  1865 ;;Total ram usage:        9 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    1
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_division
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           
  1876                           ;psect for function ___awdiv
  1877  03FF                     ___awdiv:
  1878  03FF                     l1900:	
  1879                           ;incstack = 0
  1880                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1881                           
  1882  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1884  0401  01A1               	clrf	___awdiv@sign
  1885  0402                     l1902:
  1886  0402  1FF3               	btfss	___awdiv@divisor+1,7
  1887  0403  2C05               	goto	u1611
  1888  0404  2C06               	goto	u1610
  1889  0405                     u1611:
  1890  0405  2C0D               	goto	l1908
  1891  0406                     u1610:
  1892  0406                     l1904:
  1893  0406  09F2               	comf	___awdiv@divisor,f
  1894  0407  09F3               	comf	___awdiv@divisor+1,f
  1895  0408  0AF2               	incf	___awdiv@divisor,f
  1896  0409  1903               	skipnz
  1897  040A  0AF3               	incf	___awdiv@divisor+1,f
  1898  040B                     l1906:
  1899  040B  01A1               	clrf	___awdiv@sign
  1900  040C  0AA1               	incf	___awdiv@sign,f
  1901  040D                     l1908:
  1902  040D  1FF5               	btfss	___awdiv@dividend+1,7
  1903  040E  2C10               	goto	u1621
  1904  040F  2C11               	goto	u1620
  1905  0410                     u1621:
  1906  0410  2C1A               	goto	l1914
  1907  0411                     u1620:
  1908  0411                     l1910:
  1909  0411  09F4               	comf	___awdiv@dividend,f
  1910  0412  09F5               	comf	___awdiv@dividend+1,f
  1911  0413  0AF4               	incf	___awdiv@dividend,f
  1912  0414  1903               	skipnz
  1913  0415  0AF5               	incf	___awdiv@dividend+1,f
  1914  0416                     l1912:
  1915  0416  3001               	movlw	1
  1916  0417  00F6               	movwf	??___awdiv
  1917  0418  0876               	movf	??___awdiv,w
  1918  0419  06A1               	xorwf	___awdiv@sign,f
  1919  041A                     l1914:
  1920  041A  01A2               	clrf	___awdiv@quotient
  1921  041B  01A3               	clrf	___awdiv@quotient+1
  1922  041C                     l1916:
  1923  041C  0872               	movf	___awdiv@divisor,w
  1924  041D  0473               	iorwf	___awdiv@divisor+1,w
  1925  041E  1903               	btfsc	3,2
  1926  041F  2C21               	goto	u1631
  1927  0420  2C22               	goto	u1630
  1928  0421                     u1631:
  1929  0421  2C59               	goto	l1936
  1930  0422                     u1630:
  1931  0422                     l1918:
  1932  0422  01A0               	clrf	___awdiv@counter
  1933  0423  0AA0               	incf	___awdiv@counter,f
  1934  0424  2C30               	goto	l1924
  1935  0425                     l1920:
  1936  0425  3001               	movlw	1
  1937  0426                     u1645:
  1938  0426  1003               	clrc
  1939  0427  0DF2               	rlf	___awdiv@divisor,f
  1940  0428  0DF3               	rlf	___awdiv@divisor+1,f
  1941  0429  3EFF               	addlw	-1
  1942  042A  1D03               	skipz
  1943  042B  2C26               	goto	u1645
  1944  042C                     l1922:
  1945  042C  3001               	movlw	1
  1946  042D  00F6               	movwf	??___awdiv
  1947  042E  0876               	movf	??___awdiv,w
  1948  042F  07A0               	addwf	___awdiv@counter,f
  1949  0430                     l1924:
  1950  0430  1FF3               	btfss	___awdiv@divisor+1,7
  1951  0431  2C33               	goto	u1651
  1952  0432  2C34               	goto	u1650
  1953  0433                     u1651:
  1954  0433  2C25               	goto	l1920
  1955  0434                     u1650:
  1956  0434                     l1926:
  1957  0434  3001               	movlw	1
  1958  0435                     u1665:
  1959  0435  1003               	clrc
  1960  0436  0DA2               	rlf	___awdiv@quotient,f
  1961  0437  0DA3               	rlf	___awdiv@quotient+1,f
  1962  0438  3EFF               	addlw	-1
  1963  0439  1D03               	skipz
  1964  043A  2C35               	goto	u1665
  1965  043B  0873               	movf	___awdiv@divisor+1,w
  1966  043C  0275               	subwf	___awdiv@dividend+1,w
  1967  043D  1D03               	skipz
  1968  043E  2C41               	goto	u1675
  1969  043F  0872               	movf	___awdiv@divisor,w
  1970  0440  0274               	subwf	___awdiv@dividend,w
  1971  0441                     u1675:
  1972  0441  1C03               	skipc
  1973  0442  2C44               	goto	u1671
  1974  0443  2C45               	goto	u1670
  1975  0444                     u1671:
  1976  0444  2C4C               	goto	l1932
  1977  0445                     u1670:
  1978  0445                     l1928:
  1979  0445  0872               	movf	___awdiv@divisor,w
  1980  0446  02F4               	subwf	___awdiv@dividend,f
  1981  0447  0873               	movf	___awdiv@divisor+1,w
  1982  0448  1C03               	skipc
  1983  0449  03F5               	decf	___awdiv@dividend+1,f
  1984  044A  02F5               	subwf	___awdiv@dividend+1,f
  1985  044B                     l1930:
  1986  044B  1422               	bsf	___awdiv@quotient,0
  1987  044C                     l1932:
  1988  044C  3001               	movlw	1
  1989  044D                     u1685:
  1990  044D  1003               	clrc
  1991  044E  0CF3               	rrf	___awdiv@divisor+1,f
  1992  044F  0CF2               	rrf	___awdiv@divisor,f
  1993  0450  3EFF               	addlw	-1
  1994  0451  1D03               	skipz
  1995  0452  2C4D               	goto	u1685
  1996  0453                     l1934:
  1997  0453  3001               	movlw	1
  1998  0454  02A0               	subwf	___awdiv@counter,f
  1999  0455  1D03               	btfss	3,2
  2000  0456  2C58               	goto	u1691
  2001  0457  2C59               	goto	u1690
  2002  0458                     u1691:
  2003  0458  2C34               	goto	l1926
  2004  0459                     u1690:
  2005  0459                     l1936:
  2006  0459  0821               	movf	___awdiv@sign,w
  2007  045A  1903               	btfsc	3,2
  2008  045B  2C5D               	goto	u1701
  2009  045C  2C5E               	goto	u1700
  2010  045D                     u1701:
  2011  045D  2C63               	goto	l1940
  2012  045E                     u1700:
  2013  045E                     l1938:
  2014  045E  09A2               	comf	___awdiv@quotient,f
  2015  045F  09A3               	comf	___awdiv@quotient+1,f
  2016  0460  0AA2               	incf	___awdiv@quotient,f
  2017  0461  1903               	skipnz
  2018  0462  0AA3               	incf	___awdiv@quotient+1,f
  2019  0463                     l1940:
  2020  0463  0823               	movf	___awdiv@quotient+1,w
  2021  0464  00F3               	movwf	?___awdiv+1
  2022  0465  0822               	movf	___awdiv@quotient,w
  2023  0466  00F2               	movwf	?___awdiv
  2024  0467                     l396:
  2025  0467  0008               	return
  2026  0468                     __end_of___awdiv:
  2027                           
  2028                           	psect	text7
  2029  0542                     __ptext7:	
  2030 ;; *************** function _concat *****************
  2031 ;; Defined at:
  2032 ;;		line 210 in file "main.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  a               2   26[BANK0 ] int 
  2035 ;;  b               2   28[BANK0 ] int 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  s1             20   51[BANK0 ] unsigned char [20]
  2038 ;;  s2             20   31[BANK0 ] unsigned char [20]
  2039 ;;  c               2   71[BANK0 ] int 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  2   26[BANK0 ] int 
  2042 ;; Registers used:
  2043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2049 ;;      Params:         0       4       0       0       0
  2050 ;;      Locals:         0      42       0       0       0
  2051 ;;      Temps:          0       1       0       0       0
  2052 ;;      Totals:         0      47       0       0       0
  2053 ;;Total ram usage:       47 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    4
  2056 ;; This function calls:
  2057 ;;		_atoi
  2058 ;;		_sprintf
  2059 ;;		_strcat
  2060 ;; This function is called by:
  2061 ;;		_Text
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           
  2066                           ;psect for function _concat
  2067  0542                     _concat:
  2068  0542                     l1962:	
  2069                           ;incstack = 0
  2070                           ; Regs used in _concat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2071                           
  2072  0542  306B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2073  0543  1283               	bcf	3,5	;RP0=0, select bank0
  2074  0544  1303               	bcf	3,6	;RP1=0, select bank0
  2075  0545  00BE               	movwf	??_concat
  2076  0546  083E               	movf	??_concat,w
  2077  0547  00B1               	movwf	sprintf@f
  2078  0548  083B               	movf	concat@a+1,w
  2079  0549  00B3               	movwf	?_sprintf+2
  2080  054A  083A               	movf	concat@a,w
  2081  054B  00B2               	movwf	?_sprintf+1
  2082  054C  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2083  054D  120A  118A  2634  120A  118A  	fcall	_sprintf
  2084  0552  306B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2085  0553  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0554  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0555  00BE               	movwf	??_concat
  2088  0556  083E               	movf	??_concat,w
  2089  0557  00B1               	movwf	sprintf@f
  2090  0558  083D               	movf	concat@b+1,w
  2091  0559  00B3               	movwf	?_sprintf+2
  2092  055A  083C               	movf	concat@b,w
  2093  055B  00B2               	movwf	?_sprintf+1
  2094  055C  303F               	movlw	(low (concat@s2| 0))& (0+255)
  2095  055D  120A  118A  2634  120A  118A  	fcall	_sprintf
  2096  0562                     l1964:
  2097  0562  303F               	movlw	(low (concat@s2| 0))& (0+255)
  2098  0563  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0564  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0565  00BE               	movwf	??_concat
  2101  0566  083E               	movf	??_concat,w
  2102  0567  00F2               	movwf	strcat@from
  2103  0568  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2104  0569  120A  118A  25E6  120A  118A  	fcall	_strcat
  2105  056E                     l1966:
  2106  056E  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2107  056F  120A  118A  229E  120A  118A  	fcall	_atoi
  2108  0574  0879               	movf	?_atoi+1,w
  2109  0575  1283               	bcf	3,5	;RP0=0, select bank0
  2110  0576  1303               	bcf	3,6	;RP1=0, select bank0
  2111  0577  00E8               	movwf	concat@c+1
  2112  0578  0878               	movf	?_atoi,w
  2113  0579  00E7               	movwf	concat@c
  2114  057A                     l1968:
  2115  057A  0868               	movf	concat@c+1,w
  2116  057B  00BB               	movwf	?_concat+1
  2117  057C  0867               	movf	concat@c,w
  2118  057D  00BA               	movwf	?_concat
  2119  057E                     l157:
  2120  057E  0008               	return
  2121  057F                     __end_of_concat:
  2122                           
  2123                           	psect	text8
  2124  05E6                     __ptext8:	
  2125 ;; *************** function _strcat *****************
  2126 ;; Defined at:
  2127 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  to              1    wreg     PTR unsigned char 
  2130 ;;		 -> concat@s1(20), 
  2131 ;;  from            1    2[COMMON] PTR const unsigned char 
  2132 ;;		 -> concat@s2(20), 
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  to              1    4[COMMON] PTR unsigned char 
  2135 ;;		 -> concat@s1(20), 
  2136 ;;  cp              1    5[COMMON] PTR unsigned char 
  2137 ;;		 -> concat@s1(20), 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  1    wreg      PTR unsigned char 
  2140 ;; Registers used:
  2141 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2147 ;;      Params:         1       0       0       0       0
  2148 ;;      Locals:         2       0       0       0       0
  2149 ;;      Temps:          1       0       0       0       0
  2150 ;;      Totals:         4       0       0       0       0
  2151 ;;Total ram usage:        4 bytes
  2152 ;; Hardware stack levels used:    1
  2153 ;; Hardware stack levels required when called:    1
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_concat
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           
  2162                           ;psect for function _strcat
  2163  05E6                     _strcat:
  2164                           
  2165                           ;incstack = 0
  2166                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2167                           ;strcat@to stored from wreg
  2168  05E6  00F4               	movwf	strcat@to
  2169  05E7                     l1460:
  2170  05E7  0874               	movf	strcat@to,w
  2171  05E8  00F3               	movwf	??_strcat
  2172  05E9  0873               	movf	??_strcat,w
  2173  05EA  00F5               	movwf	strcat@cp
  2174  05EB  2DF0               	goto	l1464
  2175  05EC                     l1462:
  2176  05EC  3001               	movlw	1
  2177  05ED  00F3               	movwf	??_strcat
  2178  05EE  0873               	movf	??_strcat,w
  2179  05EF  07F5               	addwf	strcat@cp,f
  2180  05F0                     l1464:
  2181  05F0  0875               	movf	strcat@cp,w
  2182  05F1  0084               	movwf	4
  2183  05F2  1383               	bcf	3,7	;select IRP bank0
  2184  05F3  0800               	movf	0,w
  2185  05F4  1D03               	btfss	3,2
  2186  05F5  2DF7               	goto	u1001
  2187  05F6  2DF8               	goto	u1000
  2188  05F7                     u1001:
  2189  05F7  2DEC               	goto	l1462
  2190  05F8                     u1000:
  2191  05F8  2E01               	goto	l1468
  2192  05F9                     l1466:
  2193  05F9  3001               	movlw	1
  2194  05FA  00F3               	movwf	??_strcat
  2195  05FB  0873               	movf	??_strcat,w
  2196  05FC  07F5               	addwf	strcat@cp,f
  2197  05FD  3001               	movlw	1
  2198  05FE  00F3               	movwf	??_strcat
  2199  05FF  0873               	movf	??_strcat,w
  2200  0600  07F2               	addwf	strcat@from,f
  2201  0601                     l1468:
  2202  0601  0872               	movf	strcat@from,w
  2203  0602  0084               	movwf	4
  2204  0603  0800               	movf	0,w
  2205  0604  00F3               	movwf	??_strcat
  2206  0605  0875               	movf	strcat@cp,w
  2207  0606  0084               	movwf	4
  2208  0607  0873               	movf	??_strcat,w
  2209  0608  0080               	movwf	0
  2210  0609  0800               	movf	0,w
  2211  060A  1D03               	btfss	3,2
  2212  060B  2E0D               	goto	u1011
  2213  060C  2E0E               	goto	u1010
  2214  060D                     u1011:
  2215  060D  2DF9               	goto	l1466
  2216  060E                     u1010:
  2217  060E                     l774:
  2218  060E  0008               	return
  2219  060F                     __end_of_strcat:
  2220                           
  2221                           	psect	text9
  2222  0634                     __ptext9:	
  2223 ;; *************** function _sprintf *****************
  2224 ;; Defined at:
  2225 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  wh              1    wreg     PTR unsigned char 
  2228 ;;		 -> concat@s2(20), concat@s1(20), 
  2229 ;;  f               1   17[BANK0 ] PTR const unsigned char 
  2230 ;;		 -> STR_6(3), STR_5(3), 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  wh              1   22[BANK0 ] PTR unsigned char 
  2233 ;;		 -> concat@s2(20), concat@s1(20), 
  2234 ;;  pb              2   24[BANK0 ] struct __prbuf
  2235 ;;  ap              1   23[BANK0 ] PTR void [1]
  2236 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  2   17[BANK0 ] int 
  2239 ;; Registers used:
  2240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2246 ;;      Params:         0       3       0       0       0
  2247 ;;      Locals:         0       4       0       0       0
  2248 ;;      Temps:          0       2       0       0       0
  2249 ;;      Totals:         0       9       0       0       0
  2250 ;;Total ram usage:        9 bytes
  2251 ;; Hardware stack levels used:    1
  2252 ;; Hardware stack levels required when called:    3
  2253 ;; This function calls:
  2254 ;;		__doprnt
  2255 ;; This function is called by:
  2256 ;;		_concat
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           
  2261                           ;psect for function _sprintf
  2262  0634                     _sprintf:
  2263                           
  2264                           ;incstack = 0
  2265                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2266                           ;sprintf@wh stored from wreg
  2267  0634  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0635  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0636  00B6               	movwf	sprintf@wh
  2270  0637                     l1854:
  2271  0637  0836               	movf	sprintf@wh,w
  2272  0638  00B4               	movwf	??_sprintf
  2273  0639  0834               	movf	??_sprintf,w
  2274  063A  00B8               	movwf	sprintf@pb
  2275  063B                     l1856:
  2276  063B  01B9               	clrf	low ((sprintf@pb| 0+1))
  2277  063C                     l1858:
  2278  063C  3032               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2279  063D  00B4               	movwf	??_sprintf
  2280  063E  0834               	movf	??_sprintf,w
  2281  063F  00B7               	movwf	sprintf@ap
  2282  0640                     l1860:
  2283  0640  0831               	movf	sprintf@f,w
  2284  0641  00B4               	movwf	??_sprintf
  2285  0642  0834               	movf	??_sprintf,w
  2286  0643  00A6               	movwf	__doprnt@f
  2287  0644  3037               	movlw	(low (sprintf@ap| 0))& (0+255)
  2288  0645  00B5               	movwf	??_sprintf+1
  2289  0646  0835               	movf	??_sprintf+1,w
  2290  0647  00A7               	movwf	__doprnt@ap
  2291  0648  3038               	movlw	(low (sprintf@pb| 0))& (0+255)
  2292  0649  120A  118A  2168  120A  118A  	fcall	__doprnt
  2293  064E                     l1862:
  2294  064E  1283               	bcf	3,5	;RP0=0, select bank0
  2295  064F  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0650  0838               	movf	sprintf@pb,w
  2297  0651  0084               	movwf	4
  2298  0652  1383               	bcf	3,7	;select IRP bank0
  2299  0653  0180               	clrf	0
  2300  0654                     l765:
  2301  0654  0008               	return
  2302  0655                     __end_of_sprintf:
  2303                           
  2304                           	psect	text10
  2305  0168                     __ptext10:	
  2306 ;; *************** function __doprnt *****************
  2307 ;; Defined at:
  2308 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  pb              1    wreg     PTR struct __prbuf
  2311 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2312 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  2313 ;;		 -> STR_6(3), STR_5(3), STR_4(27), STR_3(48), 
  2314 ;;		 -> STR_2(2), STR_1(21), 
  2315 ;;  ap              1    7[BANK0 ] PTR PTR void 
  2316 ;;		 -> sprintf@ap(1), printf@ap(1), 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  pb              1   16[BANK0 ] PTR struct __prbuf
  2319 ;;		 -> sprintf@pb(2), printf@pb(2), 
  2320 ;;  tmpval          4    0        struct .
  2321 ;;  val             2   13[BANK0 ] unsigned int 
  2322 ;;  cp              2    0        PTR const unsigned char 
  2323 ;;  len             2    0        unsigned int 
  2324 ;;  c               1   15[BANK0 ] unsigned char 
  2325 ;;  prec            1   12[BANK0 ] char 
  2326 ;;  flag            1   11[BANK0 ] unsigned char 
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  2    6[BANK0 ] int 
  2329 ;; Registers used:
  2330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2336 ;;      Params:         0       2       0       0       0
  2337 ;;      Locals:         0       6       0       0       0
  2338 ;;      Temps:          0       3       0       0       0
  2339 ;;      Totals:         0      11       0       0       0
  2340 ;;Total ram usage:       11 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    2
  2343 ;; This function calls:
  2344 ;;		Absolute function
  2345 ;;		___lwdiv
  2346 ;;		___lwmod
  2347 ;;		_putch
  2348 ;; This function is called by:
  2349 ;;		_printf
  2350 ;;		_sprintf
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           
  2355                           ;psect for function __doprnt
  2356  0168                     __doprnt:
  2357                           
  2358                           ;incstack = 0
  2359                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2360                           ;__doprnt@pb stored from wreg
  2361  0168  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0169  1303               	bcf	3,6	;RP1=0, select bank0
  2363  016A  00B0               	movwf	__doprnt@pb
  2364  016B                     l1782:
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  2367  016B  2A87               	goto	l1844
  2368  016C                     l1784:
  2369                           
  2370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2371  016C  3025               	movlw	37
  2372  016D  062F               	xorwf	__doprnt@c,w
  2373  016E  1903               	btfsc	3,2
  2374  016F  2971               	goto	u1451
  2375  0170  2972               	goto	u1450
  2376  0171                     u1451:
  2377  0171  2998               	goto	l1794
  2378  0172                     u1450:
  2379  0172                     l1786:
  2380  0172  0A30               	incf	__doprnt@pb,w
  2381  0173  0084               	movwf	4
  2382  0174  1383               	bcf	3,7	;select IRP bank0
  2383  0175  0800               	movf	0,w
  2384  0176  1903               	btfsc	3,2
  2385  0177  2979               	goto	u1461
  2386  0178  297A               	goto	u1460
  2387  0179                     u1461:
  2388  0179  2989               	goto	l1790
  2389  017A                     u1460:
  2390  017A                     l1788:
  2391  017A  082F               	movf	__doprnt@c,w
  2392  017B  00A8               	movwf	??__doprnt
  2393  017C  0828               	movf	??__doprnt,w
  2394  017D  00F2               	movwf	putch@data
  2395  017E  0A30               	incf	__doprnt@pb,w
  2396  017F  0084               	movwf	4
  2397  0180  0800               	movf	0,w
  2398  0181  120A  118A  2027  120A  118A  	fcall	fptable
  2399  0186  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0187  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0188  296B               	goto	l1782
  2402  0189                     l1790:
  2403  0189  082F               	movf	__doprnt@c,w
  2404  018A  00A8               	movwf	??__doprnt
  2405  018B  0830               	movf	__doprnt@pb,w
  2406  018C  0084               	movwf	4
  2407  018D  0800               	movf	0,w
  2408  018E  0084               	movwf	4
  2409  018F  0828               	movf	??__doprnt,w
  2410  0190  0080               	movwf	0
  2411  0191                     l1792:
  2412  0191  3001               	movlw	1
  2413  0192  00A8               	movwf	??__doprnt
  2414  0193  0830               	movf	__doprnt@pb,w
  2415  0194  0084               	movwf	4
  2416  0195  0828               	movf	??__doprnt,w
  2417  0196  0780               	addwf	0,f
  2418  0197  296B               	goto	l1782
  2419  0198                     l1794:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2422  0198  01AB               	clrf	__doprnt@flag
  2423  0199                     l1798:	
  2424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2425                           
  2426  0199  3001               	movlw	1
  2427  019A  07A6               	addwf	__doprnt@f,f
  2428  019B  30FF               	movlw	-1
  2429  019C  0726               	addwf	__doprnt@f,w
  2430  019D  0084               	movwf	4
  2431  019E  120A  118A  2321  120A  118A  	fcall	stringdir
  2432  01A3  00AF               	movwf	__doprnt@c
  2433  01A4  00A8               	movwf	??__doprnt
  2434  01A5  01A9               	clrf	??__doprnt+1
  2435                           
  2436                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2437                           ; Switch size 1, requested type "simple"
  2438                           ; Number of cases is 1, Range of values is 0 to 0
  2439                           ; switch strategies available:
  2440                           ; Name         Instructions Cycles
  2441                           ; simple_byte            4     3 (average)
  2442                           ; direct_byte           11     8 (fixed)
  2443                           ; jumptable            260     6 (fixed)
  2444                           ;	Chosen strategy is simple_byte
  2445  01A6  0829               	movf	??__doprnt+1,w
  2446  01A7  3A00               	xorlw	0	; case 0
  2447  01A8  1903               	skipnz
  2448  01A9  29AB               	goto	l2048
  2449  01AA  2A87               	goto	l1844
  2450  01AB                     l2048:
  2451                           
  2452                           ; Switch size 1, requested type "simple"
  2453                           ; Number of cases is 3, Range of values is 0 to 105
  2454                           ; switch strategies available:
  2455                           ; Name         Instructions Cycles
  2456                           ; simple_byte           10     6 (average)
  2457                           ; jumptable            260     6 (fixed)
  2458                           ;	Chosen strategy is simple_byte
  2459  01AB  0828               	movf	??__doprnt,w
  2460  01AC  3A00               	xorlw	0	; case 0
  2461  01AD  1903               	skipnz
  2462  01AE  2A9B               	goto	l1846
  2463  01AF  3A64               	xorlw	100	; case 100
  2464  01B0  1903               	skipnz
  2465  01B1  29B6               	goto	l1800
  2466  01B2  3A0D               	xorlw	13	; case 105
  2467  01B3  1903               	skipnz
  2468  01B4  29B6               	goto	l1800
  2469  01B5  2A87               	goto	l1844
  2470  01B6                     l1800:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2473  01B6  0827               	movf	__doprnt@ap,w
  2474  01B7  0084               	movwf	4
  2475  01B8  1383               	bcf	3,7	;select IRP bank0
  2476  01B9  0800               	movf	0,w
  2477  01BA  00A8               	movwf	??__doprnt
  2478  01BB  3002               	movlw	2
  2479  01BC  0780               	addwf	0,f
  2480  01BD  0828               	movf	??__doprnt,w
  2481  01BE  0084               	movwf	4
  2482  01BF  0800               	movf	0,w
  2483  01C0  00AD               	movwf	__doprnt@val
  2484  01C1  0A84               	incf	4,f
  2485  01C2  0800               	movf	0,w
  2486  01C3  00AE               	movwf	__doprnt@val+1
  2487  01C4                     l1802:
  2488                           
  2489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2490  01C4  1FAE               	btfss	__doprnt@val+1,7
  2491  01C5  29C7               	goto	u1471
  2492  01C6  29C8               	goto	u1470
  2493  01C7                     u1471:
  2494  01C7  29D1               	goto	l1808
  2495  01C8                     u1470:
  2496  01C8                     l1804:
  2497                           
  2498                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2499  01C8  3003               	movlw	3
  2500  01C9  00A8               	movwf	??__doprnt
  2501  01CA  0828               	movf	??__doprnt,w
  2502  01CB  04AB               	iorwf	__doprnt@flag,f
  2503  01CC                     l1806:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2506  01CC  09AD               	comf	__doprnt@val,f
  2507  01CD  09AE               	comf	__doprnt@val+1,f
  2508  01CE  0AAD               	incf	__doprnt@val,f
  2509  01CF  1903               	skipnz
  2510  01D0  0AAE               	incf	__doprnt@val+1,f
  2511  01D1                     l1808:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2514  01D1  01AF               	clrf	__doprnt@c
  2515  01D2  0AAF               	incf	__doprnt@c,f
  2516  01D3                     l1814:
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2519  01D3  082F               	movf	__doprnt@c,w
  2520  01D4  00A8               	movwf	??__doprnt
  2521  01D5  0728               	addwf	??__doprnt,w
  2522  01D6  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2523  01D7  0084               	movwf	4
  2524  01D8  120A  118A  2321  120A  118A  	fcall	stringdir
  2525  01DD  00A9               	movwf	??__doprnt+1
  2526  01DE  120A  118A  2321  120A  118A  	fcall	stringdir
  2527  01E3  00AA               	movwf	??__doprnt+2
  2528  01E4  082A               	movf	??__doprnt+2,w
  2529  01E5  022E               	subwf	__doprnt@val+1,w
  2530  01E6  1D03               	skipz
  2531  01E7  29EA               	goto	u1485
  2532  01E8  0829               	movf	??__doprnt+1,w
  2533  01E9  022D               	subwf	__doprnt@val,w
  2534  01EA                     u1485:
  2535  01EA  1803               	skipnc
  2536  01EB  29ED               	goto	u1481
  2537  01EC  29EE               	goto	u1480
  2538  01ED                     u1481:
  2539  01ED  29EF               	goto	l1818
  2540  01EE                     u1480:
  2541  01EE  29F9               	goto	l1820
  2542  01EF                     l1818:
  2543  01EF  3001               	movlw	1
  2544  01F0  00A8               	movwf	??__doprnt
  2545  01F1  0828               	movf	??__doprnt,w
  2546  01F2  07AF               	addwf	__doprnt@c,f
  2547  01F3  3005               	movlw	5
  2548  01F4  062F               	xorwf	__doprnt@c,w
  2549  01F5  1D03               	btfss	3,2
  2550  01F6  29F8               	goto	u1491
  2551  01F7  29F9               	goto	u1490
  2552  01F8                     u1491:
  2553  01F8  29D3               	goto	l1814
  2554  01F9                     u1490:
  2555  01F9                     l1820:
  2556                           
  2557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2558  01F9  082B               	movf	__doprnt@flag,w
  2559  01FA  3903               	andlw	3
  2560  01FB  1903               	btfsc	3,2
  2561  01FC  29FE               	goto	u1501
  2562  01FD  29FF               	goto	u1500
  2563  01FE                     u1501:
  2564  01FE  2A22               	goto	l1830
  2565  01FF                     u1500:
  2566  01FF                     l1822:
  2567  01FF  0A30               	incf	__doprnt@pb,w
  2568  0200  0084               	movwf	4
  2569  0201  1383               	bcf	3,7	;select IRP bank0
  2570  0202  0800               	movf	0,w
  2571  0203  1903               	btfsc	3,2
  2572  0204  2A06               	goto	u1511
  2573  0205  2A07               	goto	u1510
  2574  0206                     u1511:
  2575  0206  2A14               	goto	l1826
  2576  0207                     u1510:
  2577  0207                     l1824:
  2578  0207  302D               	movlw	45
  2579  0208  00A8               	movwf	??__doprnt
  2580  0209  0828               	movf	??__doprnt,w
  2581  020A  00F2               	movwf	putch@data
  2582  020B  0A30               	incf	__doprnt@pb,w
  2583  020C  0084               	movwf	4
  2584  020D  0800               	movf	0,w
  2585  020E  120A  118A  2027  120A  118A  	fcall	fptable
  2586  0213  2A22               	goto	l1830
  2587  0214                     l1826:
  2588  0214  302D               	movlw	45
  2589  0215  00A8               	movwf	??__doprnt
  2590  0216  0830               	movf	__doprnt@pb,w
  2591  0217  0084               	movwf	4
  2592  0218  0800               	movf	0,w
  2593  0219  0084               	movwf	4
  2594  021A  0828               	movf	??__doprnt,w
  2595  021B  0080               	movwf	0
  2596  021C                     l1828:
  2597  021C  3001               	movlw	1
  2598  021D  00A8               	movwf	??__doprnt
  2599  021E  0830               	movf	__doprnt@pb,w
  2600  021F  0084               	movwf	4
  2601  0220  0828               	movf	??__doprnt,w
  2602  0221  0780               	addwf	0,f
  2603  0222                     l1830:
  2604                           
  2605                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2606  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2607  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2608  0224  082F               	movf	__doprnt@c,w
  2609  0225  00A8               	movwf	??__doprnt
  2610  0226  0828               	movf	??__doprnt,w
  2611  0227  00AC               	movwf	__doprnt@prec
  2612                           
  2613                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2614  0228  2A7C               	goto	l1842
  2615  0229                     l1832:
  2616                           
  2617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2618  0229  300A               	movlw	10
  2619  022A  00A0               	movwf	___lwmod@divisor
  2620  022B  3000               	movlw	0
  2621  022C  00A1               	movwf	___lwmod@divisor+1
  2622  022D  082C               	movf	__doprnt@prec,w
  2623  022E  00A8               	movwf	??__doprnt
  2624  022F  0728               	addwf	??__doprnt,w
  2625  0230  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2626  0231  0084               	movwf	4
  2627  0232  120A  118A  2321  120A  118A  	fcall	stringdir
  2628  0237  00F2               	movwf	___lwdiv@divisor
  2629  0238  120A  118A  2321  120A  118A  	fcall	stringdir
  2630  023D  00F3               	movwf	___lwdiv@divisor+1
  2631  023E  082E               	movf	__doprnt@val+1,w
  2632  023F  00F5               	movwf	___lwdiv@dividend+1
  2633  0240  082D               	movf	__doprnt@val,w
  2634  0241  00F4               	movwf	___lwdiv@dividend
  2635  0242  120A  118A  24C1  120A  118A  	fcall	___lwdiv
  2636  0247  0873               	movf	?___lwdiv+1,w
  2637  0248  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0249  1303               	bcf	3,6	;RP1=0, select bank0
  2639  024A  00A3               	movwf	___lwmod@dividend+1
  2640  024B  0872               	movf	?___lwdiv,w
  2641  024C  00A2               	movwf	___lwmod@dividend
  2642  024D  120A  118A  257F  120A  118A  	fcall	___lwmod
  2643  0252  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0253  1303               	bcf	3,6	;RP1=0, select bank0
  2645  0254  0820               	movf	?___lwmod,w
  2646  0255  3E30               	addlw	48
  2647  0256  00A9               	movwf	??__doprnt+1
  2648  0257  0829               	movf	??__doprnt+1,w
  2649  0258  00AF               	movwf	__doprnt@c
  2650  0259                     l1834:
  2651  0259  0A30               	incf	__doprnt@pb,w
  2652  025A  0084               	movwf	4
  2653  025B  1383               	bcf	3,7	;select IRP bank0
  2654  025C  0800               	movf	0,w
  2655  025D  1903               	btfsc	3,2
  2656  025E  2A60               	goto	u1521
  2657  025F  2A61               	goto	u1520
  2658  0260                     u1521:
  2659  0260  2A6E               	goto	l1838
  2660  0261                     u1520:
  2661  0261                     l1836:
  2662  0261  082F               	movf	__doprnt@c,w
  2663  0262  00A8               	movwf	??__doprnt
  2664  0263  0828               	movf	??__doprnt,w
  2665  0264  00F2               	movwf	putch@data
  2666  0265  0A30               	incf	__doprnt@pb,w
  2667  0266  0084               	movwf	4
  2668  0267  0800               	movf	0,w
  2669  0268  120A  118A  2027  120A  118A  	fcall	fptable
  2670  026D  2A7C               	goto	l1842
  2671  026E                     l1838:
  2672  026E  082F               	movf	__doprnt@c,w
  2673  026F  00A8               	movwf	??__doprnt
  2674  0270  0830               	movf	__doprnt@pb,w
  2675  0271  0084               	movwf	4
  2676  0272  0800               	movf	0,w
  2677  0273  0084               	movwf	4
  2678  0274  0828               	movf	??__doprnt,w
  2679  0275  0080               	movwf	0
  2680  0276                     l1840:
  2681  0276  3001               	movlw	1
  2682  0277  00A8               	movwf	??__doprnt
  2683  0278  0830               	movf	__doprnt@pb,w
  2684  0279  0084               	movwf	4
  2685  027A  0828               	movf	??__doprnt,w
  2686  027B  0780               	addwf	0,f
  2687  027C                     l1842:
  2688                           
  2689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2690  027C  30FF               	movlw	255
  2691  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2692  027E  1303               	bcf	3,6	;RP1=0, select bank0
  2693  027F  00A8               	movwf	??__doprnt
  2694  0280  0828               	movf	??__doprnt,w
  2695  0281  07AC               	addwf	__doprnt@prec,f
  2696  0282  0A2C               	incf	__doprnt@prec,w
  2697  0283  1D03               	btfss	3,2
  2698  0284  2A86               	goto	u1531
  2699  0285  2A87               	goto	u1530
  2700  0286                     u1531:
  2701  0286  2A29               	goto	l1832
  2702  0287                     u1530:
  2703  0287                     l1844:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2706  0287  3001               	movlw	1
  2707  0288  1283               	bcf	3,5	;RP0=0, select bank0
  2708  0289  1303               	bcf	3,6	;RP1=0, select bank0
  2709  028A  07A6               	addwf	__doprnt@f,f
  2710  028B  30FF               	movlw	-1
  2711  028C  0726               	addwf	__doprnt@f,w
  2712  028D  0084               	movwf	4
  2713  028E  120A  118A  2321  120A  118A  	fcall	stringdir
  2714  0293  00A8               	movwf	??__doprnt
  2715  0294  0828               	movf	??__doprnt,w
  2716  0295  00AF               	movwf	__doprnt@c
  2717  0296  082F               	movf	__doprnt@c,w
  2718  0297  1D03               	btfss	3,2
  2719  0298  2A9A               	goto	u1541
  2720  0299  2A9B               	goto	u1540
  2721  029A                     u1541:
  2722  029A  296C               	goto	l1784
  2723  029B                     u1540:
  2724  029B                     l1846:
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  2727  029B  01A6               	clrf	?__doprnt
  2728  029C  01A7               	clrf	?__doprnt+1
  2729  029D                     l758:
  2730  029D  0008               	return
  2731  029E                     __end_of__doprnt:
  2732                           
  2733                           	psect	text11
  2734  069C                     __ptext11:	
  2735 ;; *************** function _putch *****************
  2736 ;; Defined at:
  2737 ;;		line 82 in file "main.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  data            1    2[COMMON] unsigned char 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;		None
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		wreg
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2751 ;;      Params:         1       0       0       0       0
  2752 ;;      Locals:         0       0       0       0       0
  2753 ;;      Temps:          0       0       0       0       0
  2754 ;;      Totals:         1       0       0       0       0
  2755 ;;Total ram usage:        1 bytes
  2756 ;; Hardware stack levels used:    1
  2757 ;; Hardware stack levels required when called:    1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_printf
  2762 ;;		__doprnt
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           
  2767                           ;psect for function _putch
  2768  069C                     _putch:
  2769  069C                     l1296:	
  2770                           ;incstack = 0
  2771                           ; Regs used in _putch: [wreg]
  2772                           
  2773  069C                     l119:	
  2774                           ;main.c: 83: 
  2775                           
  2776  069C  1283               	bcf	3,5	;RP0=0, select bank0
  2777  069D  1303               	bcf	3,6	;RP1=0, select bank0
  2778  069E  1E0C               	btfss	12,4	;volatile
  2779  069F  2EA1               	goto	u701
  2780  06A0  2EA2               	goto	u700
  2781  06A1                     u701:
  2782  06A1  2E9C               	goto	l119
  2783  06A2                     u700:
  2784  06A2                     l1298:
  2785                           
  2786                           ;main.c: 84: 
  2787  06A2  0872               	movf	putch@data,w
  2788  06A3  0099               	movwf	25	;volatile
  2789  06A4                     l122:
  2790  06A4  0008               	return
  2791  06A5                     __end_of_putch:
  2792                           
  2793                           	psect	text12
  2794  057F                     __ptext12:	
  2795 ;; *************** function ___lwmod *****************
  2796 ;; Defined at:
  2797 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  divisor         2    0[BANK0 ] unsigned int 
  2800 ;;  dividend        2    2[BANK0 ] unsigned int 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  counter         1    5[BANK0 ] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  2    0[BANK0 ] unsigned int 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2812 ;;      Params:         0       4       0       0       0
  2813 ;;      Locals:         0       1       0       0       0
  2814 ;;      Temps:          0       1       0       0       0
  2815 ;;      Totals:         0       6       0       0       0
  2816 ;;Total ram usage:        6 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    1
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		__doprnt
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           
  2827                           ;psect for function ___lwmod
  2828  057F                     ___lwmod:
  2829  057F                     l1760:	
  2830                           ;incstack = 0
  2831                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2832                           
  2833  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2834  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2835  0581  0820               	movf	___lwmod@divisor,w
  2836  0582  0421               	iorwf	___lwmod@divisor+1,w
  2837  0583  1903               	btfsc	3,2
  2838  0584  2D86               	goto	u1391
  2839  0585  2D87               	goto	u1390
  2840  0586                     u1391:
  2841  0586  2DB6               	goto	l1778
  2842  0587                     u1390:
  2843  0587                     l1762:
  2844  0587  01A5               	clrf	___lwmod@counter
  2845  0588  0AA5               	incf	___lwmod@counter,f
  2846  0589  2D95               	goto	l1768
  2847  058A                     l1764:
  2848  058A  3001               	movlw	1
  2849  058B                     u1405:
  2850  058B  1003               	clrc
  2851  058C  0DA0               	rlf	___lwmod@divisor,f
  2852  058D  0DA1               	rlf	___lwmod@divisor+1,f
  2853  058E  3EFF               	addlw	-1
  2854  058F  1D03               	skipz
  2855  0590  2D8B               	goto	u1405
  2856  0591                     l1766:
  2857  0591  3001               	movlw	1
  2858  0592  00A4               	movwf	??___lwmod
  2859  0593  0824               	movf	??___lwmod,w
  2860  0594  07A5               	addwf	___lwmod@counter,f
  2861  0595                     l1768:
  2862  0595  1FA1               	btfss	___lwmod@divisor+1,7
  2863  0596  2D98               	goto	u1411
  2864  0597  2D99               	goto	u1410
  2865  0598                     u1411:
  2866  0598  2D8A               	goto	l1764
  2867  0599                     u1410:
  2868  0599                     l1770:
  2869  0599  0821               	movf	___lwmod@divisor+1,w
  2870  059A  0223               	subwf	___lwmod@dividend+1,w
  2871  059B  1D03               	skipz
  2872  059C  2D9F               	goto	u1425
  2873  059D  0820               	movf	___lwmod@divisor,w
  2874  059E  0222               	subwf	___lwmod@dividend,w
  2875  059F                     u1425:
  2876  059F  1C03               	skipc
  2877  05A0  2DA2               	goto	u1421
  2878  05A1  2DA3               	goto	u1420
  2879  05A2                     u1421:
  2880  05A2  2DA9               	goto	l1774
  2881  05A3                     u1420:
  2882  05A3                     l1772:
  2883  05A3  0820               	movf	___lwmod@divisor,w
  2884  05A4  02A2               	subwf	___lwmod@dividend,f
  2885  05A5  0821               	movf	___lwmod@divisor+1,w
  2886  05A6  1C03               	skipc
  2887  05A7  03A3               	decf	___lwmod@dividend+1,f
  2888  05A8  02A3               	subwf	___lwmod@dividend+1,f
  2889  05A9                     l1774:
  2890  05A9  3001               	movlw	1
  2891  05AA                     u1435:
  2892  05AA  1003               	clrc
  2893  05AB  0CA1               	rrf	___lwmod@divisor+1,f
  2894  05AC  0CA0               	rrf	___lwmod@divisor,f
  2895  05AD  3EFF               	addlw	-1
  2896  05AE  1D03               	skipz
  2897  05AF  2DAA               	goto	u1435
  2898  05B0                     l1776:
  2899  05B0  3001               	movlw	1
  2900  05B1  02A5               	subwf	___lwmod@counter,f
  2901  05B2  1D03               	btfss	3,2
  2902  05B3  2DB5               	goto	u1441
  2903  05B4  2DB6               	goto	u1440
  2904  05B5                     u1441:
  2905  05B5  2D99               	goto	l1770
  2906  05B6                     u1440:
  2907  05B6                     l1778:
  2908  05B6  0823               	movf	___lwmod@dividend+1,w
  2909  05B7  00A1               	movwf	?___lwmod+1
  2910  05B8  0822               	movf	___lwmod@dividend,w
  2911  05B9  00A0               	movwf	?___lwmod
  2912  05BA                     l525:
  2913  05BA  0008               	return
  2914  05BB                     __end_of___lwmod:
  2915                           
  2916                           	psect	text13
  2917  04C1                     __ptext13:	
  2918 ;; *************** function ___lwdiv *****************
  2919 ;; Defined at:
  2920 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  divisor         2    2[COMMON] unsigned int 
  2923 ;;  dividend        2    4[COMMON] unsigned int 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  quotient        2    7[COMMON] unsigned int 
  2926 ;;  counter         1    9[COMMON] unsigned char 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  2    2[COMMON] unsigned int 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2936 ;;      Params:         4       0       0       0       0
  2937 ;;      Locals:         3       0       0       0       0
  2938 ;;      Temps:          1       0       0       0       0
  2939 ;;      Totals:         8       0       0       0       0
  2940 ;;Total ram usage:        8 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    1
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		__doprnt
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function ___lwdiv
  2952  04C1                     ___lwdiv:
  2953  04C1                     l1302:	
  2954                           ;incstack = 0
  2955                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2956                           
  2957  04C1  01F7               	clrf	___lwdiv@quotient
  2958  04C2  01F8               	clrf	___lwdiv@quotient+1
  2959  04C3                     l1304:
  2960  04C3  0872               	movf	___lwdiv@divisor,w
  2961  04C4  0473               	iorwf	___lwdiv@divisor+1,w
  2962  04C5  1903               	btfsc	3,2
  2963  04C6  2CC8               	goto	u711
  2964  04C7  2CC9               	goto	u710
  2965  04C8                     u711:
  2966  04C8  2D00               	goto	l1324
  2967  04C9                     u710:
  2968  04C9                     l1306:
  2969  04C9  01F9               	clrf	___lwdiv@counter
  2970  04CA  0AF9               	incf	___lwdiv@counter,f
  2971  04CB  2CD7               	goto	l1312
  2972  04CC                     l1308:
  2973  04CC  3001               	movlw	1
  2974  04CD                     u725:
  2975  04CD  1003               	clrc
  2976  04CE  0DF2               	rlf	___lwdiv@divisor,f
  2977  04CF  0DF3               	rlf	___lwdiv@divisor+1,f
  2978  04D0  3EFF               	addlw	-1
  2979  04D1  1D03               	skipz
  2980  04D2  2CCD               	goto	u725
  2981  04D3                     l1310:
  2982  04D3  3001               	movlw	1
  2983  04D4  00F6               	movwf	??___lwdiv
  2984  04D5  0876               	movf	??___lwdiv,w
  2985  04D6  07F9               	addwf	___lwdiv@counter,f
  2986  04D7                     l1312:
  2987  04D7  1FF3               	btfss	___lwdiv@divisor+1,7
  2988  04D8  2CDA               	goto	u731
  2989  04D9  2CDB               	goto	u730
  2990  04DA                     u731:
  2991  04DA  2CCC               	goto	l1308
  2992  04DB                     u730:
  2993  04DB                     l1314:
  2994  04DB  3001               	movlw	1
  2995  04DC                     u745:
  2996  04DC  1003               	clrc
  2997  04DD  0DF7               	rlf	___lwdiv@quotient,f
  2998  04DE  0DF8               	rlf	___lwdiv@quotient+1,f
  2999  04DF  3EFF               	addlw	-1
  3000  04E0  1D03               	skipz
  3001  04E1  2CDC               	goto	u745
  3002  04E2  0873               	movf	___lwdiv@divisor+1,w
  3003  04E3  0275               	subwf	___lwdiv@dividend+1,w
  3004  04E4  1D03               	skipz
  3005  04E5  2CE8               	goto	u755
  3006  04E6  0872               	movf	___lwdiv@divisor,w
  3007  04E7  0274               	subwf	___lwdiv@dividend,w
  3008  04E8                     u755:
  3009  04E8  1C03               	skipc
  3010  04E9  2CEB               	goto	u751
  3011  04EA  2CEC               	goto	u750
  3012  04EB                     u751:
  3013  04EB  2CF3               	goto	l1320
  3014  04EC                     u750:
  3015  04EC                     l1316:
  3016  04EC  0872               	movf	___lwdiv@divisor,w
  3017  04ED  02F4               	subwf	___lwdiv@dividend,f
  3018  04EE  0873               	movf	___lwdiv@divisor+1,w
  3019  04EF  1C03               	skipc
  3020  04F0  03F5               	decf	___lwdiv@dividend+1,f
  3021  04F1  02F5               	subwf	___lwdiv@dividend+1,f
  3022  04F2                     l1318:
  3023  04F2  1477               	bsf	___lwdiv@quotient,0
  3024  04F3                     l1320:
  3025  04F3  3001               	movlw	1
  3026  04F4                     u765:
  3027  04F4  1003               	clrc
  3028  04F5  0CF3               	rrf	___lwdiv@divisor+1,f
  3029  04F6  0CF2               	rrf	___lwdiv@divisor,f
  3030  04F7  3EFF               	addlw	-1
  3031  04F8  1D03               	skipz
  3032  04F9  2CF4               	goto	u765
  3033  04FA                     l1322:
  3034  04FA  3001               	movlw	1
  3035  04FB  02F9               	subwf	___lwdiv@counter,f
  3036  04FC  1D03               	btfss	3,2
  3037  04FD  2CFF               	goto	u771
  3038  04FE  2D00               	goto	u770
  3039  04FF                     u771:
  3040  04FF  2CDB               	goto	l1314
  3041  0500                     u770:
  3042  0500                     l1324:
  3043  0500  0878               	movf	___lwdiv@quotient+1,w
  3044  0501  00F3               	movwf	?___lwdiv+1
  3045  0502  0877               	movf	___lwdiv@quotient,w
  3046  0503  00F2               	movwf	?___lwdiv
  3047  0504                     l515:
  3048  0504  0008               	return
  3049  0505                     __end_of___lwdiv:
  3050                           
  3051                           	psect	text14
  3052  029E                     __ptext14:	
  3053 ;; *************** function _atoi *****************
  3054 ;; Defined at:
  3055 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;  s               1    wreg     PTR const unsigned char 
  3058 ;;		 -> concat@s1(20), 
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  3061 ;;		 -> concat@s1(20), 
  3062 ;;  a               2    3[BANK0 ] int 
  3063 ;;  sign            1    2[BANK0 ] unsigned char 
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  2    8[COMMON] int 
  3066 ;; Registers used:
  3067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3073 ;;      Params:         2       0       0       0       0
  3074 ;;      Locals:         0       4       0       0       0
  3075 ;;      Temps:          0       2       0       0       0
  3076 ;;      Totals:         2       6       0       0       0
  3077 ;;Total ram usage:        8 bytes
  3078 ;; Hardware stack levels used:    1
  3079 ;; Hardware stack levels required when called:    2
  3080 ;; This function calls:
  3081 ;;		___wmul
  3082 ;;		_isdigit
  3083 ;; This function is called by:
  3084 ;;		_concat
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           
  3089                           ;psect for function _atoi
  3090  029E                     _atoi:
  3091                           
  3092                           ;incstack = 0
  3093                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3094                           ;atoi@s stored from wreg
  3095  029E  1283               	bcf	3,5	;RP0=0, select bank0
  3096  029F  1303               	bcf	3,6	;RP1=0, select bank0
  3097  02A0  00A5               	movwf	atoi@s
  3098  02A1                     l1866:
  3099  02A1  2AA6               	goto	l1870
  3100  02A2                     l1868:
  3101  02A2  3001               	movlw	1
  3102  02A3  00A0               	movwf	??_atoi
  3103  02A4  0820               	movf	??_atoi,w
  3104  02A5  07A5               	addwf	atoi@s,f
  3105  02A6                     l1870:
  3106  02A6  0825               	movf	atoi@s,w
  3107  02A7  0084               	movwf	4
  3108  02A8  3020               	movlw	32
  3109  02A9  1383               	bcf	3,7	;select IRP bank0
  3110  02AA  0600               	xorwf	0,w
  3111  02AB  1903               	btfsc	3,2
  3112  02AC  2AAE               	goto	u1551
  3113  02AD  2AAF               	goto	u1550
  3114  02AE                     u1551:
  3115  02AE  2AA2               	goto	l1868
  3116  02AF                     u1550:
  3117  02AF                     l1872:
  3118  02AF  0825               	movf	atoi@s,w
  3119  02B0  0084               	movwf	4
  3120  02B1  3009               	movlw	9
  3121  02B2  0600               	xorwf	0,w
  3122  02B3  1903               	btfsc	3,2
  3123  02B4  2AB6               	goto	u1561
  3124  02B5  2AB7               	goto	u1560
  3125  02B6                     u1561:
  3126  02B6  2AA2               	goto	l1868
  3127  02B7                     u1560:
  3128  02B7                     l1874:
  3129  02B7  01A3               	clrf	atoi@a
  3130  02B8  01A4               	clrf	atoi@a+1
  3131  02B9  01A2               	clrf	atoi@sign
  3132  02BA                     l1876:
  3133  02BA  0825               	movf	atoi@s,w
  3134  02BB  0084               	movwf	4
  3135  02BC  302D               	movlw	45
  3136  02BD  0600               	xorwf	0,w
  3137  02BE  1D03               	btfss	3,2
  3138  02BF  2AC1               	goto	u1571
  3139  02C0  2AC2               	goto	u1570
  3140  02C1                     u1571:
  3141  02C1  2ACB               	goto	l1880
  3142  02C2                     u1570:
  3143  02C2                     l1878:
  3144  02C2  3001               	movlw	1
  3145  02C3  00A0               	movwf	??_atoi
  3146  02C4  0820               	movf	??_atoi,w
  3147  02C5  07A2               	addwf	atoi@sign,f
  3148  02C6  3001               	movlw	1
  3149  02C7  00A0               	movwf	??_atoi
  3150  02C8  0820               	movf	??_atoi,w
  3151  02C9  07A5               	addwf	atoi@s,f
  3152  02CA  2AFD               	goto	l1888
  3153  02CB                     l1880:
  3154  02CB  0825               	movf	atoi@s,w
  3155  02CC  0084               	movwf	4
  3156  02CD  302B               	movlw	43
  3157  02CE  0600               	xorwf	0,w
  3158  02CF  1D03               	btfss	3,2
  3159  02D0  2AD2               	goto	u1581
  3160  02D1  2AD3               	goto	u1580
  3161  02D2                     u1581:
  3162  02D2  2AFD               	goto	l1888
  3163  02D3                     u1580:
  3164  02D3                     l1882:
  3165  02D3  3001               	movlw	1
  3166  02D4  00A0               	movwf	??_atoi
  3167  02D5  0820               	movf	??_atoi,w
  3168  02D6  07A5               	addwf	atoi@s,f
  3169  02D7  2AFD               	goto	l1888
  3170  02D8                     l1884:
  3171  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  3172  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  3173  02DA  0825               	movf	atoi@s,w
  3174  02DB  0084               	movwf	4
  3175  02DC  0824               	movf	atoi@a+1,w
  3176  02DD  00F3               	movwf	___wmul@multiplier+1
  3177  02DE  0823               	movf	atoi@a,w
  3178  02DF  00F2               	movwf	___wmul@multiplier
  3179  02E0  300A               	movlw	10
  3180  02E1  00F4               	movwf	___wmul@multiplicand
  3181  02E2  3000               	movlw	0
  3182  02E3  00F5               	movwf	___wmul@multiplicand+1
  3183  02E4  120A  118A  260F  120A  118A  	fcall	___wmul
  3184  02E9  1383               	bcf	3,7	;select IRP bank0
  3185  02EA  0800               	movf	0,w
  3186  02EB  0772               	addwf	?___wmul,w
  3187  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  3188  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  3189  02EE  00A0               	movwf	??_atoi
  3190  02EF  3000               	movlw	0
  3191  02F0  1803               	skipnc
  3192  02F1  3001               	movlw	1
  3193  02F2  0773               	addwf	?___wmul+1,w
  3194  02F3  00A1               	movwf	??_atoi+1
  3195  02F4  0820               	movf	??_atoi,w
  3196  02F5  3ED0               	addlw	208
  3197  02F6  00A3               	movwf	atoi@a
  3198  02F7  0821               	movf	??_atoi+1,w
  3199  02F8  1803               	skipnc
  3200  02F9  3E01               	addlw	1
  3201  02FA  3EFF               	addlw	255
  3202  02FB  00A4               	movwf	atoi@a+1
  3203  02FC  2AD3               	goto	l1882
  3204  02FD                     l1888:
  3205  02FD  0825               	movf	atoi@s,w
  3206  02FE  0084               	movwf	4
  3207  02FF  0800               	movf	0,w
  3208  0300  120A  118A  268A  120A  118A  	fcall	_isdigit
  3209  0305  1803               	btfsc	3,0
  3210  0306  2B08               	goto	u1591
  3211  0307  2B09               	goto	u1590
  3212  0308                     u1591:
  3213  0308  2AD8               	goto	l1884
  3214  0309                     u1590:
  3215  0309                     l1890:
  3216  0309  1283               	bcf	3,5	;RP0=0, select bank0
  3217  030A  1303               	bcf	3,6	;RP1=0, select bank0
  3218  030B  0822               	movf	atoi@sign,w
  3219  030C  1903               	btfsc	3,2
  3220  030D  2B0F               	goto	u1601
  3221  030E  2B10               	goto	u1600
  3222  030F                     u1601:
  3223  030F  2B1C               	goto	l1896
  3224  0310                     u1600:
  3225  0310                     l1892:
  3226  0310  0923               	comf	atoi@a,w
  3227  0311  00A0               	movwf	??_atoi
  3228  0312  0924               	comf	atoi@a+1,w
  3229  0313  00A1               	movwf	??_atoi+1
  3230  0314  0AA0               	incf	??_atoi,f
  3231  0315  1903               	skipnz
  3232  0316  0AA1               	incf	??_atoi+1,f
  3233  0317  0820               	movf	??_atoi,w
  3234  0318  00F8               	movwf	?_atoi
  3235  0319  0821               	movf	??_atoi+1,w
  3236  031A  00F9               	movwf	?_atoi+1
  3237  031B  2B20               	goto	l706
  3238  031C                     l1896:
  3239  031C  0824               	movf	atoi@a+1,w
  3240  031D  00F9               	movwf	?_atoi+1
  3241  031E  0823               	movf	atoi@a,w
  3242  031F  00F8               	movwf	?_atoi
  3243  0320                     l706:
  3244  0320  0008               	return
  3245  0321                     __end_of_atoi:
  3246                           
  3247                           	psect	text15
  3248  068A                     __ptext15:	
  3249 ;; *************** function _isdigit *****************
  3250 ;; Defined at:
  3251 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  c               1    wreg     unsigned char 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;  c               1    3[COMMON] unsigned char 
  3256 ;; Return value:  Size  Location     Type
  3257 ;;		None               void
  3258 ;; Registers used:
  3259 ;;		wreg, status,2, status,0
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3265 ;;      Params:         0       0       0       0       0
  3266 ;;      Locals:         2       0       0       0       0
  3267 ;;      Temps:          0       0       0       0       0
  3268 ;;      Totals:         2       0       0       0       0
  3269 ;;Total ram usage:        2 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; Hardware stack levels required when called:    1
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_atoi
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           
  3280                           ;psect for function _isdigit
  3281  068A                     _isdigit:
  3282                           
  3283                           ;incstack = 0
  3284                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3285                           ;isdigit@c stored from wreg
  3286  068A  00F3               	movwf	isdigit@c
  3287  068B                     l1364:
  3288  068B  01F2               	clrf	_isdigit$932
  3289  068C                     l1366:
  3290  068C  303A               	movlw	58
  3291  068D  0273               	subwf	isdigit@c,w
  3292  068E  1803               	skipnc
  3293  068F  2E91               	goto	u881
  3294  0690  2E92               	goto	u880
  3295  0691                     u881:
  3296  0691  2E9A               	goto	l1372
  3297  0692                     u880:
  3298  0692                     l1368:
  3299  0692  3030               	movlw	48
  3300  0693  0273               	subwf	isdigit@c,w
  3301  0694  1C03               	skipc
  3302  0695  2E97               	goto	u891
  3303  0696  2E98               	goto	u890
  3304  0697                     u891:
  3305  0697  2E9A               	goto	l1372
  3306  0698                     u890:
  3307  0698                     l1370:
  3308  0698  01F2               	clrf	_isdigit$932
  3309  0699  0AF2               	incf	_isdigit$932,f
  3310  069A                     l1372:
  3311  069A  0C72               	rrf	_isdigit$932,w
  3312  069B                     l711:
  3313  069B  0008               	return
  3314  069C                     __end_of_isdigit:
  3315                           
  3316                           	psect	text16
  3317  060F                     __ptext16:	
  3318 ;; *************** function ___wmul *****************
  3319 ;; Defined at:
  3320 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  multiplier      2    2[COMMON] unsigned int 
  3323 ;;  multiplicand    2    4[COMMON] unsigned int 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  product         2    6[COMMON] unsigned int 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  2    2[COMMON] unsigned int 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3335 ;;      Params:         4       0       0       0       0
  3336 ;;      Locals:         2       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0
  3338 ;;      Totals:         6       0       0       0       0
  3339 ;;Total ram usage:        6 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    1
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		_atoi
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           
  3350                           ;psect for function ___wmul
  3351  060F                     ___wmul:
  3352  060F                     l1350:	
  3353                           ;incstack = 0
  3354                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3355                           
  3356  060F  01F6               	clrf	___wmul@product
  3357  0610  01F7               	clrf	___wmul@product+1
  3358  0611                     l1352:
  3359  0611  1C72               	btfss	___wmul@multiplier,0
  3360  0612  2E14               	goto	u841
  3361  0613  2E15               	goto	u840
  3362  0614                     u841:
  3363  0614  2E1B               	goto	l243
  3364  0615                     u840:
  3365  0615                     l1354:
  3366  0615  0874               	movf	___wmul@multiplicand,w
  3367  0616  07F6               	addwf	___wmul@product,f
  3368  0617  1803               	skipnc
  3369  0618  0AF7               	incf	___wmul@product+1,f
  3370  0619  0875               	movf	___wmul@multiplicand+1,w
  3371  061A  07F7               	addwf	___wmul@product+1,f
  3372  061B                     l243:
  3373  061B  3001               	movlw	1
  3374  061C                     u855:
  3375  061C  1003               	clrc
  3376  061D  0DF4               	rlf	___wmul@multiplicand,f
  3377  061E  0DF5               	rlf	___wmul@multiplicand+1,f
  3378  061F  3EFF               	addlw	-1
  3379  0620  1D03               	skipz
  3380  0621  2E1C               	goto	u855
  3381  0622                     l1356:
  3382  0622  3001               	movlw	1
  3383  0623                     u865:
  3384  0623  1003               	clrc
  3385  0624  0CF3               	rrf	___wmul@multiplier+1,f
  3386  0625  0CF2               	rrf	___wmul@multiplier,f
  3387  0626  3EFF               	addlw	-1
  3388  0627  1D03               	skipz
  3389  0628  2E23               	goto	u865
  3390  0629                     l1358:
  3391  0629  0872               	movf	___wmul@multiplier,w
  3392  062A  0473               	iorwf	___wmul@multiplier+1,w
  3393  062B  1D03               	btfss	3,2
  3394  062C  2E2E               	goto	u871
  3395  062D  2E2F               	goto	u870
  3396  062E                     u871:
  3397  062E  2E11               	goto	l1352
  3398  062F                     u870:
  3399  062F                     l1360:
  3400  062F  0877               	movf	___wmul@product+1,w
  3401  0630  00F3               	movwf	?___wmul+1
  3402  0631  0876               	movf	___wmul@product,w
  3403  0632  00F2               	movwf	?___wmul
  3404  0633                     l245:
  3405  0633  0008               	return
  3406  0634                     __end_of___wmul:
  3407                           
  3408                           	psect	text17
  3409  05BB                     __ptext17:	
  3410 ;; *************** function _isr *****************
  3411 ;; Defined at:
  3412 ;;		line 49 in file "main.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3426 ;;      Params:         0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0
  3428 ;;      Temps:          2       0       0       0       0
  3429 ;;      Totals:         2       0       0       0       0
  3430 ;;Total ram usage:        2 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		Interrupt level 1
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           
  3440                           ;psect for function _isr
  3441  05BB                     _isr:
  3442  05BB                     i1l1720:
  3443                           
  3444                           ;main.c: 52: 
  3445  05BB  1C0B               	btfss	11,0	;volatile
  3446  05BC  2DBE               	goto	u136_21
  3447  05BD  2DBF               	goto	u136_20
  3448  05BE                     u136_21:
  3449  05BE  2DDF               	goto	i1l108
  3450  05BF                     u136_20:
  3451  05BF                     i1l1722:
  3452                           
  3453                           ;main.c: 53: ;main.c: 54: void setup(void){
  3454  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  3455  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  3456  05C1  1806               	btfsc	6,0	;volatile
  3457  05C2  2DC4               	goto	u137_21
  3458  05C3  2DC5               	goto	u137_20
  3459  05C4                     u137_21:
  3460  05C4  2DCF               	goto	i1l1726
  3461  05C5                     u137_20:
  3462  05C5                     i1l1724:
  3463                           
  3464                           ;main.c: 55: ;main.c: 56:     ANSEL = 0;
  3465  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  3466  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  3467  05C7  0824               	movf	_count^(0+128),w
  3468  05C8  3E01               	addlw	1
  3469  05C9  00A4               	movwf	_count^(0+128)
  3470  05CA  0825               	movf	(_count+1)^(0+128),w
  3471  05CB  1803               	skipnc
  3472  05CC  3E01               	addlw	1
  3473  05CD  3E00               	addlw	0
  3474  05CE  00A5               	movwf	(_count+1)^(0+128)
  3475  05CF                     i1l1726:
  3476                           
  3477                           ;main.c: 58: 
  3478  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3479  05D0  1886               	btfsc	6,1	;volatile
  3480  05D1  2DD3               	goto	u138_21
  3481  05D2  2DD4               	goto	u138_20
  3482  05D3                     u138_21:
  3483  05D3  2DDE               	goto	i1l1730
  3484  05D4                     u138_20:
  3485  05D4                     i1l1728:
  3486                           
  3487                           ;main.c: 59: ;main.c: 60:     TRISA = 0;
  3488  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3489  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  3490  05D6  0824               	movf	_count^(0+128),w
  3491  05D7  3EFF               	addlw	255
  3492  05D8  00A4               	movwf	_count^(0+128)
  3493  05D9  0825               	movf	(_count+1)^(0+128),w
  3494  05DA  1803               	skipnc
  3495  05DB  3E01               	addlw	1
  3496  05DC  3EFF               	addlw	255
  3497  05DD  00A5               	movwf	(_count+1)^(0+128)
  3498  05DE                     i1l1730:
  3499                           
  3500                           ;main.c: 62:     TRISBbits.TRISB1 = 1;
  3501  05DE  100B               	bcf	11,0	;volatile
  3502  05DF                     i1l108:
  3503  05DF  0871               	movf	??_isr+1,w
  3504  05E0  008A               	movwf	10
  3505  05E1  0E70               	swapf	??_isr,w
  3506  05E2  0083               	movwf	3
  3507  05E3  0EFE               	swapf	btemp,f
  3508  05E4  0E7E               	swapf	btemp,w
  3509  05E5  0009               	retfie
  3510  05E6                     __end_of_isr:
  3511  0002                     
  3512                           	psect	intentry
  3513  0004                     __pintentry:	
  3514                           ;incstack = 0
  3515                           ; Regs used in _isr: [wreg+status,2+status,0]
  3516                           
  3517  0004                     interrupt_function:
  3518  007E                     saved_w	set	btemp
  3519  0004  00FE               	movwf	btemp
  3520  0005  0E03               	swapf	3,w
  3521  0006  00F0               	movwf	??_isr
  3522  0007  080A               	movf	10,w
  3523  0008  00F1               	movwf	??_isr+1
  3524  0009  120A  118A  2DBB   	ljmp	_isr
  3525                           
  3526                           	psect	functab
  3527  0027                     __pfunctab:
  3528  0027                     __fptable:
  3529  0027                     fptable:
  3530  0027  00FF               	movwf	(btemp+1)& (0+127)
  3531  0028  3000               	movlw	high fptable
  3532  0029  008A               	movwf	10
  3533  002A  087F               	movf	(btemp+1)& (0+127),w
  3534  002B  0782               	addwf	2,f
  3535  002C                     fpbase:
  3536  002C  282C               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  3537  002D                     fp__putch:
  3538  002D  120A  118A  2E9C   	ljmp	_putch
  3539  0030                     __end_of__fptable:
  3540  007E                     btemp	set	126	;btemp
  3541  007E                     wtemp0	set	126
  3542                           
  3543                           	psect	config
  3544                           
  3545                           ;Config register CONFIG1 @ 0x2007
  3546                           ;	Oscillator Selection bits
  3547                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3548                           ;	Watchdog Timer Enable bit
  3549                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3550                           ;	Power-up Timer Enable bit
  3551                           ;	PWRTE = OFF, PWRT disabled
  3552                           ;	RE3/MCLR pin function select bit
  3553                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3554                           ;	Code Protection bit
  3555                           ;	CP = OFF, Program memory code protection is disabled
  3556                           ;	Data Code Protection bit
  3557                           ;	CPD = OFF, Data memory code protection is disabled
  3558                           ;	Brown Out Reset Selection bits
  3559                           ;	BOREN = OFF, BOR disabled
  3560                           ;	Internal External Switchover bit
  3561                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3562                           ;	Fail-Safe Clock Monitor Enabled bit
  3563                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3564                           ;	Low Voltage Programming Enable bit
  3565                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3566                           ;	In-Circuit Debugger Mode bit
  3567                           ;	DEBUG = 0x1, unprogrammed default
  3568  2007                     	org	8199
  3569  2007  20D4               	dw	8404
  3570                           
  3571                           ;Config register CONFIG2 @ 0x2008
  3572                           ;	Brown-out Reset Selection bit
  3573                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3574                           ;	Flash Program Memory Self Write Enable bits
  3575                           ;	WRT = OFF, Write protection off
  3576  2008                     	org	8200
  3577  2008  3FFF               	dw	16383

Data Sizes:
    Strings     99
    Constant    10
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     73      77
    BANK1            80      5      15
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 48
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[27]), STR_3(CODE[48]), 
		 -> STR_2(CODE[2]), STR_1(CODE[21]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 48
		 -> STR_4(CODE[27]), STR_3(CODE[48]), STR_2(CODE[2]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S934__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S934__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 


Critical Paths under _main in COMMON

    _Text->_division
    _division->___awmod
    _concat->_atoi
    __doprnt->___lwdiv
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _Text->_concat
    _printf->__doprnt
    _division->___awdiv
    _concat->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Text

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8551
                               _Text
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Text                                                 5     5      0    8551
                                              0 BANK1      5     5      0
                             _concat
                           _division
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     6      2    2661
                                             17 BANK0      8     6      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1467
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _concat                                              47    43      4    4423
                                             26 BANK0     47    43      4
                               _atoi
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     3      1     207
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _sprintf                                              9     6      3    2845
                                             17 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             19    17      2    2330
                                              6 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     0      1     181
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     682
                                              8 COMMON     2     0      2
                                              0 BANK0      6     6      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Text
     _concat
       _atoi
         ___wmul
         _isdigit
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
       _strcat
     _division
       ___awdiv
       ___awmod
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      68       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      5       F       7       18.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      68      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 16 14:50:27 2021

                      pc 0002             ___awdiv@sign 0021                       fsr 0004  
    ___wmul@multiplicand 0074                      l122 06A4                      l125 0541  
                    l119 069C                      l151 0167                      l144 00CA  
                    l136 00B1                      l129 009C                      l154 03FE  
                    l243 061B                      l245 0633                      l157 057E  
                    l409 04C0                      l515 0504                      l525 05BA  
                    l711 069B                      l720 066F                      l706 0320  
                    l396 0467                      l765 0654                      l758 029D  
                    l774 060E                      u700 06A2                      u701 06A1  
                    u710 04C9                      u711 04C8                      u730 04DB  
                    u731 04DA                      u725 04CD                      u750 04EC  
                    u751 04EB                      u840 0615                      u841 0614  
                    u745 04DC                      u770 0500                      u771 04FF  
                    u755 04E8                      u765 04F4                      u870 062F  
                    u871 062E                      u855 061C                      u880 0692  
                    u865 0623                      u881 0691                      u890 0698  
                    u891 0697                      _dec 007A                      _cen 0069  
                    _con 00A6                      _isr 05BB                      _var 00A7  
                    fsr0 0004                      _uni 00A8                      indf 0000  
           ___awmod@sign 0078                     l2000 00B5                     l2012 00E3  
                   l2004 00C4                     l2020 0670                     l1310 04D3  
                   l1302 04C1                     l2014 00E9                     l2006 00CE  
                   l2022 0675                     l1320 04F3                     l1312 04D7  
                   l1304 04C3                     l2016 0141                     l2008 00DD  
                   l2024 067B                     l1322 04FA                     l1314 04DB  
                   l1306 04C9                     l2018 014F                     l2026 0681  
                   l1316 04EC                     l1308 04CC                     l1324 0500  
                   l1350 060F                     l1318 04F2                     l1360 062F  
                   l1352 0611                     l2048 01AB                     l1354 0615  
                   l1370 0698                     l1356 0622                     l1372 069A  
                   l1364 068B                     l1460 05E7                     l1620 0516  
                   l1358 0629                     l1366 068C                     l1462 05EC  
                   l1550 0469                     l1630 051D                     l1622 0519  
                   l1614 0505                     l1368 0692                     l1296 069C  
                   l1800 01B6                     l1464 05F0                     l1560 047D  
                   l1552 046D                     l1640 0523                     l1632 051F  
                   l1624 051A                     l1616 050C                     l1298 06A2  
                   l1802 01C4                     l1466 05F9                     l1570 0495  
                   l1562 0483                     l1554 0472                     l1650 0530  
                   l1642 0526                     l1634 0520                     l1626 051B  
                   l1618 050D                     l1820 01F9                     l1804 01C8  
                   l1468 0601                     l1900 03FF                     l1580 04B7  
                   l1572 049F                     l1564 0486                     l1556 0474  
                   l1548 0468                     l1660 0539                     l1652 0531  
                   l1644 052A                     l1636 0521                     l1628 051C  
                   l1822 01FF                     l1830 0222                     l1814 01D3  
                   l1806 01CC                     l1910 0411                     l1902 0402  
                   l1582 04BC                     l1574 04A5                     l1566 048D  
                   l1558 0478                     l1670 0540                     l1662 053A  
                   l1654 0534                     l1646 052C                     l1638 0522  
                   l1760 057F                     l1840 0276                     l1832 0229  
                   l1824 0207                     l1808 01D1                     l1920 0425  
                   l1912 0416                     l1904 0406                     l1576 04AC  
                   l1568 0491                     l1664 053B                     l1656 0535  
                   l1648 052F                     l1770 0599                     l1762 0587  
                   l1834 0259                     l1842 027C                     l1826 0214  
                   l1818 01EF                     l1930 044B                     l1922 042C  
                   l1914 041A                     l1906 040B                     l1578 04B2  
                   l1666 053E                     l1658 0538                     l1772 05A3  
                   l1764 058A                     l1836 0261                     l1828 021C  
                   l1844 0287                     l1860 0640                     l1940 0463  
                   l1932 044C                     l1924 0430                     l1916 041C  
                   l1908 040D                     l1668 053F                     l1870 02A6  
                   l1774 05A9                     l1766 0591                     l1838 026E  
                   l1846 029B                     l1790 0189                     l1782 016B  
                   l1862 064E                     l1854 0637                     l1934 0453  
                   l1926 0434                     l1918 0422                     l1950 03F9  
                   l1880 02CB                     l1872 02AF                     l1776 05B0  
                   l1768 0595                     l1792 0191                     l1784 016C  
                   l1856 063B                     l1928 0445                     l1936 0459  
                   l1944 0395                     l1952 0658                     l1890 0309  
                   l1882 02D3                     l1874 02B7                     l1866 02A1  
                   l1778 05B6                     l1786 0172                     l1794 0198  
                   l1858 063C                     l1962 0542                     l1938 045E  
                   l1946 03EF                     l1954 0659                     l1892 0310  
                   l1884 02D8                     l1876 02BA                     l1868 02A2  
                   l1788 017A                     l1964 0562                     l1948 03F4  
                   l1956 065D                     l1980 005A                     l1972 0030  
                   l1878 02C2                     l1798 0199                     l1966 056E  
                   l1958 0661                     l1990 0082                     l1982 005E  
                   l1974 003E                     l1896 031C                     l1888 02FD  
                   l1968 057A                     l1992 0090                     l1984 006C  
                   l1976 0046                     l1994 0096                     l1986 0070  
                   l1978 004C                     l1996 00A2                     l1988 007E  
                   l1998 00AB                     ?_isr 0070                     STR_1 037C  
                   STR_2 037A                     STR_3 0331                     STR_4 0361  
                   STR_5 0391                     STR_6 0391                     u1000 05F8  
                   u1001 05F7                     u1010 060E                     u1011 060D  
                   u1200 0483                     u1201 0482                     u1220 0495  
                   u1221 0494                     u1230 049F                     u1231 049E  
                   u1215 0487                     u1410 0599                     u1250 04B2  
                   u1411 0598                     u1251 04B1                     u1235 049B  
                   u1420 05A3                     u1500 01FF                     u1260 04B7  
                   u1180 046D                     u1421 05A2                     u1405 058B  
                   u1501 01FE                     u1261 04B6                     u1245 04A6  
                   u1181 046C                     u1510 0207                     u1190 0478  
                   u1511 0206                     u1191 0477                     u1600 0310  
                   u1440 05B6                     u1520 0261                     u1601 030F  
                   u1441 05B5                     u1425 059F                     u1521 0260  
                   u1530 0287                     u1450 0172                     u1610 0406  
                   u1435 05AA                     u1531 0286                     u1451 0171  
                   u1611 0405                     u1540 029B                     u1460 017A  
                   u1700 045E                     u1620 0411                     u1541 029A  
                   u1461 0179                     u1701 045D                     u1621 0410  
                   u1550 02AF                     u1390 0587                     u1470 01C8  
                   u1630 0422                     u1710 00A2                     u1551 02AE  
                   u1391 0586                     u1471 01C7                     u1631 0421  
                   u1711 00A1                     u1560 02B7                     u1480 01EE  
                   u1720 00B1                     u1561 02B6                     u1481 01ED  
                   u1721 00B0                     u1570 02C2                     u1490 01F9  
                   u1650 0434                     u1730 00B5                     u1571 02C1  
                   u1491 01F8                     u1651 0433                     u1731 00B4  
                   u1580 02D3                     u1740 00C4                     u1581 02D2  
                   u1485 01EA                     u1645 0426                     u1741 00C3  
                   u1590 0309                     u1670 0445                     u1750 00CA  
                   u1591 0308                     u1671 0444                     u1751 00C9  
                   u1807 0038                     u1760 00CE                     u1665 0435  
                   u1761 00CD                     u1817 0054                     u1690 0459  
                   u1770 00DD                     u1691 0458                     u1675 0441  
                   u1771 00DC                     u1827 0066                     u1780 00E3  
                   u1685 044D                     u1781 00E2                     u1837 0078  
                   u1790 00E9                     u1791 00E8                     u1847 008A  
                   u1857 0149                     _RBIF 0058                     _RCIF 0065  
                   _TXIF 0064                     _WPUB 0095                     _Text 0030  
                   _atoi 029E                     _main 0670                     _full 00A0  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_Text 0070                    ?_atoi 0078                    ?_main 0070  
        __end_of___awdiv 0468          __end_of___awmod 04C1                    _ANSEL 0188  
        ___awdiv@divisor 0072          __end_of___lwdiv 0505                    i1l108 05DF  
        __end_of___lwmod 05BB          ___awdiv@counter 0020                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
        __end_of__doprnt 029E                    _TRISA 0085                    _TRISD 0088  
                  _TXREG 0019          __end_of_dpowers 0331                    _count 00A4  
        __end_of_isdigit 069C                    _valor 00A9                    atoi@a 0023  
                  _setup 0505                    atoi@s 0025                    _putch 069C  
                  fpbase 002C                    pclath 000A                    status 0003  
                  wtemp0 007E          __end_of_sprintf 0655          __initialization 000F  
           __end_of_Text 0168             __end_of_atoi 0321             __end_of_main 068A  
                 ??_Text 00AA                   ??_atoi 0020                   ??_main 007A  
       ___awdiv@dividend 0074                   ?_setup 0070                   ?_putch 0072  
                 _ANSELH 0189                   i1l1720 05BB                   i1l1730 05DE  
                 i1l1722 05BF                   i1l1724 05C5                   i1l1726 05CF  
                 i1l1728 05D4                   u136_20 05BF                   u136_21 05BE  
                 u137_20 05C5                   u137_21 05C4                   u138_20 05D4  
                 u138_21 05D3                   _SPBRGH 009A         __end_of__fptable 0030  
       __end_of_division 03FF                   ___wmul 060F                ??___awdiv 0076  
              ??___awmod 0076                ??___lwdiv 0076                ??___lwmod 0024  
                 _concat 0542                ??__doprnt 0028         ___awdiv@quotient 0022  
        ___awmod@divisor 0072                   _select 00A2             __doprnt@flag 002B  
        ___awmod@counter 0077                   _printf 0655             __doprnt@prec 002C  
                 _strcat 05E6                   fptable 0027                   fptotal 0002  
              ??_isdigit 0072                   saved_w 007E                ??_sprintf 0034  
__end_of__initialization 0023           __pcstackCOMMON 0070            __end_of_setup 0542  
          __end_of_putch 06A5            division@valor 0079           _OPTION_REGbits 0081  
             __doprnt@ap 0027               __doprnt@pb 0030                  ??_setup 0072  
                ??_putch 0073               __pbssBANK0 0069               __pbssBANK1 00A0  
             __pmaintext 0670                  ?___wmul 0072               __pintentry 0004  
                ?_concat 003A                  ?_printf 0031                  ?_strcat 0072  
             __stringtab 0321                ?_division 0070                  ___awdiv 03FF  
                ___awmod 0468          __size_of___wmul 0025                  ___lwdiv 04C1  
                ___lwmod 057F          __size_of_concat 003D                  __doprnt 0168  
                _decenas 006B                  __ptext1 0505                  __ptext2 0030  
                __ptext3 0655                  __ptext4 0394                  __ptext5 0468  
                __ptext6 03FF                  __ptext7 0542                  __ptext8 05E6  
                __ptext9 0634          __size_of_printf 001B          __size_of_strcat 0029  
                _dpowers 0327                  _isdigit 068A             __size_of_isr 002B  
       ___awmod@dividend 0074                  _residuo 007B                  concat@a 003A  
                concat@b 003C                  concat@c 0067                  _sprintf 0634  
   end_of_initialization 0023               ??_division 0024                _RCSTAbits 0018  
                printf@f 0036                _PORTBbits 0006                _TRISBbits 0086  
              _TXSTAbits 0098           __end_of___wmul 0634              _BAUDCTLbits 0187  
         __end_of_concat 057F           __end_of_printf 0670           __end_of_strcat 060F  
    start_initialization 000F              __end_of_isr 05E6                 ??___wmul 0076  
            __doprnt@val 002D                 ??_concat 003E                 ??_printf 0033  
               ??_strcat 0073              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00AA        __size_of__fptable 0009  
              __doprnt@c 002F                __doprnt@f 0026        __size_of_division 006B  
       ___lwdiv@dividend 0074                __pfunctab 0027                 ?___awdiv 0072  
               ?___awmod 0072                 ?___lwdiv 0072                 ?___lwmod 0020  
               ?__doprnt 0026                __pstrings 0321                 ?_isdigit 0070  
       ___lwdiv@quotient 0077                 ?_sprintf 0031           __size_of_setup 003D  
         __size_of_putch 0009        interrupt_function 0004           ___wmul@product 0076  
               _IOCBbits 0096                 _PIE1bits 008C                 _PIR1bits 000C  
            __stringbase 0326        ___wmul@multiplier 0072         __size_of___awdiv 0069  
       __size_of___awmod 0059         __size_of___lwdiv 0044         __size_of___lwmod 003C  
       __size_of__doprnt 0136       __end_of__stringtab 0327              _isdigit$932 0072  
               __fptable 0027               strcat@from 0072         __size_of_isdigit 0012  
        ___lwdiv@divisor 0072                 _centenas 006C          ___lwdiv@counter 0079  
               __ptext10 0168                 __ptext11 069C                 __ptext12 057F  
               __ptext13 04C1                 __ptext14 029E                 __ptext15 068A  
               __ptext16 060F                 __ptext17 05BB                 _division 0394  
       __size_of_sprintf 0021            __size_of_Text 0138            __size_of_atoi 0083  
          __size_of_main 001A                 concat@s1 0053                 concat@s2 003F  
               _unidades 006A                 atoi@sign 0022                 fp__putch 002D  
              putch@data 0072               _INTCONbits 000B                 isdigit@c 0073  
               intlevel1 0027                sprintf@ap 0037                sprintf@pb 0038  
              sprintf@wh 0036         ___lwmod@dividend 0022                stringcode 0321  
             _OSCCONbits 008F                 printf@ap 0035                 printf@pb 0037  
               sprintf@f 0031                 strcat@cp 0075                 strcat@to 0074  
        ___lwmod@divisor 0020          ___lwmod@counter 0025                 stringdir 0321  
               stringtab 0321  
