

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 10 12:36:51 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384                           
   385                           	psect	strings
   386  07C0                     __pstrings:
   387  07C0                     stringtab:
   388  07C0                     __stringtab:
   389                           
   390                           ;	String table - string pointers are 1 byte each
   391  07C0  1BFF               	btfsc	btemp+1,7
   392  07C1  2FCA               	ljmp	stringcode
   393  07C2  1383               	bcf	3,7
   394  07C3  187F               	btfsc	btemp+1,0
   395  07C4  1783               	bsf	3,7
   396  07C5  0800               	movf	0,w
   397  07C6  0A84               	incf	4,f
   398  07C7  1903               	skipnz
   399  07C8  0AFF               	incf	btemp+1,f
   400  07C9  0008               	return
   401  07CA                     stringcode:
   402  07CA                     stringdir:
   403  07CA  3007               	movlw	high stringdir
   404  07CB  008A               	movwf	10
   405  07CC  0804               	movf	4,w
   406  07CD  0A84               	incf	4,f
   407  07CE  0782               	addwf	2,f
   408  07CF                     __stringbase:
   409  07CF  3400               	retlw	0
   410  07D0                     __end_of__stringtab:
   411  07D0                     _dpowers:
   412  07D0  3401               	retlw	1
   413  07D1  3400               	retlw	0
   414  07D2  340A               	retlw	10
   415  07D3  3400               	retlw	0
   416  07D4  3464               	retlw	100
   417  07D5  3400               	retlw	0
   418  07D6  34E8               	retlw	232
   419  07D7  3403               	retlw	3
   420  07D8  3410               	retlw	16
   421  07D9  3427               	retlw	39
   422  07DA                     __end_of_dpowers:
   423  0009                     _PORTEbits	set	9
   424  0013                     _SSPBUF	set	19
   425  0014                     _SSPCON	set	20
   426  0009                     _PORTE	set	9
   427  0008                     _PORTD	set	8
   428  0007                     _PORTC	set	7
   429  0005                     _PORTA	set	5
   430  0006                     _PORTB	set	6
   431  0063                     _SSPIF	set	99
   432  005E                     _PEIE	set	94
   433  005F                     _GIE	set	95
   434  0091                     _SSPCON2bits	set	145
   435  0087                     _TRISCbits	set	135
   436  0094                     _SSPSTAT	set	148
   437  0093                     _SSPADD	set	147
   438  0091                     _SSPCON2	set	145
   439  008F                     _OSCCONbits	set	143
   440  0089                     _TRISE	set	137
   441  0088                     _TRISD	set	136
   442  0086                     _TRISB	set	134
   443  0085                     _TRISA	set	133
   444  0463                     _SSPIE	set	1123
   445  043C                     _TRISC4	set	1084
   446  043B                     _TRISC3	set	1083
   447  0189                     _ANSELH	set	393
   448  0188                     _ANSEL	set	392
   449  07DA                     STR_1:
   450  07DA  3456               	retlw	86	;'V'
   451  07DB  344F               	retlw	79	;'O'
   452  07DC  344C               	retlw	76	;'L'
   453  07DD  343A               	retlw	58	;':'
   454  07DE  3420               	retlw	32	;' '
   455  07DF  3420               	retlw	32	;' '
   456  07E0  3454               	retlw	84	;'T'
   457  07E1  3445               	retlw	69	;'E'
   458  07E2  344D               	retlw	77	;'M'
   459  07E3  3450               	retlw	80	;'P'
   460  07E4  343A               	retlw	58	;':'
   461  07E5  3420               	retlw	32	;' '
   462  07E6  3420               	retlw	32	;' '
   463  07E7  3443               	retlw	67	;'C'
   464  07E8  344F               	retlw	79	;'O'
   465  07E9  344E               	retlw	78	;'N'
   466  07EA  3454               	retlw	84	;'T'
   467  07EB  343A               	retlw	58	;':'
   468  07EC  3400               	retlw	0
   469  07ED                     STR_2:
   470  07ED  3425               	retlw	37	;'%'
   471  07EE  3464               	retlw	100	;'d'
   472  07EF  3420               	retlw	32	;' '
   473  07F0  3420               	retlw	32	;' '
   474  07F1  3420               	retlw	32	;' '
   475  07F2  3420               	retlw	32	;' '
   476  07F3  3420               	retlw	32	;' '
   477  07F4  3425               	retlw	37	;'%'
   478  07F5  3464               	retlw	100	;'d'
   479  07F6  3420               	retlw	32	;' '
   480  07F7  3420               	retlw	32	;' '
   481  07F8  3420               	retlw	32	;' '
   482  07F9  3420               	retlw	32	;' '
   483  07FA  3420               	retlw	32	;' '
   484  07FB  3420               	retlw	32	;' '
   485  07FC  3425               	retlw	37	;'%'
   486  07FD  3464               	retlw	100	;'d'
   487  07FE  3400               	retlw	0
   488                           
   489                           	psect	cinit
   490  000F                     start_initialization:	
   491                           ; #config settings
   492                           
   493  000F                     __initialization:
   494                           
   495                           ; Clear objects allocated to COMMON
   496  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   497  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   498                           
   499                           ; Clear objects allocated to BANK0
   500  0011  1283               	bcf	3,5	;RP0=0, select bank0
   501  0012  1303               	bcf	3,6	;RP1=0, select bank0
   502  0013  01E9               	clrf	__pbssBANK0& (0+127)
   503  0014  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   504  0015  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   505  0016  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   506  0017  01ED               	clrf	(__pbssBANK0+4)& (0+127)
   507  0018  01EE               	clrf	(__pbssBANK0+5)& (0+127)
   508  0019                     end_of_initialization:	
   509                           ;End of C runtime variable initialization code
   510                           
   511  0019                     __end_of__initialization:
   512  0019  0183               	clrf	3
   513  001A  120A  118A  2B7E   	ljmp	_main	;jump to C main() function
   514                           
   515                           	psect	bssCOMMON
   516  007A                     __pbssCOMMON:
   517  007A                     _val1:
   518  007A                     	ds	1
   519  007B                     _val:
   520  007B                     	ds	1
   521                           
   522                           	psect	bssBANK0
   523  0069                     __pbssBANK0:
   524  0069                     _full:
   525  0069                     	ds	2
   526  006B                     _val2:
   527  006B                     	ds	1
   528  006C                     _cont:
   529  006C                     	ds	1
   530  006D                     _vol:
   531  006D                     	ds	1
   532  006E                     _temp:
   533  006E                     	ds	1
   534                           
   535                           	psect	cstackCOMMON
   536  0070                     __pcstackCOMMON:
   537  0070                     ?_setup:
   538  0070                     ?_Lcd_Init:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_Lcd_Clear:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_I2C_Master_Start:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_I2C_Master_Stop:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_isr:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ??_isr:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_main:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_I2C_Master_Wait:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_Lcd_Port:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_Lcd_Cmd:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_Lcd_Write_Char:	
   569                           ; 1 bytes @ 0x0
   570                           
   571                           
   572                           ; 1 bytes @ 0x0
   573  0070                     	ds	2
   574  0072                     ??_I2C_Master_Start:
   575  0072                     ?_I2C_Master_Write:	
   576                           ; 1 bytes @ 0x2
   577                           
   578  0072                     ??_I2C_Master_Stop:	
   579                           ; 1 bytes @ 0x2
   580                           
   581  0072                     ??_I2C_Master_Wait:	
   582                           ; 1 bytes @ 0x2
   583                           
   584  0072                     ??_Lcd_Port:	
   585                           ; 1 bytes @ 0x2
   586                           
   587  0072                     ?_I2C_Master_Read:	
   588                           ; 1 bytes @ 0x2
   589                           
   590  0072                     ?__Umul8_16:	
   591                           ; 2 bytes @ 0x2
   592                           
   593  0072                     ?___lwdiv:	
   594                           ; 2 bytes @ 0x2
   595                           
   596  0072                     ?___lldiv:	
   597                           ; 2 bytes @ 0x2
   598                           
   599  0072                     ?___xxtofl:	
   600                           ; 4 bytes @ 0x2
   601                           
   602  0072                     Lcd_Port@a:	
   603                           ; 4 bytes @ 0x2
   604                           
   605  0072                     __Umul8_16@multiplicand:	
   606                           ; 1 bytes @ 0x2
   607                           
   608  0072                     I2C_Master_Write@d:	
   609                           ; 1 bytes @ 0x2
   610                           
   611  0072                     I2C_Master_Read@a:	
   612                           ; 2 bytes @ 0x2
   613                           
   614  0072                     ___lwdiv@divisor:	
   615                           ; 2 bytes @ 0x2
   616                           
   617  0072                     ___lldiv@divisor:	
   618                           ; 2 bytes @ 0x2
   619                           
   620  0072                     ___xxtofl@val:	
   621                           ; 4 bytes @ 0x2
   622                           
   623                           
   624                           ; 4 bytes @ 0x2
   625  0072                     	ds	1
   626  0073                     ??_Lcd_Cmd:
   627  0073                     ??_Lcd_Write_Char:	
   628                           ; 1 bytes @ 0x3
   629                           
   630                           
   631                           ; 1 bytes @ 0x3
   632  0073                     	ds	1
   633  0074                     ??_I2C_Master_Write:
   634  0074                     ??_I2C_Master_Read:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0074                     ??__Umul8_16:	
   638                           ; 1 bytes @ 0x4
   639                           
   640  0074                     Lcd_Write_Char@a:	
   641                           ; 1 bytes @ 0x4
   642                           
   643  0074                     ___lwdiv@dividend:	
   644                           ; 1 bytes @ 0x4
   645                           
   646                           
   647                           ; 2 bytes @ 0x4
   648  0074                     	ds	1
   649  0075                     Lcd_Cmd@a:
   650  0075                     Lcd_Write_Char@temp:	
   651                           ; 1 bytes @ 0x5
   652                           
   653                           
   654                           ; 1 bytes @ 0x5
   655  0075                     	ds	1
   656  0076                     ??_Lcd_Init:
   657  0076                     ??_Lcd_Clear:	
   658                           ; 1 bytes @ 0x6
   659                           
   660  0076                     ?_Lcd_Set_Cursor:	
   661                           ; 1 bytes @ 0x6
   662                           
   663  0076                     ??___lwdiv:	
   664                           ; 1 bytes @ 0x6
   665                           
   666  0076                     ??___xxtofl:	
   667                           ; 1 bytes @ 0x6
   668                           
   669  0076                     Lcd_Set_Cursor@b:	
   670                           ; 1 bytes @ 0x6
   671                           
   672  0076                     Lcd_Write_Char@y:	
   673                           ; 1 bytes @ 0x6
   674                           
   675  0076                     I2C_Master_Read@temp:	
   676                           ; 1 bytes @ 0x6
   677                           
   678  0076                     ___lldiv@dividend:	
   679                           ; 2 bytes @ 0x6
   680                           
   681                           
   682                           ; 4 bytes @ 0x6
   683  0076                     	ds	1
   684  0077                     ??_Lcd_Set_Cursor:
   685  0077                     ?_Lcd_Write_String:	
   686                           ; 1 bytes @ 0x7
   687                           
   688  0077                     Lcd_Write_String@a:	
   689                           ; 1 bytes @ 0x7
   690                           
   691  0077                     ___lwdiv@quotient:	
   692                           ; 2 bytes @ 0x7
   693                           
   694                           
   695                           ; 2 bytes @ 0x7
   696  0077                     	ds	2
   697  0079                     ___lwdiv@counter:
   698                           
   699                           ; 1 bytes @ 0x9
   700  0079                     	ds	1
   701  007A                     ??_setup:
   702                           
   703                           	psect	cstackBANK0
   704  0020                     __pcstackBANK0:	
   705                           ; 1 bytes @ 0xA
   706                           
   707  0020                     ??_Lcd_Write_String:
   708  0020                     ??___lldiv:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0020                     ?___lwmod:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0020                     Lcd_Set_Cursor@a:	
   715                           ; 2 bytes @ 0x0
   716                           
   717  0020                     ___xxtofl@sign:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0020                     ___lwmod@divisor:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0020                     __Umul8_16@product:	
   724                           ; 2 bytes @ 0x0
   725                           
   726                           
   727                           ; 2 bytes @ 0x0
   728  0020                     	ds	1
   729  0021                     Lcd_Set_Cursor@z:
   730  0021                     ___xxtofl@exp:	
   731                           ; 1 bytes @ 0x1
   732                           
   733  0021                     ___lldiv@quotient:	
   734                           ; 1 bytes @ 0x1
   735                           
   736                           
   737                           ; 4 bytes @ 0x1
   738  0021                     	ds	1
   739  0022                     Lcd_Set_Cursor@y:
   740  0022                     ___lwmod@dividend:	
   741                           ; 1 bytes @ 0x2
   742                           
   743  0022                     __Umul8_16@word_mpld:	
   744                           ; 2 bytes @ 0x2
   745                           
   746  0022                     ___xxtofl@arg:	
   747                           ; 2 bytes @ 0x2
   748                           
   749                           
   750                           ; 4 bytes @ 0x2
   751  0022                     	ds	1
   752  0023                     Lcd_Set_Cursor@temp:
   753  0023                     Lcd_Write_String@i:	
   754                           ; 1 bytes @ 0x3
   755                           
   756                           
   757                           ; 2 bytes @ 0x3
   758  0023                     	ds	1
   759  0024                     ??___lwmod:
   760  0024                     __Umul8_16@multiplier:	
   761                           ; 1 bytes @ 0x4
   762                           
   763                           
   764                           ; 1 bytes @ 0x4
   765  0024                     	ds	1
   766  0025                     ___lldiv@counter:
   767  0025                     ___lwmod@counter:	
   768                           ; 1 bytes @ 0x5
   769                           
   770                           
   771                           ; 1 bytes @ 0x5
   772  0025                     	ds	1
   773  0026                     ?_I2C_Master_Init:
   774  0026                     ?_sprintf:	
   775                           ; 1 bytes @ 0x6
   776                           
   777  0026                     ?___flmul:	
   778                           ; 2 bytes @ 0x6
   779                           
   780  0026                     sprintf@f:	
   781                           ; 4 bytes @ 0x6
   782                           
   783  0026                     I2C_Master_Init@c:	
   784                           ; 1 bytes @ 0x6
   785                           
   786  0026                     ___flmul@b:	
   787                           ; 4 bytes @ 0x6
   788                           
   789                           
   790                           ; 4 bytes @ 0x6
   791  0026                     	ds	4
   792  002A                     ??_I2C_Master_Init:
   793  002A                     ___flmul@a:	
   794                           ; 1 bytes @ 0xA
   795                           
   796                           
   797                           ; 4 bytes @ 0xA
   798  002A                     	ds	3
   799  002D                     ??_sprintf:
   800                           
   801                           ; 1 bytes @ 0xD
   802  002D                     	ds	1
   803  002E                     ??___flmul:
   804                           
   805                           ; 1 bytes @ 0xE
   806  002E                     	ds	2
   807  0030                     sprintf@ap:
   808                           
   809                           ; 1 bytes @ 0x10
   810  0030                     	ds	1
   811  0031                     sprintf@flag:
   812                           
   813                           ; 1 bytes @ 0x11
   814  0031                     	ds	1
   815  0032                     sprintf@prec:
   816                           
   817                           ; 1 bytes @ 0x12
   818  0032                     	ds	1
   819  0033                     ___flmul@sign:
   820  0033                     sprintf@val:	
   821                           ; 1 bytes @ 0x13
   822                           
   823                           
   824                           ; 2 bytes @ 0x13
   825  0033                     	ds	1
   826  0034                     ___flmul@aexp:
   827                           
   828                           ; 1 bytes @ 0x14
   829  0034                     	ds	1
   830  0035                     sprintf@sp:
   831  0035                     ___flmul@grs:	
   832                           ; 1 bytes @ 0x15
   833                           
   834                           
   835                           ; 4 bytes @ 0x15
   836  0035                     	ds	1
   837  0036                     sprintf@c:
   838                           
   839                           ; 1 bytes @ 0x16
   840  0036                     	ds	3
   841  0039                     ___flmul@bexp:
   842                           
   843                           ; 1 bytes @ 0x19
   844  0039                     	ds	1
   845  003A                     ___flmul@prod:
   846                           
   847                           ; 4 bytes @ 0x1A
   848  003A                     	ds	4
   849  003E                     ___flmul@temp:
   850                           
   851                           ; 2 bytes @ 0x1E
   852  003E                     	ds	2
   853  0040                     ?___fltol:
   854  0040                     ___fltol@f1:	
   855                           ; 4 bytes @ 0x20
   856                           
   857                           
   858                           ; 4 bytes @ 0x20
   859  0040                     	ds	4
   860  0044                     ??___fltol:
   861                           
   862                           ; 1 bytes @ 0x24
   863  0044                     	ds	5
   864  0049                     ___fltol@sign1:
   865                           
   866                           ; 1 bytes @ 0x29
   867  0049                     	ds	1
   868  004A                     ___fltol@exp1:
   869                           
   870                           ; 1 bytes @ 0x2A
   871  004A                     	ds	1
   872  004B                     ??_main:
   873                           
   874                           ; 1 bytes @ 0x2B
   875  004B                     	ds	7
   876  0052                     main@buffer:
   877                           
   878                           ; 20 bytes @ 0x32
   879  0052                     	ds	20
   880  0066                     main@val2:
   881                           
   882                           ; 1 bytes @ 0x46
   883  0066                     	ds	1
   884  0067                     main@val1:
   885                           
   886                           ; 1 bytes @ 0x47
   887  0067                     	ds	1
   888  0068                     main@val:
   889                           
   890                           ; 1 bytes @ 0x48
   891  0068                     	ds	1
   892                           
   893                           	psect	maintext
   894  037E                     __pmaintext:	
   895 ;;
   896 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
   897 ;;
   898 ;; *************** function _main *****************
   899 ;; Defined at:
   900 ;;		line 67 in file "main_master.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  buffer         20   50[BANK0 ] unsigned char [20]
   905 ;;  val             1   72[BANK0 ] unsigned char 
   906 ;;  val1            1   71[BANK0 ] unsigned char 
   907 ;;  val2            1   70[BANK0 ] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : B00/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   917 ;;      Params:         0       0       0       0       0
   918 ;;      Locals:         0      23       0       0       0
   919 ;;      Temps:          0       7       0       0       0
   920 ;;      Totals:         0      30       0       0       0
   921 ;;Total ram usage:       30 bytes
   922 ;; Hardware stack levels required when called:    4
   923 ;; This function calls:
   924 ;;		_I2C_Master_Read
   925 ;;		_I2C_Master_Start
   926 ;;		_I2C_Master_Stop
   927 ;;		_I2C_Master_Write
   928 ;;		_Lcd_Clear
   929 ;;		_Lcd_Init
   930 ;;		_Lcd_Set_Cursor
   931 ;;		_Lcd_Write_String
   932 ;;		___flmul
   933 ;;		___fltol
   934 ;;		___xxtofl
   935 ;;		_setup
   936 ;;		_sprintf
   937 ;; This function is called by:
   938 ;;		Startup code after reset
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           
   943                           ;psect for function _main
   944  037E                     _main:
   945  037E                     l2252:	
   946                           ;incstack = 0
   947                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   948                           
   949                           
   950                           ;main_master.c: 69:     setup();
   951  037E  120A  158A  2660  120A  118A  	fcall	_setup
   952                           
   953                           ;main_master.c: 70:     Lcd_Init();
   954  0383  120A  158A  27B9  120A  118A  	fcall	_Lcd_Init
   955                           
   956                           ;main_master.c: 71:     Lcd_Clear();
   957  0388  120A  158A  25F3  120A  118A  	fcall	_Lcd_Clear
   958                           
   959                           ;main_master.c: 72:     char buffer[20];;main_master.c: 75:     char val2;;main_master.c
      +                          : 76:     char val1;;main_master.c: 77:     char val;;main_master.c: 78:     Lcd_Set_Cur
      +                          sor(1,1);
   960  038D  01F6               	clrf	Lcd_Set_Cursor@b
   961  038E  0AF6               	incf	Lcd_Set_Cursor@b,f
   962  038F  3001               	movlw	1
   963  0390  120A  118A  2768  120A  118A  	fcall	_Lcd_Set_Cursor
   964  0395                     l2254:
   965                           
   966                           ;main_master.c: 79:     Lcd_Write_String("VOL:  TEMP:  CONT:");
   967  0395  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   968  0396  00F7               	movwf	Lcd_Write_String@a
   969  0397  3080               	movlw	128
   970  0398  00F8               	movwf	Lcd_Write_String@a+1
   971  0399  120A  158A  2773  120A  118A  	fcall	_Lcd_Write_String
   972  039E                     l2256:
   973                           
   974                           ;main_master.c: 82:     {;main_master.c: 83:         vol = PORTB;
   975  039E  1283               	bcf	3,5	;RP0=0, select bank0
   976  039F  1303               	bcf	3,6	;RP1=0, select bank0
   977  03A0  0806               	movf	6,w	;volatile
   978  03A1  00CB               	movwf	??_main
   979  03A2  084B               	movf	??_main,w
   980  03A3  00ED               	movwf	_vol
   981  03A4                     l2258:
   982                           
   983                           ;main_master.c: 84:         cont = PORTA;
   984  03A4  0805               	movf	5,w	;volatile
   985  03A5  00CB               	movwf	??_main
   986  03A6  084B               	movf	??_main,w
   987  03A7  00EC               	movwf	_cont
   988  03A8                     l2260:
   989                           
   990                           ;main_master.c: 85:         val = vol*0.0196;
   991  03A8  086D               	movf	_vol,w
   992  03A9  00CB               	movwf	??_main
   993  03AA  01CC               	clrf	??_main+1
   994  03AB  01CD               	clrf	??_main+2
   995  03AC  01CE               	clrf	??_main+3
   996  03AD  084E               	movf	??_main+3,w
   997  03AE  00F5               	movwf	___xxtofl@val+3
   998  03AF  084D               	movf	??_main+2,w
   999  03B0  00F4               	movwf	___xxtofl@val+2
  1000  03B1  084C               	movf	??_main+1,w
  1001  03B2  00F3               	movwf	___xxtofl@val+1
  1002  03B3  084B               	movf	??_main,w
  1003  03B4  00F2               	movwf	___xxtofl@val
  1004  03B5  3001               	movlw	1
  1005  03B6  120A  118A  25C8  120A  118A  	fcall	___xxtofl
  1006  03BB  0875               	movf	?___xxtofl+3,w
  1007  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1008  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1009  03BE  00AD               	movwf	___flmul@a+3
  1010  03BF  0874               	movf	?___xxtofl+2,w
  1011  03C0  00AC               	movwf	___flmul@a+2
  1012  03C1  0873               	movf	?___xxtofl+1,w
  1013  03C2  00AB               	movwf	___flmul@a+1
  1014  03C3  0872               	movf	?___xxtofl,w
  1015  03C4  00AA               	movwf	___flmul@a
  1016  03C5  303C               	movlw	60
  1017  03C6  00A9               	movwf	___flmul@b+3
  1018  03C7  30A0               	movlw	160
  1019  03C8  00A8               	movwf	___flmul@b+2
  1020  03C9  3090               	movlw	144
  1021  03CA  00A7               	movwf	___flmul@b+1
  1022  03CB  302E               	movlw	46
  1023  03CC  00A6               	movwf	___flmul@b
  1024  03CD  120A  118A  201D  120A  118A  	fcall	___flmul
  1025  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  1026  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  1027  03D4  0829               	movf	?___flmul+3,w
  1028  03D5  00C3               	movwf	___fltol@f1+3
  1029  03D6  0828               	movf	?___flmul+2,w
  1030  03D7  00C2               	movwf	___fltol@f1+2
  1031  03D8  0827               	movf	?___flmul+1,w
  1032  03D9  00C1               	movwf	___fltol@f1+1
  1033  03DA  0826               	movf	?___flmul,w
  1034  03DB  00C0               	movwf	___fltol@f1
  1035  03DC  120A  118A  2684  120A  118A  	fcall	___fltol
  1036  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  1037  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  1038  03E3  0840               	movf	?___fltol,w
  1039  03E4  00CF               	movwf	??_main+4
  1040  03E5  084F               	movf	??_main+4,w
  1041  03E6  00E8               	movwf	main@val
  1042  03E7                     l2262:
  1043                           
  1044                           ;main_master.c: 86:         val1 = temp;
  1045  03E7  086E               	movf	_temp,w
  1046  03E8  00CB               	movwf	??_main
  1047  03E9  084B               	movf	??_main,w
  1048  03EA  00E7               	movwf	main@val1
  1049  03EB                     l2264:
  1050                           
  1051                           ;main_master.c: 87:         val2 = cont;
  1052  03EB  086C               	movf	_cont,w
  1053  03EC  00CB               	movwf	??_main
  1054  03ED  084B               	movf	??_main,w
  1055  03EE  00E6               	movwf	main@val2
  1056  03EF                     l2266:
  1057                           
  1058                           ;main_master.c: 88:         sprintf(buffer, "%d     %d      %d", val, val1, val2);
  1059  03EF  301E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1060  03F0  00CB               	movwf	??_main
  1061  03F1  084B               	movf	??_main,w
  1062  03F2  00A6               	movwf	sprintf@f
  1063  03F3  0868               	movf	main@val,w
  1064  03F4  00CC               	movwf	??_main+1
  1065  03F5  01CD               	clrf	??_main+2
  1066  03F6  084C               	movf	??_main+1,w
  1067  03F7  00A7               	movwf	?_sprintf+1
  1068  03F8  084D               	movf	??_main+2,w
  1069  03F9  00A8               	movwf	?_sprintf+2
  1070  03FA  0867               	movf	main@val1,w
  1071  03FB  00CE               	movwf	??_main+3
  1072  03FC  01CF               	clrf	??_main+4
  1073  03FD  084E               	movf	??_main+3,w
  1074  03FE  00A9               	movwf	?_sprintf+3
  1075  03FF  084F               	movf	??_main+4,w
  1076  0400  00AA               	movwf	?_sprintf+4
  1077  0401  0866               	movf	main@val2,w
  1078  0402  00D0               	movwf	??_main+5
  1079  0403  01D1               	clrf	??_main+6
  1080  0404  0850               	movf	??_main+5,w
  1081  0405  00AB               	movwf	?_sprintf+5
  1082  0406  0851               	movf	??_main+6,w
  1083  0407  00AC               	movwf	?_sprintf+6
  1084  0408  3052               	movlw	(low (main@buffer| 0))& (0+255)
  1085  0409  120A  118A  24DE  120A  118A  	fcall	_sprintf
  1086  040E                     l2268:
  1087                           
  1088                           ;main_master.c: 89:         Lcd_Set_Cursor(2,2);
  1089  040E  3002               	movlw	2
  1090  040F  1283               	bcf	3,5	;RP0=0, select bank0
  1091  0410  1303               	bcf	3,6	;RP1=0, select bank0
  1092  0411  00CB               	movwf	??_main
  1093  0412  084B               	movf	??_main,w
  1094  0413  00F6               	movwf	Lcd_Set_Cursor@b
  1095  0414  3002               	movlw	2
  1096  0415  120A  118A  2768  120A  118A  	fcall	_Lcd_Set_Cursor
  1097  041A                     l2270:
  1098                           
  1099                           ;main_master.c: 90:         Lcd_Write_String(buffer);
  1100  041A  3052               	movlw	(low (main@buffer| 0))& (0+255)
  1101  041B  00F7               	movwf	Lcd_Write_String@a
  1102  041C  3000               	movlw	0
  1103  041D  00F8               	movwf	Lcd_Write_String@a+1
  1104  041E  120A  158A  2773  120A  118A  	fcall	_Lcd_Write_String
  1105  0423                     l2272:
  1106                           
  1107                           ;main_master.c: 93:         I2C_Master_Start();
  1108  0423  120A  158A  25CA  120A  118A  	fcall	_I2C_Master_Start
  1109  0428                     l2274:
  1110                           
  1111                           ;main_master.c: 94:         I2C_Master_Write(0x51);
  1112  0428  3051               	movlw	81
  1113  0429  00F2               	movwf	I2C_Master_Write@d
  1114  042A  3000               	movlw	0
  1115  042B  00F3               	movwf	I2C_Master_Write@d+1
  1116  042C  120A  158A  25DC  120A  118A  	fcall	_I2C_Master_Write
  1117  0431                     l2276:
  1118                           
  1119                           ;main_master.c: 95:         PORTB = I2C_Master_Read(0);
  1120  0431  3000               	movlw	0
  1121  0432  00F2               	movwf	I2C_Master_Read@a
  1122  0433  00F3               	movwf	I2C_Master_Read@a+1
  1123  0434  120A  158A  268D  120A  118A  	fcall	_I2C_Master_Read
  1124  0439  0872               	movf	?_I2C_Master_Read,w
  1125  043A  1283               	bcf	3,5	;RP0=0, select bank0
  1126  043B  1303               	bcf	3,6	;RP1=0, select bank0
  1127  043C  0086               	movwf	6	;volatile
  1128  043D                     l2278:
  1129                           
  1130                           ;main_master.c: 96:         I2C_Master_Stop();
  1131  043D  120A  158A  25D3  120A  118A  	fcall	_I2C_Master_Stop
  1132  0442                     l2280:
  1133                           
  1134                           ;main_master.c: 97:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1135  0442  3002               	movlw	2
  1136  0443  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0444  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0445  00CD               	movwf	??_main+2
  1139  0446  3004               	movlw	4
  1140  0447  00CC               	movwf	??_main+1
  1141  0448  30B9               	movlw	185
  1142  0449  00CB               	movwf	??_main
  1143  044A                     u2697:
  1144  044A  0BCB               	decfsz	??_main,f
  1145  044B  2C4A               	goto	u2697
  1146  044C  0BCC               	decfsz	??_main+1,f
  1147  044D  2C4A               	goto	u2697
  1148  044E  0BCD               	decfsz	??_main+2,f
  1149  044F  2C4A               	goto	u2697
  1150  0450  2C51               	nop2
  1151  0451                     l2282:
  1152                           
  1153                           ;main_master.c: 100:         I2C_Master_Start();
  1154  0451  120A  158A  25CA  120A  118A  	fcall	_I2C_Master_Start
  1155  0456                     l2284:
  1156                           
  1157                           ;main_master.c: 101:         I2C_Master_Write(0x61);
  1158  0456  3061               	movlw	97
  1159  0457  00F2               	movwf	I2C_Master_Write@d
  1160  0458  3000               	movlw	0
  1161  0459  00F3               	movwf	I2C_Master_Write@d+1
  1162  045A  120A  158A  25DC  120A  118A  	fcall	_I2C_Master_Write
  1163  045F                     l2286:
  1164                           
  1165                           ;main_master.c: 102:         PORTA = I2C_Master_Read(0);
  1166  045F  3000               	movlw	0
  1167  0460  00F2               	movwf	I2C_Master_Read@a
  1168  0461  00F3               	movwf	I2C_Master_Read@a+1
  1169  0462  120A  158A  268D  120A  118A  	fcall	_I2C_Master_Read
  1170  0467  0872               	movf	?_I2C_Master_Read,w
  1171  0468  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0469  1303               	bcf	3,6	;RP1=0, select bank0
  1173  046A  0085               	movwf	5	;volatile
  1174  046B                     l2288:
  1175                           
  1176                           ;main_master.c: 103:         I2C_Master_Stop();
  1177  046B  120A  158A  25D3  120A  118A  	fcall	_I2C_Master_Stop
  1178  0470                     l2290:
  1179                           
  1180                           ;main_master.c: 104:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1181  0470  3002               	movlw	2
  1182  0471  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0472  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0473  00CD               	movwf	??_main+2
  1185  0474  3004               	movlw	4
  1186  0475  00CC               	movwf	??_main+1
  1187  0476  30B9               	movlw	185
  1188  0477  00CB               	movwf	??_main
  1189  0478                     u2707:
  1190  0478  0BCB               	decfsz	??_main,f
  1191  0479  2C78               	goto	u2707
  1192  047A  0BCC               	decfsz	??_main+1,f
  1193  047B  2C78               	goto	u2707
  1194  047C  0BCD               	decfsz	??_main+2,f
  1195  047D  2C78               	goto	u2707
  1196  047E  2C7F               	nop2
  1197  047F                     l2292:
  1198                           
  1199                           ;main_master.c: 107:         I2C_Master_Start();
  1200  047F  120A  158A  25CA  120A  118A  	fcall	_I2C_Master_Start
  1201  0484                     l2294:
  1202                           
  1203                           ;main_master.c: 108:         I2C_Master_Write(0x80);
  1204  0484  3080               	movlw	128
  1205  0485  00F2               	movwf	I2C_Master_Write@d
  1206  0486  3000               	movlw	0
  1207  0487  00F3               	movwf	I2C_Master_Write@d+1
  1208  0488  120A  158A  25DC  120A  118A  	fcall	_I2C_Master_Write
  1209  048D                     l2296:
  1210                           
  1211                           ;main_master.c: 109:         I2C_Master_Write(0xF3);
  1212  048D  30F3               	movlw	243
  1213  048E  00F2               	movwf	I2C_Master_Write@d
  1214  048F  3000               	movlw	0
  1215  0490  00F3               	movwf	I2C_Master_Write@d+1
  1216  0491  120A  158A  25DC  120A  118A  	fcall	_I2C_Master_Write
  1217  0496                     l2298:
  1218                           
  1219                           ;main_master.c: 110:         I2C_Master_Stop();
  1220  0496  120A  158A  25D3  120A  118A  	fcall	_I2C_Master_Stop
  1221  049B                     l2300:
  1222                           
  1223                           ;main_master.c: 111:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1224  049B  3002               	movlw	2
  1225  049C  1283               	bcf	3,5	;RP0=0, select bank0
  1226  049D  1303               	bcf	3,6	;RP1=0, select bank0
  1227  049E  00CD               	movwf	??_main+2
  1228  049F  3004               	movlw	4
  1229  04A0  00CC               	movwf	??_main+1
  1230  04A1  30B9               	movlw	185
  1231  04A2  00CB               	movwf	??_main
  1232  04A3                     u2717:
  1233  04A3  0BCB               	decfsz	??_main,f
  1234  04A4  2CA3               	goto	u2717
  1235  04A5  0BCC               	decfsz	??_main+1,f
  1236  04A6  2CA3               	goto	u2717
  1237  04A7  0BCD               	decfsz	??_main+2,f
  1238  04A8  2CA3               	goto	u2717
  1239  04A9  2CAA               	nop2
  1240  04AA                     l2302:
  1241                           
  1242                           ;main_master.c: 113:         I2C_Master_Start();
  1243  04AA  120A  158A  25CA  120A  118A  	fcall	_I2C_Master_Start
  1244  04AF                     l2304:
  1245                           
  1246                           ;main_master.c: 114:         I2C_Master_Write(0x81);
  1247  04AF  3081               	movlw	129
  1248  04B0  00F2               	movwf	I2C_Master_Write@d
  1249  04B1  3000               	movlw	0
  1250  04B2  00F3               	movwf	I2C_Master_Write@d+1
  1251  04B3  120A  158A  25DC  120A  118A  	fcall	_I2C_Master_Write
  1252  04B8                     l2306:
  1253                           
  1254                           ;main_master.c: 115:         temp = I2C_Master_Read(0);
  1255  04B8  3000               	movlw	0
  1256  04B9  00F2               	movwf	I2C_Master_Read@a
  1257  04BA  00F3               	movwf	I2C_Master_Read@a+1
  1258  04BB  120A  158A  268D  120A  118A  	fcall	_I2C_Master_Read
  1259  04C0  0872               	movf	?_I2C_Master_Read,w
  1260  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  1261  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  1262  04C3  00CB               	movwf	??_main
  1263  04C4  084B               	movf	??_main,w
  1264  04C5  00EE               	movwf	_temp
  1265  04C6                     l2308:
  1266                           
  1267                           ;main_master.c: 116:         I2C_Master_Stop();
  1268  04C6  120A  158A  25D3  120A  118A  	fcall	_I2C_Master_Stop
  1269  04CB                     l2310:
  1270                           
  1271                           ;main_master.c: 117:         _delay((unsigned long)((200)*(4000000/4000.0)));
  1272  04CB  3002               	movlw	2
  1273  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1274  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1275  04CE  00CD               	movwf	??_main+2
  1276  04CF  3004               	movlw	4
  1277  04D0  00CC               	movwf	??_main+1
  1278  04D1  30B9               	movlw	185
  1279  04D2  00CB               	movwf	??_main
  1280  04D3                     u2727:
  1281  04D3  0BCB               	decfsz	??_main,f
  1282  04D4  2CD3               	goto	u2727
  1283  04D5  0BCC               	decfsz	??_main+1,f
  1284  04D6  2CD3               	goto	u2727
  1285  04D7  0BCD               	decfsz	??_main+2,f
  1286  04D8  2CD3               	goto	u2727
  1287  04D9  2CDA               	nop2
  1288  04DA  2B9E               	goto	l2256
  1289  04DB  120A  118A  280C   	ljmp	start
  1290  04DE                     __end_of_main:
  1291                           
  1292                           	psect	text1
  1293  04DE                     __ptext1:	
  1294 ;; *************** function _sprintf *****************
  1295 ;; Defined at:
  1296 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1297 ;; Parameters:    Size  Location     Type
  1298 ;;  sp              1    wreg     PTR unsigned char 
  1299 ;;		 -> main@buffer(20), 
  1300 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  1301 ;;		 -> STR_2(18), 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  sp              1   21[BANK0 ] PTR unsigned char 
  1304 ;;		 -> main@buffer(20), 
  1305 ;;  tmpval          4    0        struct .
  1306 ;;  val             2   19[BANK0 ] unsigned int 
  1307 ;;  cp              2    0        PTR const unsigned char 
  1308 ;;  len             2    0        unsigned int 
  1309 ;;  c               1   22[BANK0 ] unsigned char 
  1310 ;;  prec            1   18[BANK0 ] char 
  1311 ;;  flag            1   17[BANK0 ] unsigned char 
  1312 ;;  ap              1   16[BANK0 ] PTR void [1]
  1313 ;;		 -> ?_sprintf(2), 
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  2    6[BANK0 ] int 
  1316 ;; Registers used:
  1317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1323 ;;      Params:         0       7       0       0       0
  1324 ;;      Locals:         0       7       0       0       0
  1325 ;;      Temps:          0       3       0       0       0
  1326 ;;      Totals:         0      17       0       0       0
  1327 ;;Total ram usage:       17 bytes
  1328 ;; Hardware stack levels used:    1
  1329 ;; Hardware stack levels required when called:    2
  1330 ;; This function calls:
  1331 ;;		___lwdiv
  1332 ;;		___lwmod
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _sprintf
  1340  04DE                     _sprintf:
  1341                           
  1342                           ;incstack = 0
  1343                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1344                           ;sprintf@sp stored from wreg
  1345  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  1346  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  1347  04E0  00B5               	movwf	sprintf@sp
  1348  04E1                     l2050:
  1349                           
  1350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1351  04E1  3027               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1352  04E2  00AD               	movwf	??_sprintf
  1353  04E3  082D               	movf	??_sprintf,w
  1354  04E4  00B0               	movwf	sprintf@ap
  1355                           
  1356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1357  04E5  2DB1               	goto	l2102
  1358  04E6                     l2052:
  1359                           
  1360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1361  04E6  3025               	movlw	37
  1362  04E7  0636               	xorwf	sprintf@c,w
  1363  04E8  1903               	btfsc	3,2
  1364  04E9  2CEB               	goto	u2251
  1365  04EA  2CEC               	goto	u2250
  1366  04EB                     u2251:
  1367  04EB  2CF8               	goto	l2058
  1368  04EC                     u2250:
  1369  04EC                     l2054:
  1370                           
  1371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1372  04EC  0836               	movf	sprintf@c,w
  1373  04ED  00AD               	movwf	??_sprintf
  1374  04EE  0835               	movf	sprintf@sp,w
  1375  04EF  0084               	movwf	4
  1376  04F0  082D               	movf	??_sprintf,w
  1377  04F1  1383               	bcf	3,7	;select IRP bank0
  1378  04F2  0080               	movwf	0
  1379  04F3                     l2056:
  1380  04F3  3001               	movlw	1
  1381  04F4  00AD               	movwf	??_sprintf
  1382  04F5  082D               	movf	??_sprintf,w
  1383  04F6  07B5               	addwf	sprintf@sp,f
  1384                           
  1385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1386  04F7  2DB1               	goto	l2102
  1387  04F8                     l2058:
  1388                           
  1389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1390  04F8  01B1               	clrf	sprintf@flag
  1391  04F9                     l2062:	
  1392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1393                           
  1394  04F9  3001               	movlw	1
  1395  04FA  07A6               	addwf	sprintf@f,f
  1396  04FB  30FF               	movlw	-1
  1397  04FC  0726               	addwf	sprintf@f,w
  1398  04FD  0084               	movwf	4
  1399  04FE  120A  118A  27CA  120A  118A  	fcall	stringdir
  1400  0503  00B6               	movwf	sprintf@c
  1401  0504  00AD               	movwf	??_sprintf
  1402  0505  01AE               	clrf	??_sprintf+1
  1403                           
  1404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1405                           ; Switch size 1, requested type "simple"
  1406                           ; Number of cases is 1, Range of values is 0 to 0
  1407                           ; switch strategies available:
  1408                           ; Name         Instructions Cycles
  1409                           ; simple_byte            4     3 (average)
  1410                           ; direct_byte           11     8 (fixed)
  1411                           ; jumptable            260     6 (fixed)
  1412                           ;	Chosen strategy is simple_byte
  1413  0506  082E               	movf	??_sprintf+1,w
  1414  0507  3A00               	xorlw	0	; case 0
  1415  0508  1903               	skipnz
  1416  0509  2D0B               	goto	l2332
  1417  050A  2DB1               	goto	l2102
  1418  050B                     l2332:
  1419                           
  1420                           ; Switch size 1, requested type "simple"
  1421                           ; Number of cases is 3, Range of values is 0 to 105
  1422                           ; switch strategies available:
  1423                           ; Name         Instructions Cycles
  1424                           ; simple_byte           10     6 (average)
  1425                           ; jumptable            260     6 (fixed)
  1426                           ;	Chosen strategy is simple_byte
  1427  050B  082D               	movf	??_sprintf,w
  1428  050C  3A00               	xorlw	0	; case 0
  1429  050D  1903               	skipnz
  1430  050E  2DC3               	goto	l2104
  1431  050F  3A64               	xorlw	100	; case 100
  1432  0510  1903               	skipnz
  1433  0511  2D16               	goto	l2064
  1434  0512  3A0D               	xorlw	13	; case 105
  1435  0513  1903               	skipnz
  1436  0514  2D16               	goto	l2064
  1437  0515  2DB1               	goto	l2102
  1438  0516                     l2064:
  1439                           
  1440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1441  0516  0830               	movf	sprintf@ap,w
  1442  0517  0084               	movwf	4
  1443  0518  1383               	bcf	3,7	;select IRP bank0
  1444  0519  0800               	movf	0,w
  1445  051A  00B3               	movwf	sprintf@val
  1446  051B  0A84               	incf	4,f
  1447  051C  0800               	movf	0,w
  1448  051D  00B4               	movwf	sprintf@val+1
  1449  051E                     l2066:
  1450  051E  3002               	movlw	2
  1451  051F  00AD               	movwf	??_sprintf
  1452  0520  082D               	movf	??_sprintf,w
  1453  0521  07B0               	addwf	sprintf@ap,f
  1454  0522                     l2068:
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1457  0522  1FB4               	btfss	sprintf@val+1,7
  1458  0523  2D25               	goto	u2261
  1459  0524  2D26               	goto	u2260
  1460  0525                     u2261:
  1461  0525  2D2F               	goto	l2074
  1462  0526                     u2260:
  1463  0526                     l2070:
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1466  0526  3003               	movlw	3
  1467  0527  00AD               	movwf	??_sprintf
  1468  0528  082D               	movf	??_sprintf,w
  1469  0529  04B1               	iorwf	sprintf@flag,f
  1470  052A                     l2072:
  1471                           
  1472                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1473  052A  09B3               	comf	sprintf@val,f
  1474  052B  09B4               	comf	sprintf@val+1,f
  1475  052C  0AB3               	incf	sprintf@val,f
  1476  052D  1903               	skipnz
  1477  052E  0AB4               	incf	sprintf@val+1,f
  1478  052F                     l2074:
  1479                           
  1480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1481  052F  01B6               	clrf	sprintf@c
  1482  0530  0AB6               	incf	sprintf@c,f
  1483  0531                     l2080:
  1484                           
  1485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1486  0531  0836               	movf	sprintf@c,w
  1487  0532  00AD               	movwf	??_sprintf
  1488  0533  072D               	addwf	??_sprintf,w
  1489  0534  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1490  0535  0084               	movwf	4
  1491  0536  120A  118A  27CA  120A  118A  	fcall	stringdir
  1492  053B  00AE               	movwf	??_sprintf+1
  1493  053C  120A  118A  27CA  120A  118A  	fcall	stringdir
  1494  0541  00AF               	movwf	??_sprintf+2
  1495  0542  082F               	movf	??_sprintf+2,w
  1496  0543  0234               	subwf	sprintf@val+1,w
  1497  0544  1D03               	skipz
  1498  0545  2D48               	goto	u2275
  1499  0546  082E               	movf	??_sprintf+1,w
  1500  0547  0233               	subwf	sprintf@val,w
  1501  0548                     u2275:
  1502  0548  1803               	skipnc
  1503  0549  2D4B               	goto	u2271
  1504  054A  2D4C               	goto	u2270
  1505  054B                     u2271:
  1506  054B  2D4D               	goto	l2084
  1507  054C                     u2270:
  1508  054C  2D57               	goto	l2086
  1509  054D                     l2084:
  1510  054D  3001               	movlw	1
  1511  054E  00AD               	movwf	??_sprintf
  1512  054F  082D               	movf	??_sprintf,w
  1513  0550  07B6               	addwf	sprintf@c,f
  1514  0551  3005               	movlw	5
  1515  0552  0636               	xorwf	sprintf@c,w
  1516  0553  1D03               	btfss	3,2
  1517  0554  2D56               	goto	u2281
  1518  0555  2D57               	goto	u2280
  1519  0556                     u2281:
  1520  0556  2D31               	goto	l2080
  1521  0557                     u2280:
  1522  0557                     l2086:
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1525  0557  0831               	movf	sprintf@flag,w
  1526  0558  3903               	andlw	3
  1527  0559  1903               	btfsc	3,2
  1528  055A  2D5C               	goto	u2291
  1529  055B  2D5D               	goto	u2290
  1530  055C                     u2291:
  1531  055C  2D68               	goto	l2092
  1532  055D                     u2290:
  1533  055D                     l2088:
  1534                           
  1535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1536  055D  302D               	movlw	45
  1537  055E  00AD               	movwf	??_sprintf
  1538  055F  0835               	movf	sprintf@sp,w
  1539  0560  0084               	movwf	4
  1540  0561  082D               	movf	??_sprintf,w
  1541  0562  1383               	bcf	3,7	;select IRP bank0
  1542  0563  0080               	movwf	0
  1543  0564                     l2090:
  1544  0564  3001               	movlw	1
  1545  0565  00AD               	movwf	??_sprintf
  1546  0566  082D               	movf	??_sprintf,w
  1547  0567  07B5               	addwf	sprintf@sp,f
  1548  0568                     l2092:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1551  0568  0836               	movf	sprintf@c,w
  1552  0569  00AD               	movwf	??_sprintf
  1553  056A  082D               	movf	??_sprintf,w
  1554  056B  00B2               	movwf	sprintf@prec
  1555                           
  1556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1557  056C  2DA8               	goto	l2100
  1558  056D                     l2094:
  1559                           
  1560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1561  056D  300A               	movlw	10
  1562  056E  00A0               	movwf	___lwmod@divisor
  1563  056F  3000               	movlw	0
  1564  0570  00A1               	movwf	___lwmod@divisor+1
  1565  0571  0832               	movf	sprintf@prec,w
  1566  0572  00AD               	movwf	??_sprintf
  1567  0573  072D               	addwf	??_sprintf,w
  1568  0574  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1569  0575  0084               	movwf	4
  1570  0576  120A  118A  27CA  120A  118A  	fcall	stringdir
  1571  057B  00F2               	movwf	___lwdiv@divisor
  1572  057C  120A  118A  27CA  120A  118A  	fcall	stringdir
  1573  0581  00F3               	movwf	___lwdiv@divisor+1
  1574  0582  0834               	movf	sprintf@val+1,w
  1575  0583  00F5               	movwf	___lwdiv@dividend+1
  1576  0584  0833               	movf	sprintf@val,w
  1577  0585  00F4               	movwf	___lwdiv@dividend
  1578  0586  120A  158A  272F  120A  118A  	fcall	___lwdiv
  1579  058B  0873               	movf	?___lwdiv+1,w
  1580  058C  1283               	bcf	3,5	;RP0=0, select bank0
  1581  058D  1303               	bcf	3,6	;RP1=0, select bank0
  1582  058E  00A3               	movwf	___lwmod@dividend+1
  1583  058F  0872               	movf	?___lwdiv,w
  1584  0590  00A2               	movwf	___lwmod@dividend
  1585  0591  120A  158A  26F3  120A  118A  	fcall	___lwmod
  1586  0596  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0597  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0598  0820               	movf	?___lwmod,w
  1589  0599  3E30               	addlw	48
  1590  059A  00AE               	movwf	??_sprintf+1
  1591  059B  082E               	movf	??_sprintf+1,w
  1592  059C  00B6               	movwf	sprintf@c
  1593  059D                     l2096:
  1594                           
  1595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1596  059D  0836               	movf	sprintf@c,w
  1597  059E  00AD               	movwf	??_sprintf
  1598  059F  0835               	movf	sprintf@sp,w
  1599  05A0  0084               	movwf	4
  1600  05A1  082D               	movf	??_sprintf,w
  1601  05A2  1383               	bcf	3,7	;select IRP bank0
  1602  05A3  0080               	movwf	0
  1603  05A4                     l2098:
  1604  05A4  3001               	movlw	1
  1605  05A5  00AD               	movwf	??_sprintf
  1606  05A6  082D               	movf	??_sprintf,w
  1607  05A7  07B5               	addwf	sprintf@sp,f
  1608  05A8                     l2100:
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1611  05A8  30FF               	movlw	255
  1612  05A9  00AD               	movwf	??_sprintf
  1613  05AA  082D               	movf	??_sprintf,w
  1614  05AB  07B2               	addwf	sprintf@prec,f
  1615  05AC  0A32               	incf	sprintf@prec,w
  1616  05AD  1D03               	btfss	3,2
  1617  05AE  2DB0               	goto	u2301
  1618  05AF  2DB1               	goto	u2300
  1619  05B0                     u2301:
  1620  05B0  2D6D               	goto	l2094
  1621  05B1                     u2300:
  1622  05B1                     l2102:
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1625  05B1  3001               	movlw	1
  1626  05B2  07A6               	addwf	sprintf@f,f
  1627  05B3  30FF               	movlw	-1
  1628  05B4  0726               	addwf	sprintf@f,w
  1629  05B5  0084               	movwf	4
  1630  05B6  120A  118A  27CA  120A  118A  	fcall	stringdir
  1631  05BB  00AD               	movwf	??_sprintf
  1632  05BC  082D               	movf	??_sprintf,w
  1633  05BD  00B6               	movwf	sprintf@c
  1634  05BE  0836               	movf	sprintf@c,w
  1635  05BF  1D03               	btfss	3,2
  1636  05C0  2DC2               	goto	u2311
  1637  05C1  2DC3               	goto	u2310
  1638  05C2                     u2311:
  1639  05C2  2CE6               	goto	l2052
  1640  05C3                     u2310:
  1641  05C3                     l2104:
  1642                           
  1643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1644  05C3  0835               	movf	sprintf@sp,w
  1645  05C4  0084               	movwf	4
  1646  05C5  1383               	bcf	3,7	;select IRP bank0
  1647  05C6  0180               	clrf	0
  1648  05C7                     l282:
  1649  05C7  0008               	return
  1650  05C8                     __end_of_sprintf:
  1651                           
  1652                           	psect	text2
  1653  0EF3                     __ptext2:	
  1654 ;; *************** function ___lwmod *****************
  1655 ;; Defined at:
  1656 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  divisor         2    0[BANK0 ] unsigned int 
  1659 ;;  dividend        2    2[BANK0 ] unsigned int 
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  counter         1    5[BANK0 ] unsigned char 
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  2    0[BANK0 ] unsigned int 
  1664 ;; Registers used:
  1665 ;;		wreg, status,2, status,0
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1671 ;;      Params:         0       4       0       0       0
  1672 ;;      Locals:         0       1       0       0       0
  1673 ;;      Temps:          0       1       0       0       0
  1674 ;;      Totals:         0       6       0       0       0
  1675 ;;Total ram usage:        6 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    1
  1678 ;; This function calls:
  1679 ;;		Nothing
  1680 ;; This function is called by:
  1681 ;;		_sprintf
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function ___lwmod
  1687  0EF3                     ___lwmod:
  1688  0EF3                     l1994:	
  1689                           ;incstack = 0
  1690                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1691                           
  1692  0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  1694  0EF5  0820               	movf	___lwmod@divisor,w
  1695  0EF6  0421               	iorwf	___lwmod@divisor+1,w
  1696  0EF7  1903               	btfsc	3,2
  1697  0EF8  2EFA               	goto	u2131
  1698  0EF9  2EFB               	goto	u2130
  1699  0EFA                     u2131:
  1700  0EFA  2F2A               	goto	l2012
  1701  0EFB                     u2130:
  1702  0EFB                     l1996:
  1703  0EFB  01A5               	clrf	___lwmod@counter
  1704  0EFC  0AA5               	incf	___lwmod@counter,f
  1705  0EFD  2F09               	goto	l2002
  1706  0EFE                     l1998:
  1707  0EFE  3001               	movlw	1
  1708  0EFF                     u2145:
  1709  0EFF  1003               	clrc
  1710  0F00  0DA0               	rlf	___lwmod@divisor,f
  1711  0F01  0DA1               	rlf	___lwmod@divisor+1,f
  1712  0F02  3EFF               	addlw	-1
  1713  0F03  1D03               	skipz
  1714  0F04  2EFF               	goto	u2145
  1715  0F05                     l2000:
  1716  0F05  3001               	movlw	1
  1717  0F06  00A4               	movwf	??___lwmod
  1718  0F07  0824               	movf	??___lwmod,w
  1719  0F08  07A5               	addwf	___lwmod@counter,f
  1720  0F09                     l2002:
  1721  0F09  1FA1               	btfss	___lwmod@divisor+1,7
  1722  0F0A  2F0C               	goto	u2151
  1723  0F0B  2F0D               	goto	u2150
  1724  0F0C                     u2151:
  1725  0F0C  2EFE               	goto	l1998
  1726  0F0D                     u2150:
  1727  0F0D                     l2004:
  1728  0F0D  0821               	movf	___lwmod@divisor+1,w
  1729  0F0E  0223               	subwf	___lwmod@dividend+1,w
  1730  0F0F  1D03               	skipz
  1731  0F10  2F13               	goto	u2165
  1732  0F11  0820               	movf	___lwmod@divisor,w
  1733  0F12  0222               	subwf	___lwmod@dividend,w
  1734  0F13                     u2165:
  1735  0F13  1C03               	skipc
  1736  0F14  2F16               	goto	u2161
  1737  0F15  2F17               	goto	u2160
  1738  0F16                     u2161:
  1739  0F16  2F1D               	goto	l2008
  1740  0F17                     u2160:
  1741  0F17                     l2006:
  1742  0F17  0820               	movf	___lwmod@divisor,w
  1743  0F18  02A2               	subwf	___lwmod@dividend,f
  1744  0F19  0821               	movf	___lwmod@divisor+1,w
  1745  0F1A  1C03               	skipc
  1746  0F1B  03A3               	decf	___lwmod@dividend+1,f
  1747  0F1C  02A3               	subwf	___lwmod@dividend+1,f
  1748  0F1D                     l2008:
  1749  0F1D  3001               	movlw	1
  1750  0F1E                     u2175:
  1751  0F1E  1003               	clrc
  1752  0F1F  0CA1               	rrf	___lwmod@divisor+1,f
  1753  0F20  0CA0               	rrf	___lwmod@divisor,f
  1754  0F21  3EFF               	addlw	-1
  1755  0F22  1D03               	skipz
  1756  0F23  2F1E               	goto	u2175
  1757  0F24                     l2010:
  1758  0F24  3001               	movlw	1
  1759  0F25  02A5               	subwf	___lwmod@counter,f
  1760  0F26  1D03               	btfss	3,2
  1761  0F27  2F29               	goto	u2181
  1762  0F28  2F2A               	goto	u2180
  1763  0F29                     u2181:
  1764  0F29  2F0D               	goto	l2004
  1765  0F2A                     u2180:
  1766  0F2A                     l2012:
  1767  0F2A  0823               	movf	___lwmod@dividend+1,w
  1768  0F2B  00A1               	movwf	?___lwmod+1
  1769  0F2C  0822               	movf	___lwmod@dividend,w
  1770  0F2D  00A0               	movwf	?___lwmod
  1771  0F2E                     l568:
  1772  0F2E  0008               	return
  1773  0F2F                     __end_of___lwmod:
  1774                           
  1775                           	psect	text3
  1776  0F2F                     __ptext3:	
  1777 ;; *************** function ___lwdiv *****************
  1778 ;; Defined at:
  1779 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  divisor         2    2[COMMON] unsigned int 
  1782 ;;  dividend        2    4[COMMON] unsigned int 
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;  quotient        2    7[COMMON] unsigned int 
  1785 ;;  counter         1    9[COMMON] unsigned char 
  1786 ;; Return value:  Size  Location     Type
  1787 ;;                  2    2[COMMON] unsigned int 
  1788 ;; Registers used:
  1789 ;;		wreg, status,2, status,0
  1790 ;; Tracked objects:
  1791 ;;		On entry : 0/0
  1792 ;;		On exit  : 0/0
  1793 ;;		Unchanged: 0/0
  1794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1795 ;;      Params:         4       0       0       0       0
  1796 ;;      Locals:         3       0       0       0       0
  1797 ;;      Temps:          1       0       0       0       0
  1798 ;;      Totals:         8       0       0       0       0
  1799 ;;Total ram usage:        8 bytes
  1800 ;; Hardware stack levels used:    1
  1801 ;; Hardware stack levels required when called:    1
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_sprintf
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function ___lwdiv
  1811  0F2F                     ___lwdiv:
  1812  0F2F                     l1446:	
  1813                           ;incstack = 0
  1814                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1815                           
  1816  0F2F  01F7               	clrf	___lwdiv@quotient
  1817  0F30  01F8               	clrf	___lwdiv@quotient+1
  1818  0F31                     l1448:
  1819  0F31  0872               	movf	___lwdiv@divisor,w
  1820  0F32  0473               	iorwf	___lwdiv@divisor+1,w
  1821  0F33  1903               	btfsc	3,2
  1822  0F34  2F36               	goto	u1131
  1823  0F35  2F37               	goto	u1130
  1824  0F36                     u1131:
  1825  0F36  2F6E               	goto	l1468
  1826  0F37                     u1130:
  1827  0F37                     l1450:
  1828  0F37  01F9               	clrf	___lwdiv@counter
  1829  0F38  0AF9               	incf	___lwdiv@counter,f
  1830  0F39  2F45               	goto	l1456
  1831  0F3A                     l1452:
  1832  0F3A  3001               	movlw	1
  1833  0F3B                     u1145:
  1834  0F3B  1003               	clrc
  1835  0F3C  0DF2               	rlf	___lwdiv@divisor,f
  1836  0F3D  0DF3               	rlf	___lwdiv@divisor+1,f
  1837  0F3E  3EFF               	addlw	-1
  1838  0F3F  1D03               	skipz
  1839  0F40  2F3B               	goto	u1145
  1840  0F41                     l1454:
  1841  0F41  3001               	movlw	1
  1842  0F42  00F6               	movwf	??___lwdiv
  1843  0F43  0876               	movf	??___lwdiv,w
  1844  0F44  07F9               	addwf	___lwdiv@counter,f
  1845  0F45                     l1456:
  1846  0F45  1FF3               	btfss	___lwdiv@divisor+1,7
  1847  0F46  2F48               	goto	u1151
  1848  0F47  2F49               	goto	u1150
  1849  0F48                     u1151:
  1850  0F48  2F3A               	goto	l1452
  1851  0F49                     u1150:
  1852  0F49                     l1458:
  1853  0F49  3001               	movlw	1
  1854  0F4A                     u1165:
  1855  0F4A  1003               	clrc
  1856  0F4B  0DF7               	rlf	___lwdiv@quotient,f
  1857  0F4C  0DF8               	rlf	___lwdiv@quotient+1,f
  1858  0F4D  3EFF               	addlw	-1
  1859  0F4E  1D03               	skipz
  1860  0F4F  2F4A               	goto	u1165
  1861  0F50  0873               	movf	___lwdiv@divisor+1,w
  1862  0F51  0275               	subwf	___lwdiv@dividend+1,w
  1863  0F52  1D03               	skipz
  1864  0F53  2F56               	goto	u1175
  1865  0F54  0872               	movf	___lwdiv@divisor,w
  1866  0F55  0274               	subwf	___lwdiv@dividend,w
  1867  0F56                     u1175:
  1868  0F56  1C03               	skipc
  1869  0F57  2F59               	goto	u1171
  1870  0F58  2F5A               	goto	u1170
  1871  0F59                     u1171:
  1872  0F59  2F61               	goto	l1464
  1873  0F5A                     u1170:
  1874  0F5A                     l1460:
  1875  0F5A  0872               	movf	___lwdiv@divisor,w
  1876  0F5B  02F4               	subwf	___lwdiv@dividend,f
  1877  0F5C  0873               	movf	___lwdiv@divisor+1,w
  1878  0F5D  1C03               	skipc
  1879  0F5E  03F5               	decf	___lwdiv@dividend+1,f
  1880  0F5F  02F5               	subwf	___lwdiv@dividend+1,f
  1881  0F60                     l1462:
  1882  0F60  1477               	bsf	___lwdiv@quotient,0
  1883  0F61                     l1464:
  1884  0F61  3001               	movlw	1
  1885  0F62                     u1185:
  1886  0F62  1003               	clrc
  1887  0F63  0CF3               	rrf	___lwdiv@divisor+1,f
  1888  0F64  0CF2               	rrf	___lwdiv@divisor,f
  1889  0F65  3EFF               	addlw	-1
  1890  0F66  1D03               	skipz
  1891  0F67  2F62               	goto	u1185
  1892  0F68                     l1466:
  1893  0F68  3001               	movlw	1
  1894  0F69  02F9               	subwf	___lwdiv@counter,f
  1895  0F6A  1D03               	btfss	3,2
  1896  0F6B  2F6D               	goto	u1191
  1897  0F6C  2F6E               	goto	u1190
  1898  0F6D                     u1191:
  1899  0F6D  2F49               	goto	l1458
  1900  0F6E                     u1190:
  1901  0F6E                     l1468:
  1902  0F6E  0878               	movf	___lwdiv@quotient+1,w
  1903  0F6F  00F3               	movwf	?___lwdiv+1
  1904  0F70  0877               	movf	___lwdiv@quotient,w
  1905  0F71  00F2               	movwf	?___lwdiv
  1906  0F72                     l558:
  1907  0F72  0008               	return
  1908  0F73                     __end_of___lwdiv:
  1909                           
  1910                           	psect	text4
  1911  0E60                     __ptext4:	
  1912 ;; *************** function _setup *****************
  1913 ;; Defined at:
  1914 ;;		line 125 in file "main_master.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2, status,0, pclath, cstack
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1928 ;;      Params:         0       0       0       0       0
  1929 ;;      Locals:         0       0       0       0       0
  1930 ;;      Temps:          0       0       0       0       0
  1931 ;;      Totals:         0       0       0       0       0
  1932 ;;Total ram usage:        0 bytes
  1933 ;; Hardware stack levels used:    1
  1934 ;; Hardware stack levels required when called:    3
  1935 ;; This function calls:
  1936 ;;		_I2C_Master_Init
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           
  1943                           ;psect for function _setup
  1944  0E60                     _setup:
  1945  0E60                     l2030:	
  1946                           ;incstack = 0
  1947                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1948                           
  1949                           
  1950                           ;main_master.c: 127:     ANSEL = 0;
  1951  0E60  1683               	bsf	3,5	;RP0=1, select bank3
  1952  0E61  1703               	bsf	3,6	;RP1=1, select bank3
  1953  0E62  0188               	clrf	8	;volatile
  1954                           
  1955                           ;main_master.c: 128:     ANSELH = 0;
  1956  0E63  0189               	clrf	9	;volatile
  1957                           
  1958                           ;main_master.c: 129:     TRISA = 0;
  1959  0E64  1683               	bsf	3,5	;RP0=1, select bank1
  1960  0E65  1303               	bcf	3,6	;RP1=0, select bank1
  1961  0E66  0185               	clrf	5	;volatile
  1962                           
  1963                           ;main_master.c: 130:     TRISB = 0;
  1964  0E67  0186               	clrf	6	;volatile
  1965                           
  1966                           ;main_master.c: 131:     PORTA = 0;
  1967  0E68  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0E69  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0E6A  0185               	clrf	5	;volatile
  1970                           
  1971                           ;main_master.c: 132:     PORTB = 0;
  1972  0E6B  0186               	clrf	6	;volatile
  1973                           
  1974                           ;main_master.c: 133:     TRISD = 0;
  1975  0E6C  1683               	bsf	3,5	;RP0=1, select bank1
  1976  0E6D  1303               	bcf	3,6	;RP1=0, select bank1
  1977  0E6E  0188               	clrf	8	;volatile
  1978                           
  1979                           ;main_master.c: 134:     TRISE = 0;
  1980  0E6F  0189               	clrf	9	;volatile
  1981                           
  1982                           ;main_master.c: 137:     PORTA = 0x00;
  1983  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  1984  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  1985  0E72  0185               	clrf	5	;volatile
  1986                           
  1987                           ;main_master.c: 138:     PORTB = 0x00;
  1988  0E73  0186               	clrf	6	;volatile
  1989                           
  1990                           ;main_master.c: 139:     PORTC = 0x00;
  1991  0E74  0187               	clrf	7	;volatile
  1992                           
  1993                           ;main_master.c: 140:     PORTD = 0x00;
  1994  0E75  0188               	clrf	8	;volatile
  1995                           
  1996                           ;main_master.c: 141:     PORTE = 0x00;
  1997  0E76  0189               	clrf	9	;volatile
  1998  0E77                     l2032:
  1999                           
  2000                           ;main_master.c: 144:     OSCCONbits.IRCF0 = 0;
  2001  0E77  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0E78  1303               	bcf	3,6	;RP1=0, select bank1
  2003  0E79  120F               	bcf	15,4	;volatile
  2004  0E7A                     l2034:
  2005                           
  2006                           ;main_master.c: 145:     OSCCONbits.IRCF1 = 1;
  2007  0E7A  168F               	bsf	15,5	;volatile
  2008  0E7B                     l2036:
  2009                           
  2010                           ;main_master.c: 146:     OSCCONbits.IRCF2 = 1;
  2011  0E7B  170F               	bsf	15,6	;volatile
  2012  0E7C                     l2038:
  2013                           
  2014                           ;main_master.c: 147:     OSCCONbits.SCS = 1;
  2015  0E7C  140F               	bsf	15,0	;volatile
  2016  0E7D                     l2040:
  2017                           
  2018                           ;main_master.c: 150:     I2C_Master_Init(100000);
  2019  0E7D  3000               	movlw	0
  2020  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0E80  00A9               	movwf	I2C_Master_Init@c+3
  2023  0E81  3001               	movlw	1
  2024  0E82  00A8               	movwf	I2C_Master_Init@c+2
  2025  0E83  3086               	movlw	134
  2026  0E84  00A7               	movwf	I2C_Master_Init@c+1
  2027  0E85  30A0               	movlw	160
  2028  0E86  00A6               	movwf	I2C_Master_Init@c
  2029  0E87  120A  158A  26BB  120A  158A  	fcall	_I2C_Master_Init
  2030  0E8C                     l78:
  2031  0E8C  0008               	return
  2032  0E8D                     __end_of_setup:
  2033                           
  2034                           	psect	text5
  2035  0EBB                     __ptext5:	
  2036 ;; *************** function _I2C_Master_Init *****************
  2037 ;; Defined at:
  2038 ;;		line 16 in file "I2C.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  c               4    6[BANK0 ] const unsigned long 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0, pclath, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2052 ;;      Params:         0       4       0       0       0
  2053 ;;      Locals:         0       0       0       0       0
  2054 ;;      Temps:          0       4       0       0       0
  2055 ;;      Totals:         0       8       0       0       0
  2056 ;;Total ram usage:        8 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    2
  2059 ;; This function calls:
  2060 ;;		___lldiv
  2061 ;; This function is called by:
  2062 ;;		_setup
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           
  2067                           ;psect for function _I2C_Master_Init
  2068  0EBB                     _I2C_Master_Init:
  2069  0EBB                     l1982:	
  2070                           ;incstack = 0
  2071                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2072                           
  2073                           
  2074                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2075  0EBB  3028               	movlw	40
  2076  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  2078  0EBE  0094               	movwf	20	;volatile
  2079  0EBF                     l1984:
  2080                           
  2081                           ;I2C.c: 19:     SSPCON2 = 0;
  2082  0EBF  1683               	bsf	3,5	;RP0=1, select bank1
  2083  0EC0  1303               	bcf	3,6	;RP1=0, select bank1
  2084  0EC1  0191               	clrf	17	;volatile
  2085  0EC2                     l1986:
  2086                           
  2087                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2088  0EC2  1283               	bcf	3,5	;RP0=0, select bank0
  2089  0EC3  1303               	bcf	3,6	;RP1=0, select bank0
  2090  0EC4  0826               	movf	I2C_Master_Init@c,w
  2091  0EC5  00AA               	movwf	??_I2C_Master_Init
  2092  0EC6  0827               	movf	I2C_Master_Init@c+1,w
  2093  0EC7  00AB               	movwf	??_I2C_Master_Init+1
  2094  0EC8  0828               	movf	I2C_Master_Init@c+2,w
  2095  0EC9  00AC               	movwf	??_I2C_Master_Init+2
  2096  0ECA  0829               	movf	I2C_Master_Init@c+3,w
  2097  0ECB  00AD               	movwf	??_I2C_Master_Init+3
  2098  0ECC  3002               	movlw	2
  2099  0ECD                     u2125:
  2100  0ECD  1003               	clrc
  2101  0ECE  0DAA               	rlf	??_I2C_Master_Init,f
  2102  0ECF  0DAB               	rlf	??_I2C_Master_Init+1,f
  2103  0ED0  0DAC               	rlf	??_I2C_Master_Init+2,f
  2104  0ED1  0DAD               	rlf	??_I2C_Master_Init+3,f
  2105  0ED2                     u2120:
  2106  0ED2  3EFF               	addlw	-1
  2107  0ED3  1D03               	skipz
  2108  0ED4  2ECD               	goto	u2125
  2109  0ED5  082D               	movf	??_I2C_Master_Init+3,w
  2110  0ED6  00F5               	movwf	___lldiv@divisor+3
  2111  0ED7  082C               	movf	??_I2C_Master_Init+2,w
  2112  0ED8  00F4               	movwf	___lldiv@divisor+2
  2113  0ED9  082B               	movf	??_I2C_Master_Init+1,w
  2114  0EDA  00F3               	movwf	___lldiv@divisor+1
  2115  0EDB  082A               	movf	??_I2C_Master_Init,w
  2116  0EDC  00F2               	movwf	___lldiv@divisor
  2117  0EDD  3000               	movlw	0
  2118  0EDE  00F9               	movwf	___lldiv@dividend+3
  2119  0EDF  307A               	movlw	122
  2120  0EE0  00F8               	movwf	___lldiv@dividend+2
  2121  0EE1  3012               	movlw	18
  2122  0EE2  00F7               	movwf	___lldiv@dividend+1
  2123  0EE3  3000               	movlw	0
  2124  0EE4  00F6               	movwf	___lldiv@dividend
  2125  0EE5  120A  118A  2700  120A  158A  	fcall	___lldiv
  2126  0EEA  0872               	movf	?___lldiv,w
  2127  0EEB  3EFF               	addlw	255
  2128  0EEC  1683               	bsf	3,5	;RP0=1, select bank1
  2129  0EED  1303               	bcf	3,6	;RP1=0, select bank1
  2130  0EEE  0093               	movwf	19	;volatile
  2131  0EEF                     l1988:
  2132                           
  2133                           ;I2C.c: 21:     SSPSTAT = 0;
  2134  0EEF  0194               	clrf	20	;volatile
  2135  0EF0                     l1990:
  2136                           
  2137                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2138  0EF0  1587               	bsf	7,3	;volatile
  2139  0EF1                     l1992:
  2140                           
  2141                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2142  0EF1  1607               	bsf	7,4	;volatile
  2143  0EF2                     l107:
  2144  0EF2  0008               	return
  2145  0EF3                     __end_of_I2C_Master_Init:
  2146                           
  2147                           	psect	text6
  2148  0700                     __ptext6:	
  2149 ;; *************** function ___lldiv *****************
  2150 ;; Defined at:
  2151 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  divisor         4    2[COMMON] unsigned long 
  2154 ;;  dividend        4    6[COMMON] unsigned long 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  quotient        4    1[BANK0 ] unsigned long 
  2157 ;;  counter         1    5[BANK0 ] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  4    2[COMMON] unsigned long 
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2167 ;;      Params:         8       0       0       0       0
  2168 ;;      Locals:         0       5       0       0       0
  2169 ;;      Temps:          0       1       0       0       0
  2170 ;;      Totals:         8       6       0       0       0
  2171 ;;Total ram usage:       14 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    1
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_I2C_Master_Init
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           
  2182                           ;psect for function ___lldiv
  2183  0700                     ___lldiv:
  2184  0700                     l1958:	
  2185                           ;incstack = 0
  2186                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2187                           
  2188  0700  3000               	movlw	0
  2189  0701  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0702  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0703  00A4               	movwf	___lldiv@quotient+3
  2192  0704  3000               	movlw	0
  2193  0705  00A3               	movwf	___lldiv@quotient+2
  2194  0706  3000               	movlw	0
  2195  0707  00A2               	movwf	___lldiv@quotient+1
  2196  0708  3000               	movlw	0
  2197  0709  00A1               	movwf	___lldiv@quotient
  2198  070A  0875               	movf	___lldiv@divisor+3,w
  2199  070B  0474               	iorwf	___lldiv@divisor+2,w
  2200  070C  0473               	iorwf	___lldiv@divisor+1,w
  2201  070D  0472               	iorwf	___lldiv@divisor,w
  2202  070E  1903               	skipnz
  2203  070F  2F11               	goto	u2051
  2204  0710  2F12               	goto	u2050
  2205  0711                     u2051:
  2206  0711  2F5F               	goto	l1978
  2207  0712                     u2050:
  2208  0712                     l1960:
  2209  0712  01A5               	clrf	___lldiv@counter
  2210  0713  0AA5               	incf	___lldiv@counter,f
  2211  0714  2F22               	goto	l1964
  2212  0715                     l1962:
  2213  0715  3001               	movlw	1
  2214  0716  00A0               	movwf	??___lldiv
  2215  0717                     u2065:
  2216  0717  1003               	clrc
  2217  0718  0DF2               	rlf	___lldiv@divisor,f
  2218  0719  0DF3               	rlf	___lldiv@divisor+1,f
  2219  071A  0DF4               	rlf	___lldiv@divisor+2,f
  2220  071B  0DF5               	rlf	___lldiv@divisor+3,f
  2221  071C  0BA0               	decfsz	??___lldiv,f
  2222  071D  2F17               	goto	u2065
  2223  071E  3001               	movlw	1
  2224  071F  00A0               	movwf	??___lldiv
  2225  0720  0820               	movf	??___lldiv,w
  2226  0721  07A5               	addwf	___lldiv@counter,f
  2227  0722                     l1964:
  2228  0722  1FF5               	btfss	___lldiv@divisor+3,7
  2229  0723  2F25               	goto	u2071
  2230  0724  2F26               	goto	u2070
  2231  0725                     u2071:
  2232  0725  2F15               	goto	l1962
  2233  0726                     u2070:
  2234  0726                     l1966:
  2235  0726  3001               	movlw	1
  2236  0727  00A0               	movwf	??___lldiv
  2237  0728                     u2085:
  2238  0728  1003               	clrc
  2239  0729  0DA1               	rlf	___lldiv@quotient,f
  2240  072A  0DA2               	rlf	___lldiv@quotient+1,f
  2241  072B  0DA3               	rlf	___lldiv@quotient+2,f
  2242  072C  0DA4               	rlf	___lldiv@quotient+3,f
  2243  072D  0BA0               	decfsz	??___lldiv,f
  2244  072E  2F28               	goto	u2085
  2245  072F                     l1968:
  2246  072F  0875               	movf	___lldiv@divisor+3,w
  2247  0730  0279               	subwf	___lldiv@dividend+3,w
  2248  0731  1D03               	skipz
  2249  0732  2F3D               	goto	u2095
  2250  0733  0874               	movf	___lldiv@divisor+2,w
  2251  0734  0278               	subwf	___lldiv@dividend+2,w
  2252  0735  1D03               	skipz
  2253  0736  2F3D               	goto	u2095
  2254  0737  0873               	movf	___lldiv@divisor+1,w
  2255  0738  0277               	subwf	___lldiv@dividend+1,w
  2256  0739  1D03               	skipz
  2257  073A  2F3D               	goto	u2095
  2258  073B  0872               	movf	___lldiv@divisor,w
  2259  073C  0276               	subwf	___lldiv@dividend,w
  2260  073D                     u2095:
  2261  073D  1C03               	skipc
  2262  073E  2F40               	goto	u2091
  2263  073F  2F41               	goto	u2090
  2264  0740                     u2091:
  2265  0740  2F50               	goto	l1974
  2266  0741                     u2090:
  2267  0741                     l1970:
  2268  0741  0872               	movf	___lldiv@divisor,w
  2269  0742  02F6               	subwf	___lldiv@dividend,f
  2270  0743  0873               	movf	___lldiv@divisor+1,w
  2271  0744  1C03               	skipc
  2272  0745  0F73               	incfsz	___lldiv@divisor+1,w
  2273  0746  02F7               	subwf	___lldiv@dividend+1,f
  2274  0747  0874               	movf	___lldiv@divisor+2,w
  2275  0748  1C03               	skipc
  2276  0749  0F74               	incfsz	___lldiv@divisor+2,w
  2277  074A  02F8               	subwf	___lldiv@dividend+2,f
  2278  074B  0875               	movf	___lldiv@divisor+3,w
  2279  074C  1C03               	skipc
  2280  074D  0F75               	incfsz	___lldiv@divisor+3,w
  2281  074E  02F9               	subwf	___lldiv@dividend+3,f
  2282  074F                     l1972:
  2283  074F  1421               	bsf	___lldiv@quotient,0
  2284  0750                     l1974:
  2285  0750  3001               	movlw	1
  2286  0751                     u2105:
  2287  0751  1003               	clrc
  2288  0752  0CF5               	rrf	___lldiv@divisor+3,f
  2289  0753  0CF4               	rrf	___lldiv@divisor+2,f
  2290  0754  0CF3               	rrf	___lldiv@divisor+1,f
  2291  0755  0CF2               	rrf	___lldiv@divisor,f
  2292  0756  3EFF               	addlw	-1
  2293  0757  1D03               	skipz
  2294  0758  2F51               	goto	u2105
  2295  0759                     l1976:
  2296  0759  3001               	movlw	1
  2297  075A  02A5               	subwf	___lldiv@counter,f
  2298  075B  1D03               	btfss	3,2
  2299  075C  2F5E               	goto	u2111
  2300  075D  2F5F               	goto	u2110
  2301  075E                     u2111:
  2302  075E  2F26               	goto	l1966
  2303  075F                     u2110:
  2304  075F                     l1978:
  2305  075F  0824               	movf	___lldiv@quotient+3,w
  2306  0760  00F5               	movwf	?___lldiv+3
  2307  0761  0823               	movf	___lldiv@quotient+2,w
  2308  0762  00F4               	movwf	?___lldiv+2
  2309  0763  0822               	movf	___lldiv@quotient+1,w
  2310  0764  00F3               	movwf	?___lldiv+1
  2311  0765  0821               	movf	___lldiv@quotient,w
  2312  0766  00F2               	movwf	?___lldiv
  2313  0767                     l322:
  2314  0767  0008               	return
  2315  0768                     __end_of___lldiv:
  2316                           
  2317                           	psect	text7
  2318  05C8                     __ptext7:	
  2319 ;; *************** function ___xxtofl *****************
  2320 ;; Defined at:
  2321 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  sign            1    wreg     unsigned char 
  2324 ;;  val             4    2[COMMON] long 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  sign            1    0[BANK0 ] unsigned char 
  2327 ;;  arg             4    2[BANK0 ] unsigned long 
  2328 ;;  exp             1    1[BANK0 ] unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  4    2[COMMON] unsigned char 
  2331 ;; Registers used:
  2332 ;;		wreg, status,2, status,0
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2338 ;;      Params:         4       0       0       0       0
  2339 ;;      Locals:         0       6       0       0       0
  2340 ;;      Temps:          4       0       0       0       0
  2341 ;;      Totals:         8       6       0       0       0
  2342 ;;Total ram usage:       14 bytes
  2343 ;; Hardware stack levels used:    1
  2344 ;; Hardware stack levels required when called:    1
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_main
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           
  2353                           ;psect for function ___xxtofl
  2354  05C8                     ___xxtofl:
  2355                           
  2356                           ;incstack = 0
  2357                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2358                           ;___xxtofl@sign stored from wreg
  2359  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  2360  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  2361  05CA  00A0               	movwf	___xxtofl@sign
  2362  05CB                     l1826:
  2363  05CB  0820               	movf	___xxtofl@sign,w
  2364  05CC  1903               	btfsc	3,2
  2365  05CD  2DCF               	goto	u1911
  2366  05CE  2DD0               	goto	u1910
  2367  05CF                     u1911:
  2368  05CF  2DE4               	goto	l1832
  2369  05D0                     u1910:
  2370  05D0                     l1828:
  2371  05D0  1FF5               	btfss	___xxtofl@val+3,7
  2372  05D1  2DD3               	goto	u1921
  2373  05D2  2DD4               	goto	u1920
  2374  05D3                     u1921:
  2375  05D3  2DE4               	goto	l1832
  2376  05D4                     u1920:
  2377  05D4                     l1830:
  2378  05D4  0972               	comf	___xxtofl@val,w
  2379  05D5  00A2               	movwf	___xxtofl@arg
  2380  05D6  0973               	comf	___xxtofl@val+1,w
  2381  05D7  00A3               	movwf	___xxtofl@arg+1
  2382  05D8  0974               	comf	___xxtofl@val+2,w
  2383  05D9  00A4               	movwf	___xxtofl@arg+2
  2384  05DA  0975               	comf	___xxtofl@val+3,w
  2385  05DB  00A5               	movwf	___xxtofl@arg+3
  2386  05DC  0AA2               	incf	___xxtofl@arg,f
  2387  05DD  1903               	skipnz
  2388  05DE  0AA3               	incf	___xxtofl@arg+1,f
  2389  05DF  1903               	skipnz
  2390  05E0  0AA4               	incf	___xxtofl@arg+2,f
  2391  05E1  1903               	skipnz
  2392  05E2  0AA5               	incf	___xxtofl@arg+3,f
  2393  05E3  2DEC               	goto	l719
  2394  05E4                     l1832:
  2395  05E4  0875               	movf	___xxtofl@val+3,w
  2396  05E5  00A5               	movwf	___xxtofl@arg+3
  2397  05E6  0874               	movf	___xxtofl@val+2,w
  2398  05E7  00A4               	movwf	___xxtofl@arg+2
  2399  05E8  0873               	movf	___xxtofl@val+1,w
  2400  05E9  00A3               	movwf	___xxtofl@arg+1
  2401  05EA  0872               	movf	___xxtofl@val,w
  2402  05EB  00A2               	movwf	___xxtofl@arg
  2403  05EC                     l719:
  2404  05EC  0875               	movf	___xxtofl@val+3,w
  2405  05ED  0474               	iorwf	___xxtofl@val+2,w
  2406  05EE  0473               	iorwf	___xxtofl@val+1,w
  2407  05EF  0472               	iorwf	___xxtofl@val,w
  2408  05F0  1D03               	skipz
  2409  05F1  2DF3               	goto	u1931
  2410  05F2  2DF4               	goto	u1930
  2411  05F3                     u1931:
  2412  05F3  2DFD               	goto	l1838
  2413  05F4                     u1930:
  2414  05F4                     l1834:
  2415  05F4  3000               	movlw	0
  2416  05F5  00F5               	movwf	?___xxtofl+3
  2417  05F6  3000               	movlw	0
  2418  05F7  00F4               	movwf	?___xxtofl+2
  2419  05F8  3000               	movlw	0
  2420  05F9  00F3               	movwf	?___xxtofl+1
  2421  05FA  3000               	movlw	0
  2422  05FB  00F2               	movwf	?___xxtofl
  2423  05FC  2E83               	goto	l721
  2424  05FD                     l1838:
  2425  05FD  3096               	movlw	150
  2426  05FE  00F6               	movwf	??___xxtofl
  2427  05FF  0876               	movf	??___xxtofl,w
  2428  0600  00A1               	movwf	___xxtofl@exp
  2429  0601  2E0F               	goto	l1842
  2430  0602                     l1840:
  2431  0602  3001               	movlw	1
  2432  0603  00F6               	movwf	??___xxtofl
  2433  0604  0876               	movf	??___xxtofl,w
  2434  0605  07A1               	addwf	___xxtofl@exp,f
  2435  0606  3001               	movlw	1
  2436  0607                     u1945:
  2437  0607  1003               	clrc
  2438  0608  0CA5               	rrf	___xxtofl@arg+3,f
  2439  0609  0CA4               	rrf	___xxtofl@arg+2,f
  2440  060A  0CA3               	rrf	___xxtofl@arg+1,f
  2441  060B  0CA2               	rrf	___xxtofl@arg,f
  2442  060C  3EFF               	addlw	-1
  2443  060D  1D03               	skipz
  2444  060E  2E07               	goto	u1945
  2445  060F                     l1842:
  2446  060F  30FE               	movlw	254
  2447  0610  0525               	andwf	___xxtofl@arg+3,w
  2448  0611  1D03               	btfss	3,2
  2449  0612  2E14               	goto	u1951
  2450  0613  2E15               	goto	u1950
  2451  0614                     u1951:
  2452  0614  2E02               	goto	l1840
  2453  0615                     u1950:
  2454  0615  2E31               	goto	l725
  2455  0616                     l1844:
  2456  0616  3001               	movlw	1
  2457  0617  00F6               	movwf	??___xxtofl
  2458  0618  0876               	movf	??___xxtofl,w
  2459  0619  07A1               	addwf	___xxtofl@exp,f
  2460  061A                     l1846:
  2461  061A  3001               	movlw	1
  2462  061B  07A2               	addwf	___xxtofl@arg,f
  2463  061C  3000               	movlw	0
  2464  061D  1803               	skipnc
  2465  061E  3001               	movlw	1
  2466  061F  07A3               	addwf	___xxtofl@arg+1,f
  2467  0620  3000               	movlw	0
  2468  0621  1803               	skipnc
  2469  0622  3001               	movlw	1
  2470  0623  07A4               	addwf	___xxtofl@arg+2,f
  2471  0624  3000               	movlw	0
  2472  0625  1803               	skipnc
  2473  0626  3001               	movlw	1
  2474  0627  07A5               	addwf	___xxtofl@arg+3,f
  2475  0628                     l1848:
  2476  0628  3001               	movlw	1
  2477  0629                     u1965:
  2478  0629  1003               	clrc
  2479  062A  0CA5               	rrf	___xxtofl@arg+3,f
  2480  062B  0CA4               	rrf	___xxtofl@arg+2,f
  2481  062C  0CA3               	rrf	___xxtofl@arg+1,f
  2482  062D  0CA2               	rrf	___xxtofl@arg,f
  2483  062E  3EFF               	addlw	-1
  2484  062F  1D03               	skipz
  2485  0630  2E29               	goto	u1965
  2486  0631                     l725:
  2487  0631  30FF               	movlw	255
  2488  0632  0525               	andwf	___xxtofl@arg+3,w
  2489  0633  1D03               	btfss	3,2
  2490  0634  2E36               	goto	u1971
  2491  0635  2E37               	goto	u1970
  2492  0636                     u1971:
  2493  0636  2E16               	goto	l1844
  2494  0637                     u1970:
  2495  0637  2E43               	goto	l1852
  2496  0638                     l1850:
  2497  0638  3001               	movlw	1
  2498  0639  02A1               	subwf	___xxtofl@exp,f
  2499  063A  3001               	movlw	1
  2500  063B  00F6               	movwf	??___xxtofl
  2501  063C                     u1985:
  2502  063C  1003               	clrc
  2503  063D  0DA2               	rlf	___xxtofl@arg,f
  2504  063E  0DA3               	rlf	___xxtofl@arg+1,f
  2505  063F  0DA4               	rlf	___xxtofl@arg+2,f
  2506  0640  0DA5               	rlf	___xxtofl@arg+3,f
  2507  0641  0BF6               	decfsz	??___xxtofl,f
  2508  0642  2E3C               	goto	u1985
  2509  0643                     l1852:
  2510  0643  1BA4               	btfsc	___xxtofl@arg+2,7
  2511  0644  2E46               	goto	u1991
  2512  0645  2E47               	goto	u1990
  2513  0646                     u1991:
  2514  0646  2E4D               	goto	l732
  2515  0647                     u1990:
  2516  0647                     l1854:
  2517  0647  3002               	movlw	2
  2518  0648  0221               	subwf	___xxtofl@exp,w
  2519  0649  1803               	skipnc
  2520  064A  2E4C               	goto	u2001
  2521  064B  2E4D               	goto	u2000
  2522  064C                     u2001:
  2523  064C  2E38               	goto	l1850
  2524  064D                     u2000:
  2525  064D                     l732:
  2526  064D  1821               	btfsc	___xxtofl@exp,0
  2527  064E  2E50               	goto	u2011
  2528  064F  2E51               	goto	u2010
  2529  0650                     u2011:
  2530  0650  2E59               	goto	l733
  2531  0651                     u2010:
  2532  0651                     l1856:
  2533  0651  30FF               	movlw	255
  2534  0652  05A2               	andwf	___xxtofl@arg,f
  2535  0653  30FF               	movlw	255
  2536  0654  05A3               	andwf	___xxtofl@arg+1,f
  2537  0655  307F               	movlw	127
  2538  0656  05A4               	andwf	___xxtofl@arg+2,f
  2539  0657  30FF               	movlw	255
  2540  0658  05A5               	andwf	___xxtofl@arg+3,f
  2541  0659                     l733:
  2542  0659  1003               	clrc
  2543  065A  0CA1               	rrf	___xxtofl@exp,f
  2544  065B                     l1858:
  2545  065B  0821               	movf	___xxtofl@exp,w
  2546  065C  00F6               	movwf	??___xxtofl
  2547  065D  01F7               	clrf	??___xxtofl+1
  2548  065E  01F8               	clrf	??___xxtofl+2
  2549  065F  01F9               	clrf	??___xxtofl+3
  2550  0660  3018               	movlw	24
  2551  0661                     u2025:
  2552  0661  1003               	clrc
  2553  0662  0DF6               	rlf	??___xxtofl,f
  2554  0663  0DF7               	rlf	??___xxtofl+1,f
  2555  0664  0DF8               	rlf	??___xxtofl+2,f
  2556  0665  0DF9               	rlf	??___xxtofl+3,f
  2557  0666                     u2020:
  2558  0666  3EFF               	addlw	-1
  2559  0667  1D03               	skipz
  2560  0668  2E61               	goto	u2025
  2561  0669  0876               	movf	??___xxtofl,w
  2562  066A  04A2               	iorwf	___xxtofl@arg,f
  2563  066B  0877               	movf	??___xxtofl+1,w
  2564  066C  04A3               	iorwf	___xxtofl@arg+1,f
  2565  066D  0878               	movf	??___xxtofl+2,w
  2566  066E  04A4               	iorwf	___xxtofl@arg+2,f
  2567  066F  0879               	movf	??___xxtofl+3,w
  2568  0670  04A5               	iorwf	___xxtofl@arg+3,f
  2569  0671                     l1860:
  2570  0671  0820               	movf	___xxtofl@sign,w
  2571  0672  1903               	btfsc	3,2
  2572  0673  2E75               	goto	u2031
  2573  0674  2E76               	goto	u2030
  2574  0675                     u2031:
  2575  0675  2E7B               	goto	l1866
  2576  0676                     u2030:
  2577  0676                     l1862:
  2578  0676  1FF5               	btfss	___xxtofl@val+3,7
  2579  0677  2E79               	goto	u2041
  2580  0678  2E7A               	goto	u2040
  2581  0679                     u2041:
  2582  0679  2E7B               	goto	l1866
  2583  067A                     u2040:
  2584  067A                     l1864:
  2585  067A  17A5               	bsf	___xxtofl@arg+3,7
  2586  067B                     l1866:
  2587  067B  0825               	movf	___xxtofl@arg+3,w
  2588  067C  00F5               	movwf	?___xxtofl+3
  2589  067D  0824               	movf	___xxtofl@arg+2,w
  2590  067E  00F4               	movwf	?___xxtofl+2
  2591  067F  0823               	movf	___xxtofl@arg+1,w
  2592  0680  00F3               	movwf	?___xxtofl+1
  2593  0681  0822               	movf	___xxtofl@arg,w
  2594  0682  00F2               	movwf	?___xxtofl
  2595  0683                     l721:
  2596  0683  0008               	return
  2597  0684                     __end_of___xxtofl:
  2598                           
  2599                           	psect	text8
  2600  0684                     __ptext8:	
  2601 ;; *************** function ___fltol *****************
  2602 ;; Defined at:
  2603 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  f1              4   32[BANK0 ] unsigned char 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  exp1            1   42[BANK0 ] unsigned char 
  2608 ;;  sign1           1   41[BANK0 ] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  4   32[BANK0 ] long 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2618 ;;      Params:         0       4       0       0       0
  2619 ;;      Locals:         0       2       0       0       0
  2620 ;;      Temps:          0       5       0       0       0
  2621 ;;      Totals:         0      11       0       0       0
  2622 ;;Total ram usage:       11 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    1
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_main
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           
  2633                           ;psect for function ___fltol
  2634  0684                     ___fltol:
  2635  0684                     l1650:	
  2636                           ;incstack = 0
  2637                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2638                           
  2639  0684  1003               	clrc
  2640  0685  1283               	bcf	3,5	;RP0=0, select bank0
  2641  0686  1303               	bcf	3,6	;RP1=0, select bank0
  2642  0687  0D42               	rlf	___fltol@f1+2,w
  2643  0688  0D43               	rlf	___fltol@f1+3,w
  2644  0689  00C4               	movwf	??___fltol
  2645  068A  0844               	movf	??___fltol,w
  2646  068B  00CA               	movwf	___fltol@exp1
  2647  068C  084A               	movf	___fltol@exp1,w
  2648  068D  1D03               	btfss	3,2
  2649  068E  2E90               	goto	u1441
  2650  068F  2E91               	goto	u1440
  2651  0690                     u1441:
  2652  0690  2E9A               	goto	l1656
  2653  0691                     u1440:
  2654  0691                     l1652:
  2655  0691  3000               	movlw	0
  2656  0692  00C3               	movwf	?___fltol+3
  2657  0693  3000               	movlw	0
  2658  0694  00C2               	movwf	?___fltol+2
  2659  0695  3000               	movlw	0
  2660  0696  00C1               	movwf	?___fltol+1
  2661  0697  3000               	movlw	0
  2662  0698  00C0               	movwf	?___fltol
  2663  0699  2EFF               	goto	l472
  2664  069A                     l1656:
  2665  069A  0840               	movf	___fltol@f1,w
  2666  069B  00C4               	movwf	??___fltol
  2667  069C  0841               	movf	___fltol@f1+1,w
  2668  069D  00C5               	movwf	??___fltol+1
  2669  069E  0842               	movf	___fltol@f1+2,w
  2670  069F  00C6               	movwf	??___fltol+2
  2671  06A0  0843               	movf	___fltol@f1+3,w
  2672  06A1  00C7               	movwf	??___fltol+3
  2673  06A2  301F               	movlw	31
  2674  06A3                     u1455:
  2675  06A3  1003               	clrc
  2676  06A4  0CC7               	rrf	??___fltol+3,f
  2677  06A5  0CC6               	rrf	??___fltol+2,f
  2678  06A6  0CC5               	rrf	??___fltol+1,f
  2679  06A7  0CC4               	rrf	??___fltol,f
  2680  06A8                     u1450:
  2681  06A8  3EFF               	addlw	-1
  2682  06A9  1D03               	skipz
  2683  06AA  2EA3               	goto	u1455
  2684  06AB  0844               	movf	??___fltol,w
  2685  06AC  00C8               	movwf	??___fltol+4
  2686  06AD  0848               	movf	??___fltol+4,w
  2687  06AE  00C9               	movwf	___fltol@sign1
  2688  06AF                     l1658:
  2689  06AF  17C2               	bsf	___fltol@f1+2,7
  2690  06B0                     l1660:
  2691  06B0  30FF               	movlw	255
  2692  06B1  05C0               	andwf	___fltol@f1,f
  2693  06B2  30FF               	movlw	255
  2694  06B3  05C1               	andwf	___fltol@f1+1,f
  2695  06B4  30FF               	movlw	255
  2696  06B5  05C2               	andwf	___fltol@f1+2,f
  2697  06B6  3000               	movlw	0
  2698  06B7  05C3               	andwf	___fltol@f1+3,f
  2699  06B8                     l1662:
  2700  06B8  3096               	movlw	150
  2701  06B9  02CA               	subwf	___fltol@exp1,f
  2702  06BA                     l1664:
  2703  06BA  1FCA               	btfss	___fltol@exp1,7
  2704  06BB  2EBD               	goto	u1461
  2705  06BC  2EBE               	goto	u1460
  2706  06BD                     u1461:
  2707  06BD  2ED8               	goto	l1674
  2708  06BE                     u1460:
  2709  06BE                     l1666:
  2710  06BE  084A               	movf	___fltol@exp1,w
  2711  06BF  3A80               	xorlw	128
  2712  06C0  3E97               	addlw	151
  2713  06C1  1803               	skipnc
  2714  06C2  2EC4               	goto	u1471
  2715  06C3  2EC5               	goto	u1470
  2716  06C4                     u1471:
  2717  06C4  2EC6               	goto	l1672
  2718  06C5                     u1470:
  2719  06C5  2E91               	goto	l1652
  2720  06C6                     l1672:
  2721  06C6  3001               	movlw	1
  2722  06C7                     u1485:
  2723  06C7  1003               	clrc
  2724  06C8  0CC3               	rrf	___fltol@f1+3,f
  2725  06C9  0CC2               	rrf	___fltol@f1+2,f
  2726  06CA  0CC1               	rrf	___fltol@f1+1,f
  2727  06CB  0CC0               	rrf	___fltol@f1,f
  2728  06CC  3EFF               	addlw	-1
  2729  06CD  1D03               	skipz
  2730  06CE  2EC7               	goto	u1485
  2731  06CF  3001               	movlw	1
  2732  06D0  00C4               	movwf	??___fltol
  2733  06D1  0844               	movf	??___fltol,w
  2734  06D2  07CA               	addwf	___fltol@exp1,f
  2735  06D3  1D03               	btfss	3,2
  2736  06D4  2ED6               	goto	u1491
  2737  06D5  2ED7               	goto	u1490
  2738  06D6                     u1491:
  2739  06D6  2EC6               	goto	l1672
  2740  06D7                     u1490:
  2741  06D7  2EEF               	goto	l1682
  2742  06D8                     l1674:
  2743  06D8  3020               	movlw	32
  2744  06D9  024A               	subwf	___fltol@exp1,w
  2745  06DA  1C03               	skipc
  2746  06DB  2EDD               	goto	u1501
  2747  06DC  2EDE               	goto	u1500
  2748  06DD                     u1501:
  2749  06DD  2EEA               	goto	l479
  2750  06DE                     u1500:
  2751  06DE  2E91               	goto	l1652
  2752  06DF                     l1680:
  2753  06DF  3001               	movlw	1
  2754  06E0  00C4               	movwf	??___fltol
  2755  06E1                     u1515:
  2756  06E1  1003               	clrc
  2757  06E2  0DC0               	rlf	___fltol@f1,f
  2758  06E3  0DC1               	rlf	___fltol@f1+1,f
  2759  06E4  0DC2               	rlf	___fltol@f1+2,f
  2760  06E5  0DC3               	rlf	___fltol@f1+3,f
  2761  06E6  0BC4               	decfsz	??___fltol,f
  2762  06E7  2EE1               	goto	u1515
  2763  06E8  3001               	movlw	1
  2764  06E9  02CA               	subwf	___fltol@exp1,f
  2765  06EA                     l479:
  2766  06EA  084A               	movf	___fltol@exp1,w
  2767  06EB  1D03               	btfss	3,2
  2768  06EC  2EEE               	goto	u1521
  2769  06ED  2EEF               	goto	u1520
  2770  06EE                     u1521:
  2771  06EE  2EDF               	goto	l1680
  2772  06EF                     u1520:
  2773  06EF                     l1682:
  2774  06EF  0849               	movf	___fltol@sign1,w
  2775  06F0  1903               	btfsc	3,2
  2776  06F1  2EF3               	goto	u1531
  2777  06F2  2EF4               	goto	u1530
  2778  06F3                     u1531:
  2779  06F3  2EFF               	goto	l482
  2780  06F4                     u1530:
  2781  06F4                     l1684:
  2782  06F4  09C0               	comf	___fltol@f1,f
  2783  06F5  09C1               	comf	___fltol@f1+1,f
  2784  06F6  09C2               	comf	___fltol@f1+2,f
  2785  06F7  09C3               	comf	___fltol@f1+3,f
  2786  06F8  0AC0               	incf	___fltol@f1,f
  2787  06F9  1903               	skipnz
  2788  06FA  0AC1               	incf	___fltol@f1+1,f
  2789  06FB  1903               	skipnz
  2790  06FC  0AC2               	incf	___fltol@f1+2,f
  2791  06FD  1903               	skipnz
  2792  06FE  0AC3               	incf	___fltol@f1+3,f
  2793  06FF                     l482:
  2794  06FF                     l472:
  2795  06FF  0008               	return
  2796  0700                     __end_of___fltol:
  2797                           
  2798                           	psect	text9
  2799  001D                     __ptext9:	
  2800 ;; *************** function ___flmul *****************
  2801 ;; Defined at:
  2802 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  b               4    6[BANK0 ] long 
  2805 ;;  a               4   10[BANK0 ] long 
  2806 ;; Auto vars:     Size  Location     Type
  2807 ;;  prod            4   26[BANK0 ] struct .
  2808 ;;  grs             4   21[BANK0 ] unsigned long 
  2809 ;;  temp            2   30[BANK0 ] struct .
  2810 ;;  bexp            1   25[BANK0 ] unsigned char 
  2811 ;;  aexp            1   20[BANK0 ] unsigned char 
  2812 ;;  sign            1   19[BANK0 ] unsigned char 
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  4    6[BANK0 ] unsigned char 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2822 ;;      Params:         0       8       0       0       0
  2823 ;;      Locals:         0      13       0       0       0
  2824 ;;      Temps:          0       5       0       0       0
  2825 ;;      Totals:         0      26       0       0       0
  2826 ;;Total ram usage:       26 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    2
  2829 ;; This function calls:
  2830 ;;		__Umul8_16
  2831 ;; This function is called by:
  2832 ;;		_main
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           
  2837                           ;psect for function ___flmul
  2838  001D                     ___flmul:
  2839  001D                     l2112:	
  2840                           ;incstack = 0
  2841                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2842                           
  2843  001D  1283               	bcf	3,5	;RP0=0, select bank0
  2844  001E  1303               	bcf	3,6	;RP1=0, select bank0
  2845  001F  0829               	movf	___flmul@b+3,w
  2846  0020  3980               	andlw	128
  2847  0021  00AE               	movwf	??___flmul
  2848  0022  082E               	movf	??___flmul,w
  2849  0023  00B3               	movwf	___flmul@sign
  2850  0024                     l2114:
  2851  0024  0829               	movf	___flmul@b+3,w
  2852  0025  00AE               	movwf	??___flmul
  2853  0026  072E               	addwf	??___flmul,w
  2854  0027  00AF               	movwf	??___flmul+1
  2855  0028  082F               	movf	??___flmul+1,w
  2856  0029  00B9               	movwf	___flmul@bexp
  2857  002A                     l2116:
  2858  002A  1FA8               	btfss	___flmul@b+2,7
  2859  002B  282D               	goto	u2321
  2860  002C  282E               	goto	u2320
  2861  002D                     u2321:
  2862  002D  282F               	goto	l2120
  2863  002E                     u2320:
  2864  002E                     l2118:
  2865  002E  1439               	bsf	___flmul@bexp,0
  2866  002F                     l2120:
  2867  002F  0839               	movf	___flmul@bexp,w
  2868  0030  1903               	btfsc	3,2
  2869  0031  2833               	goto	u2331
  2870  0032  2834               	goto	u2330
  2871  0033                     u2331:
  2872  0033  2843               	goto	l2128
  2873  0034                     u2330:
  2874  0034                     l2122:
  2875  0034  0A39               	incf	___flmul@bexp,w
  2876  0035  1D03               	btfss	3,2
  2877  0036  2838               	goto	u2341
  2878  0037  2839               	goto	u2340
  2879  0038                     u2341:
  2880  0038  2841               	goto	l2126
  2881  0039                     u2340:
  2882  0039                     l2124:
  2883  0039  3000               	movlw	0
  2884  003A  00A9               	movwf	___flmul@b+3
  2885  003B  3000               	movlw	0
  2886  003C  00A8               	movwf	___flmul@b+2
  2887  003D  3000               	movlw	0
  2888  003E  00A7               	movwf	___flmul@b+1
  2889  003F  3000               	movlw	0
  2890  0040  00A6               	movwf	___flmul@b
  2891  0041                     l2126:
  2892  0041  17A8               	bsf	___flmul@b+2,7
  2893  0042  284B               	goto	l2130
  2894  0043                     l2128:
  2895  0043  3000               	movlw	0
  2896  0044  00A9               	movwf	___flmul@b+3
  2897  0045  3000               	movlw	0
  2898  0046  00A8               	movwf	___flmul@b+2
  2899  0047  3000               	movlw	0
  2900  0048  00A7               	movwf	___flmul@b+1
  2901  0049  3000               	movlw	0
  2902  004A  00A6               	movwf	___flmul@b
  2903  004B                     l2130:
  2904  004B  082D               	movf	___flmul@a+3,w
  2905  004C  3980               	andlw	128
  2906  004D  00AE               	movwf	??___flmul
  2907  004E  082E               	movf	??___flmul,w
  2908  004F  06B3               	xorwf	___flmul@sign,f
  2909  0050                     l2132:
  2910  0050  082D               	movf	___flmul@a+3,w
  2911  0051  00AE               	movwf	??___flmul
  2912  0052  072E               	addwf	??___flmul,w
  2913  0053  00AF               	movwf	??___flmul+1
  2914  0054  082F               	movf	??___flmul+1,w
  2915  0055  00B4               	movwf	___flmul@aexp
  2916  0056                     l2134:
  2917  0056  1FAC               	btfss	___flmul@a+2,7
  2918  0057  2859               	goto	u2351
  2919  0058  285A               	goto	u2350
  2920  0059                     u2351:
  2921  0059  285B               	goto	l2138
  2922  005A                     u2350:
  2923  005A                     l2136:
  2924  005A  1434               	bsf	___flmul@aexp,0
  2925  005B                     l2138:
  2926  005B  0834               	movf	___flmul@aexp,w
  2927  005C  1903               	btfsc	3,2
  2928  005D  285F               	goto	u2361
  2929  005E  2860               	goto	u2360
  2930  005F                     u2361:
  2931  005F  286F               	goto	l2146
  2932  0060                     u2360:
  2933  0060                     l2140:
  2934  0060  0A34               	incf	___flmul@aexp,w
  2935  0061  1D03               	btfss	3,2
  2936  0062  2864               	goto	u2371
  2937  0063  2865               	goto	u2370
  2938  0064                     u2371:
  2939  0064  286D               	goto	l2144
  2940  0065                     u2370:
  2941  0065                     l2142:
  2942  0065  3000               	movlw	0
  2943  0066  00AD               	movwf	___flmul@a+3
  2944  0067  3000               	movlw	0
  2945  0068  00AC               	movwf	___flmul@a+2
  2946  0069  3000               	movlw	0
  2947  006A  00AB               	movwf	___flmul@a+1
  2948  006B  3000               	movlw	0
  2949  006C  00AA               	movwf	___flmul@a
  2950  006D                     l2144:
  2951  006D  17AC               	bsf	___flmul@a+2,7
  2952  006E  2877               	goto	l2148
  2953  006F                     l2146:
  2954  006F  3000               	movlw	0
  2955  0070  00AD               	movwf	___flmul@a+3
  2956  0071  3000               	movlw	0
  2957  0072  00AC               	movwf	___flmul@a+2
  2958  0073  3000               	movlw	0
  2959  0074  00AB               	movwf	___flmul@a+1
  2960  0075  3000               	movlw	0
  2961  0076  00AA               	movwf	___flmul@a
  2962  0077                     l2148:
  2963  0077  0834               	movf	___flmul@aexp,w
  2964  0078  1903               	btfsc	3,2
  2965  0079  287B               	goto	u2381
  2966  007A  287C               	goto	u2380
  2967  007B                     u2381:
  2968  007B  2881               	goto	l2152
  2969  007C                     u2380:
  2970  007C                     l2150:
  2971  007C  0839               	movf	___flmul@bexp,w
  2972  007D  1D03               	btfss	3,2
  2973  007E  2880               	goto	u2391
  2974  007F  2881               	goto	u2390
  2975  0080                     u2391:
  2976  0080  288A               	goto	l2156
  2977  0081                     u2390:
  2978  0081                     l2152:
  2979  0081  3000               	movlw	0
  2980  0082  00A9               	movwf	?___flmul+3
  2981  0083  3000               	movlw	0
  2982  0084  00A8               	movwf	?___flmul+2
  2983  0085  3000               	movlw	0
  2984  0086  00A7               	movwf	?___flmul+1
  2985  0087  3000               	movlw	0
  2986  0088  00A6               	movwf	?___flmul
  2987  0089  2B7D               	goto	l675
  2988  008A                     l2156:
  2989  008A  0826               	movf	___flmul@b,w
  2990  008B  00AE               	movwf	??___flmul
  2991  008C  082E               	movf	??___flmul,w
  2992  008D  00F2               	movwf	__Umul8_16@multiplicand
  2993  008E  082C               	movf	___flmul@a+2,w
  2994  008F  120A  158A  2637  120A  118A  	fcall	__Umul8_16
  2995  0094  0873               	movf	?__Umul8_16+1,w
  2996  0095  1283               	bcf	3,5	;RP0=0, select bank0
  2997  0096  1303               	bcf	3,6	;RP1=0, select bank0
  2998  0097  00BF               	movwf	___flmul@temp+1
  2999  0098  0872               	movf	?__Umul8_16,w
  3000  0099  00BE               	movwf	___flmul@temp
  3001  009A                     l2158:
  3002  009A  083E               	movf	___flmul@temp,w
  3003  009B  00AE               	movwf	??___flmul
  3004  009C  01AF               	clrf	??___flmul+1
  3005  009D  01B0               	clrf	??___flmul+2
  3006  009E  01B1               	clrf	??___flmul+3
  3007  009F  0831               	movf	??___flmul+3,w
  3008  00A0  00B8               	movwf	___flmul@grs+3
  3009  00A1  0830               	movf	??___flmul+2,w
  3010  00A2  00B7               	movwf	___flmul@grs+2
  3011  00A3  082F               	movf	??___flmul+1,w
  3012  00A4  00B6               	movwf	___flmul@grs+1
  3013  00A5  082E               	movf	??___flmul,w
  3014  00A6  00B5               	movwf	___flmul@grs
  3015  00A7                     l2160:
  3016  00A7  083F               	movf	___flmul@temp+1,w
  3017  00A8  00AE               	movwf	??___flmul
  3018  00A9  01AF               	clrf	??___flmul+1
  3019  00AA  01B0               	clrf	??___flmul+2
  3020  00AB  01B1               	clrf	??___flmul+3
  3021  00AC  0831               	movf	??___flmul+3,w
  3022  00AD  00BD               	movwf	___flmul@prod+3
  3023  00AE  0830               	movf	??___flmul+2,w
  3024  00AF  00BC               	movwf	___flmul@prod+2
  3025  00B0  082F               	movf	??___flmul+1,w
  3026  00B1  00BB               	movwf	___flmul@prod+1
  3027  00B2  082E               	movf	??___flmul,w
  3028  00B3  00BA               	movwf	___flmul@prod
  3029  00B4  0827               	movf	___flmul@b+1,w
  3030  00B5  00AE               	movwf	??___flmul
  3031  00B6  082E               	movf	??___flmul,w
  3032  00B7  00F2               	movwf	__Umul8_16@multiplicand
  3033  00B8  082B               	movf	___flmul@a+1,w
  3034  00B9  120A  158A  2637  120A  118A  	fcall	__Umul8_16
  3035  00BE  0873               	movf	?__Umul8_16+1,w
  3036  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  3037  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  3038  00C1  00BF               	movwf	___flmul@temp+1
  3039  00C2  0872               	movf	?__Umul8_16,w
  3040  00C3  00BE               	movwf	___flmul@temp
  3041  00C4                     l2162:
  3042  00C4  083E               	movf	___flmul@temp,w
  3043  00C5  00AE               	movwf	??___flmul
  3044  00C6  01AF               	clrf	??___flmul+1
  3045  00C7  01B0               	clrf	??___flmul+2
  3046  00C8  01B1               	clrf	??___flmul+3
  3047  00C9  082E               	movf	??___flmul,w
  3048  00CA  07B5               	addwf	___flmul@grs,f
  3049  00CB  082F               	movf	??___flmul+1,w
  3050  00CC  1103               	clrz
  3051  00CD  1803               	skipnc
  3052  00CE  3E01               	addlw	1
  3053  00CF  1903               	skipnz
  3054  00D0  28D2               	goto	u2401
  3055  00D1  07B6               	addwf	___flmul@grs+1,f
  3056  00D2                     u2401:
  3057  00D2  0830               	movf	??___flmul+2,w
  3058  00D3  1103               	clrz
  3059  00D4  1803               	skipnc
  3060  00D5  3E01               	addlw	1
  3061  00D6  1903               	skipnz
  3062  00D7  28D9               	goto	u2402
  3063  00D8  07B7               	addwf	___flmul@grs+2,f
  3064  00D9                     u2402:
  3065  00D9  0831               	movf	??___flmul+3,w
  3066  00DA  1103               	clrz
  3067  00DB  1803               	skipnc
  3068  00DC  3E01               	addlw	1
  3069  00DD  1903               	skipnz
  3070  00DE  28E0               	goto	u2403
  3071  00DF  07B8               	addwf	___flmul@grs+3,f
  3072  00E0                     u2403:
  3073  00E0                     l2164:
  3074  00E0  083F               	movf	___flmul@temp+1,w
  3075  00E1  00AE               	movwf	??___flmul
  3076  00E2  01AF               	clrf	??___flmul+1
  3077  00E3  01B0               	clrf	??___flmul+2
  3078  00E4  01B1               	clrf	??___flmul+3
  3079  00E5  082E               	movf	??___flmul,w
  3080  00E6  07BA               	addwf	___flmul@prod,f
  3081  00E7  082F               	movf	??___flmul+1,w
  3082  00E8  1103               	clrz
  3083  00E9  1803               	skipnc
  3084  00EA  3E01               	addlw	1
  3085  00EB  1903               	skipnz
  3086  00EC  28EE               	goto	u2411
  3087  00ED  07BB               	addwf	___flmul@prod+1,f
  3088  00EE                     u2411:
  3089  00EE  0830               	movf	??___flmul+2,w
  3090  00EF  1103               	clrz
  3091  00F0  1803               	skipnc
  3092  00F1  3E01               	addlw	1
  3093  00F2  1903               	skipnz
  3094  00F3  28F5               	goto	u2412
  3095  00F4  07BC               	addwf	___flmul@prod+2,f
  3096  00F5                     u2412:
  3097  00F5  0831               	movf	??___flmul+3,w
  3098  00F6  1103               	clrz
  3099  00F7  1803               	skipnc
  3100  00F8  3E01               	addlw	1
  3101  00F9  1903               	skipnz
  3102  00FA  28FC               	goto	u2413
  3103  00FB  07BD               	addwf	___flmul@prod+3,f
  3104  00FC                     u2413:
  3105  00FC  0828               	movf	___flmul@b+2,w
  3106  00FD  00AE               	movwf	??___flmul
  3107  00FE  082E               	movf	??___flmul,w
  3108  00FF  00F2               	movwf	__Umul8_16@multiplicand
  3109  0100  082A               	movf	___flmul@a,w
  3110  0101  120A  158A  2637  120A  118A  	fcall	__Umul8_16
  3111  0106  0873               	movf	?__Umul8_16+1,w
  3112  0107  1283               	bcf	3,5	;RP0=0, select bank0
  3113  0108  1303               	bcf	3,6	;RP1=0, select bank0
  3114  0109  00BF               	movwf	___flmul@temp+1
  3115  010A  0872               	movf	?__Umul8_16,w
  3116  010B  00BE               	movwf	___flmul@temp
  3117  010C                     l2166:
  3118  010C  083E               	movf	___flmul@temp,w
  3119  010D  00AE               	movwf	??___flmul
  3120  010E  01AF               	clrf	??___flmul+1
  3121  010F  01B0               	clrf	??___flmul+2
  3122  0110  01B1               	clrf	??___flmul+3
  3123  0111  082E               	movf	??___flmul,w
  3124  0112  07B5               	addwf	___flmul@grs,f
  3125  0113  082F               	movf	??___flmul+1,w
  3126  0114  1103               	clrz
  3127  0115  1803               	skipnc
  3128  0116  3E01               	addlw	1
  3129  0117  1903               	skipnz
  3130  0118  291A               	goto	u2421
  3131  0119  07B6               	addwf	___flmul@grs+1,f
  3132  011A                     u2421:
  3133  011A  0830               	movf	??___flmul+2,w
  3134  011B  1103               	clrz
  3135  011C  1803               	skipnc
  3136  011D  3E01               	addlw	1
  3137  011E  1903               	skipnz
  3138  011F  2921               	goto	u2422
  3139  0120  07B7               	addwf	___flmul@grs+2,f
  3140  0121                     u2422:
  3141  0121  0831               	movf	??___flmul+3,w
  3142  0122  1103               	clrz
  3143  0123  1803               	skipnc
  3144  0124  3E01               	addlw	1
  3145  0125  1903               	skipnz
  3146  0126  2928               	goto	u2423
  3147  0127  07B8               	addwf	___flmul@grs+3,f
  3148  0128                     u2423:
  3149  0128                     l2168:
  3150  0128  083F               	movf	___flmul@temp+1,w
  3151  0129  00AE               	movwf	??___flmul
  3152  012A  01AF               	clrf	??___flmul+1
  3153  012B  01B0               	clrf	??___flmul+2
  3154  012C  01B1               	clrf	??___flmul+3
  3155  012D  082E               	movf	??___flmul,w
  3156  012E  07BA               	addwf	___flmul@prod,f
  3157  012F  082F               	movf	??___flmul+1,w
  3158  0130  1103               	clrz
  3159  0131  1803               	skipnc
  3160  0132  3E01               	addlw	1
  3161  0133  1903               	skipnz
  3162  0134  2936               	goto	u2431
  3163  0135  07BB               	addwf	___flmul@prod+1,f
  3164  0136                     u2431:
  3165  0136  0830               	movf	??___flmul+2,w
  3166  0137  1103               	clrz
  3167  0138  1803               	skipnc
  3168  0139  3E01               	addlw	1
  3169  013A  1903               	skipnz
  3170  013B  293D               	goto	u2432
  3171  013C  07BC               	addwf	___flmul@prod+2,f
  3172  013D                     u2432:
  3173  013D  0831               	movf	??___flmul+3,w
  3174  013E  1103               	clrz
  3175  013F  1803               	skipnc
  3176  0140  3E01               	addlw	1
  3177  0141  1903               	skipnz
  3178  0142  2944               	goto	u2433
  3179  0143  07BD               	addwf	___flmul@prod+3,f
  3180  0144                     u2433:
  3181  0144                     l2170:
  3182  0144  3008               	movlw	8
  3183  0145  00AE               	movwf	??___flmul
  3184  0146                     u2445:
  3185  0146  1003               	clrc
  3186  0147  0DB5               	rlf	___flmul@grs,f
  3187  0148  0DB6               	rlf	___flmul@grs+1,f
  3188  0149  0DB7               	rlf	___flmul@grs+2,f
  3189  014A  0DB8               	rlf	___flmul@grs+3,f
  3190  014B  0BAE               	decfsz	??___flmul,f
  3191  014C  2946               	goto	u2445
  3192  014D                     l2172:
  3193  014D  0827               	movf	___flmul@b+1,w
  3194  014E  00AE               	movwf	??___flmul
  3195  014F  082E               	movf	??___flmul,w
  3196  0150  00F2               	movwf	__Umul8_16@multiplicand
  3197  0151  082A               	movf	___flmul@a,w
  3198  0152  120A  158A  2637  120A  118A  	fcall	__Umul8_16
  3199  0157  0873               	movf	?__Umul8_16+1,w
  3200  0158  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0159  1303               	bcf	3,6	;RP1=0, select bank0
  3202  015A  00BF               	movwf	___flmul@temp+1
  3203  015B  0872               	movf	?__Umul8_16,w
  3204  015C  00BE               	movwf	___flmul@temp
  3205  015D                     l2174:
  3206  015D  083E               	movf	___flmul@temp,w
  3207  015E  00AE               	movwf	??___flmul
  3208  015F  083F               	movf	___flmul@temp+1,w
  3209  0160  00AF               	movwf	??___flmul+1
  3210  0161  01B0               	clrf	??___flmul+2
  3211  0162  01B1               	clrf	??___flmul+3
  3212  0163  082E               	movf	??___flmul,w
  3213  0164  07B5               	addwf	___flmul@grs,f
  3214  0165  082F               	movf	??___flmul+1,w
  3215  0166  1103               	clrz
  3216  0167  1803               	skipnc
  3217  0168  3E01               	addlw	1
  3218  0169  1903               	skipnz
  3219  016A  296C               	goto	u2451
  3220  016B  07B6               	addwf	___flmul@grs+1,f
  3221  016C                     u2451:
  3222  016C  0830               	movf	??___flmul+2,w
  3223  016D  1103               	clrz
  3224  016E  1803               	skipnc
  3225  016F  3E01               	addlw	1
  3226  0170  1903               	skipnz
  3227  0171  2973               	goto	u2452
  3228  0172  07B7               	addwf	___flmul@grs+2,f
  3229  0173                     u2452:
  3230  0173  0831               	movf	??___flmul+3,w
  3231  0174  1103               	clrz
  3232  0175  1803               	skipnc
  3233  0176  3E01               	addlw	1
  3234  0177  1903               	skipnz
  3235  0178  297A               	goto	u2453
  3236  0179  07B8               	addwf	___flmul@grs+3,f
  3237  017A                     u2453:
  3238  017A                     l2176:
  3239  017A  0826               	movf	___flmul@b,w
  3240  017B  00AE               	movwf	??___flmul
  3241  017C  082E               	movf	??___flmul,w
  3242  017D  00F2               	movwf	__Umul8_16@multiplicand
  3243  017E  082B               	movf	___flmul@a+1,w
  3244  017F  120A  158A  2637  120A  118A  	fcall	__Umul8_16
  3245  0184  0873               	movf	?__Umul8_16+1,w
  3246  0185  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0186  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0187  00BF               	movwf	___flmul@temp+1
  3249  0188  0872               	movf	?__Umul8_16,w
  3250  0189  00BE               	movwf	___flmul@temp
  3251  018A                     l2178:
  3252  018A  083E               	movf	___flmul@temp,w
  3253  018B  00AE               	movwf	??___flmul
  3254  018C  083F               	movf	___flmul@temp+1,w
  3255  018D  00AF               	movwf	??___flmul+1
  3256  018E  01B0               	clrf	??___flmul+2
  3257  018F  01B1               	clrf	??___flmul+3
  3258  0190  082E               	movf	??___flmul,w
  3259  0191  07B5               	addwf	___flmul@grs,f
  3260  0192  082F               	movf	??___flmul+1,w
  3261  0193  1103               	clrz
  3262  0194  1803               	skipnc
  3263  0195  3E01               	addlw	1
  3264  0196  1903               	skipnz
  3265  0197  2999               	goto	u2461
  3266  0198  07B6               	addwf	___flmul@grs+1,f
  3267  0199                     u2461:
  3268  0199  0830               	movf	??___flmul+2,w
  3269  019A  1103               	clrz
  3270  019B  1803               	skipnc
  3271  019C  3E01               	addlw	1
  3272  019D  1903               	skipnz
  3273  019E  29A0               	goto	u2462
  3274  019F  07B7               	addwf	___flmul@grs+2,f
  3275  01A0                     u2462:
  3276  01A0  0831               	movf	??___flmul+3,w
  3277  01A1  1103               	clrz
  3278  01A2  1803               	skipnc
  3279  01A3  3E01               	addlw	1
  3280  01A4  1903               	skipnz
  3281  01A5  29A7               	goto	u2463
  3282  01A6  07B8               	addwf	___flmul@grs+3,f
  3283  01A7                     u2463:
  3284  01A7                     l2180:
  3285  01A7  3008               	movlw	8
  3286  01A8  00AE               	movwf	??___flmul
  3287  01A9                     u2475:
  3288  01A9  1003               	clrc
  3289  01AA  0DB5               	rlf	___flmul@grs,f
  3290  01AB  0DB6               	rlf	___flmul@grs+1,f
  3291  01AC  0DB7               	rlf	___flmul@grs+2,f
  3292  01AD  0DB8               	rlf	___flmul@grs+3,f
  3293  01AE  0BAE               	decfsz	??___flmul,f
  3294  01AF  29A9               	goto	u2475
  3295  01B0  0826               	movf	___flmul@b,w
  3296  01B1  00AE               	movwf	??___flmul
  3297  01B2  082E               	movf	??___flmul,w
  3298  01B3  00F2               	movwf	__Umul8_16@multiplicand
  3299  01B4  082A               	movf	___flmul@a,w
  3300  01B5  120A  158A  2637  120A  118A  	fcall	__Umul8_16
  3301  01BA  0873               	movf	?__Umul8_16+1,w
  3302  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  3303  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  3304  01BD  00BF               	movwf	___flmul@temp+1
  3305  01BE  0872               	movf	?__Umul8_16,w
  3306  01BF  00BE               	movwf	___flmul@temp
  3307  01C0                     l2182:
  3308  01C0  083E               	movf	___flmul@temp,w
  3309  01C1  00AE               	movwf	??___flmul
  3310  01C2  083F               	movf	___flmul@temp+1,w
  3311  01C3  00AF               	movwf	??___flmul+1
  3312  01C4  01B0               	clrf	??___flmul+2
  3313  01C5  01B1               	clrf	??___flmul+3
  3314  01C6  082E               	movf	??___flmul,w
  3315  01C7  07B5               	addwf	___flmul@grs,f
  3316  01C8  082F               	movf	??___flmul+1,w
  3317  01C9  1103               	clrz
  3318  01CA  1803               	skipnc
  3319  01CB  3E01               	addlw	1
  3320  01CC  1903               	skipnz
  3321  01CD  29CF               	goto	u2481
  3322  01CE  07B6               	addwf	___flmul@grs+1,f
  3323  01CF                     u2481:
  3324  01CF  0830               	movf	??___flmul+2,w
  3325  01D0  1103               	clrz
  3326  01D1  1803               	skipnc
  3327  01D2  3E01               	addlw	1
  3328  01D3  1903               	skipnz
  3329  01D4  29D6               	goto	u2482
  3330  01D5  07B7               	addwf	___flmul@grs+2,f
  3331  01D6                     u2482:
  3332  01D6  0831               	movf	??___flmul+3,w
  3333  01D7  1103               	clrz
  3334  01D8  1803               	skipnc
  3335  01D9  3E01               	addlw	1
  3336  01DA  1903               	skipnz
  3337  01DB  29DD               	goto	u2483
  3338  01DC  07B8               	addwf	___flmul@grs+3,f
  3339  01DD                     u2483:
  3340  01DD                     l2184:
  3341  01DD  0827               	movf	___flmul@b+1,w
  3342  01DE  00AE               	movwf	??___flmul
  3343  01DF  082E               	movf	??___flmul,w
  3344  01E0  00F2               	movwf	__Umul8_16@multiplicand
  3345  01E1  082C               	movf	___flmul@a+2,w
  3346  01E2  120A  158A  2637  120A  118A  	fcall	__Umul8_16
  3347  01E7  0873               	movf	?__Umul8_16+1,w
  3348  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  3349  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  3350  01EA  00BF               	movwf	___flmul@temp+1
  3351  01EB  0872               	movf	?__Umul8_16,w
  3352  01EC  00BE               	movwf	___flmul@temp
  3353  01ED  083E               	movf	___flmul@temp,w
  3354  01EE  00AE               	movwf	??___flmul
  3355  01EF  083F               	movf	___flmul@temp+1,w
  3356  01F0  00AF               	movwf	??___flmul+1
  3357  01F1  01B0               	clrf	??___flmul+2
  3358  01F2  01B1               	clrf	??___flmul+3
  3359  01F3  082E               	movf	??___flmul,w
  3360  01F4  07BA               	addwf	___flmul@prod,f
  3361  01F5  082F               	movf	??___flmul+1,w
  3362  01F6  1103               	clrz
  3363  01F7  1803               	skipnc
  3364  01F8  3E01               	addlw	1
  3365  01F9  1903               	skipnz
  3366  01FA  29FC               	goto	u2491
  3367  01FB  07BB               	addwf	___flmul@prod+1,f
  3368  01FC                     u2491:
  3369  01FC  0830               	movf	??___flmul+2,w
  3370  01FD  1103               	clrz
  3371  01FE  1803               	skipnc
  3372  01FF  3E01               	addlw	1
  3373  0200  1903               	skipnz
  3374  0201  2A03               	goto	u2492
  3375  0202  07BC               	addwf	___flmul@prod+2,f
  3376  0203                     u2492:
  3377  0203  0831               	movf	??___flmul+3,w
  3378  0204  1103               	clrz
  3379  0205  1803               	skipnc
  3380  0206  3E01               	addlw	1
  3381  0207  1903               	skipnz
  3382  0208  2A0A               	goto	u2493
  3383  0209  07BD               	addwf	___flmul@prod+3,f
  3384  020A                     u2493:
  3385  020A                     l2186:
  3386  020A  0828               	movf	___flmul@b+2,w
  3387  020B  00AE               	movwf	??___flmul
  3388  020C  082E               	movf	??___flmul,w
  3389  020D  00F2               	movwf	__Umul8_16@multiplicand
  3390  020E  082B               	movf	___flmul@a+1,w
  3391  020F  120A  158A  2637  120A  118A  	fcall	__Umul8_16
  3392  0214  0873               	movf	?__Umul8_16+1,w
  3393  0215  1283               	bcf	3,5	;RP0=0, select bank0
  3394  0216  1303               	bcf	3,6	;RP1=0, select bank0
  3395  0217  00BF               	movwf	___flmul@temp+1
  3396  0218  0872               	movf	?__Umul8_16,w
  3397  0219  00BE               	movwf	___flmul@temp
  3398  021A                     l2188:
  3399  021A  083E               	movf	___flmul@temp,w
  3400  021B  00AE               	movwf	??___flmul
  3401  021C  083F               	movf	___flmul@temp+1,w
  3402  021D  00AF               	movwf	??___flmul+1
  3403  021E  01B0               	clrf	??___flmul+2
  3404  021F  01B1               	clrf	??___flmul+3
  3405  0220  082E               	movf	??___flmul,w
  3406  0221  07BA               	addwf	___flmul@prod,f
  3407  0222  082F               	movf	??___flmul+1,w
  3408  0223  1103               	clrz
  3409  0224  1803               	skipnc
  3410  0225  3E01               	addlw	1
  3411  0226  1903               	skipnz
  3412  0227  2A29               	goto	u2501
  3413  0228  07BB               	addwf	___flmul@prod+1,f
  3414  0229                     u2501:
  3415  0229  0830               	movf	??___flmul+2,w
  3416  022A  1103               	clrz
  3417  022B  1803               	skipnc
  3418  022C  3E01               	addlw	1
  3419  022D  1903               	skipnz
  3420  022E  2A30               	goto	u2502
  3421  022F  07BC               	addwf	___flmul@prod+2,f
  3422  0230                     u2502:
  3423  0230  0831               	movf	??___flmul+3,w
  3424  0231  1103               	clrz
  3425  0232  1803               	skipnc
  3426  0233  3E01               	addlw	1
  3427  0234  1903               	skipnz
  3428  0235  2A37               	goto	u2503
  3429  0236  07BD               	addwf	___flmul@prod+3,f
  3430  0237                     u2503:
  3431  0237  0828               	movf	___flmul@b+2,w
  3432  0238  00AE               	movwf	??___flmul
  3433  0239  082E               	movf	??___flmul,w
  3434  023A  00F2               	movwf	__Umul8_16@multiplicand
  3435  023B  082C               	movf	___flmul@a+2,w
  3436  023C  120A  158A  2637  120A  118A  	fcall	__Umul8_16
  3437  0241  0873               	movf	?__Umul8_16+1,w
  3438  0242  1283               	bcf	3,5	;RP0=0, select bank0
  3439  0243  1303               	bcf	3,6	;RP1=0, select bank0
  3440  0244  00BF               	movwf	___flmul@temp+1
  3441  0245  0872               	movf	?__Umul8_16,w
  3442  0246  00BE               	movwf	___flmul@temp
  3443  0247                     l2190:
  3444  0247  083E               	movf	___flmul@temp,w
  3445  0248  00AE               	movwf	??___flmul
  3446  0249  083F               	movf	___flmul@temp+1,w
  3447  024A  00AF               	movwf	??___flmul+1
  3448  024B  01B0               	clrf	??___flmul+2
  3449  024C  01B1               	clrf	??___flmul+3
  3450  024D  3008               	movlw	8
  3451  024E                     u2515:
  3452  024E  1003               	clrc
  3453  024F  0DAE               	rlf	??___flmul,f
  3454  0250  0DAF               	rlf	??___flmul+1,f
  3455  0251  0DB0               	rlf	??___flmul+2,f
  3456  0252  0DB1               	rlf	??___flmul+3,f
  3457  0253                     u2510:
  3458  0253  3EFF               	addlw	-1
  3459  0254  1D03               	skipz
  3460  0255  2A4E               	goto	u2515
  3461  0256  082E               	movf	??___flmul,w
  3462  0257  07BA               	addwf	___flmul@prod,f
  3463  0258  082F               	movf	??___flmul+1,w
  3464  0259  1103               	clrz
  3465  025A  1803               	skipnc
  3466  025B  3E01               	addlw	1
  3467  025C  1903               	skipnz
  3468  025D  2A5F               	goto	u2521
  3469  025E  07BB               	addwf	___flmul@prod+1,f
  3470  025F                     u2521:
  3471  025F  0830               	movf	??___flmul+2,w
  3472  0260  1103               	clrz
  3473  0261  1803               	skipnc
  3474  0262  3E01               	addlw	1
  3475  0263  1903               	skipnz
  3476  0264  2A66               	goto	u2522
  3477  0265  07BC               	addwf	___flmul@prod+2,f
  3478  0266                     u2522:
  3479  0266  0831               	movf	??___flmul+3,w
  3480  0267  1103               	clrz
  3481  0268  1803               	skipnc
  3482  0269  3E01               	addlw	1
  3483  026A  1903               	skipnz
  3484  026B  2A6D               	goto	u2523
  3485  026C  07BD               	addwf	___flmul@prod+3,f
  3486  026D                     u2523:
  3487  026D                     l2192:
  3488  026D  0835               	movf	___flmul@grs,w
  3489  026E  00AE               	movwf	??___flmul
  3490  026F  0836               	movf	___flmul@grs+1,w
  3491  0270  00AF               	movwf	??___flmul+1
  3492  0271  0837               	movf	___flmul@grs+2,w
  3493  0272  00B0               	movwf	??___flmul+2
  3494  0273  0838               	movf	___flmul@grs+3,w
  3495  0274  00B1               	movwf	??___flmul+3
  3496  0275  3018               	movlw	24
  3497  0276                     u2535:
  3498  0276  1003               	clrc
  3499  0277  0CB1               	rrf	??___flmul+3,f
  3500  0278  0CB0               	rrf	??___flmul+2,f
  3501  0279  0CAF               	rrf	??___flmul+1,f
  3502  027A  0CAE               	rrf	??___flmul,f
  3503  027B                     u2530:
  3504  027B  3EFF               	addlw	-1
  3505  027C  1D03               	skipz
  3506  027D  2A76               	goto	u2535
  3507  027E  082E               	movf	??___flmul,w
  3508  027F  07BA               	addwf	___flmul@prod,f
  3509  0280  082F               	movf	??___flmul+1,w
  3510  0281  1103               	clrz
  3511  0282  1803               	skipnc
  3512  0283  3E01               	addlw	1
  3513  0284  1903               	skipnz
  3514  0285  2A87               	goto	u2541
  3515  0286  07BB               	addwf	___flmul@prod+1,f
  3516  0287                     u2541:
  3517  0287  0830               	movf	??___flmul+2,w
  3518  0288  1103               	clrz
  3519  0289  1803               	skipnc
  3520  028A  3E01               	addlw	1
  3521  028B  1903               	skipnz
  3522  028C  2A8E               	goto	u2542
  3523  028D  07BC               	addwf	___flmul@prod+2,f
  3524  028E                     u2542:
  3525  028E  0831               	movf	??___flmul+3,w
  3526  028F  1103               	clrz
  3527  0290  1803               	skipnc
  3528  0291  3E01               	addlw	1
  3529  0292  1903               	skipnz
  3530  0293  2A95               	goto	u2543
  3531  0294  07BD               	addwf	___flmul@prod+3,f
  3532  0295                     u2543:
  3533  0295                     l2194:
  3534  0295  3008               	movlw	8
  3535  0296  00AE               	movwf	??___flmul
  3536  0297                     u2555:
  3537  0297  1003               	clrc
  3538  0298  0DB5               	rlf	___flmul@grs,f
  3539  0299  0DB6               	rlf	___flmul@grs+1,f
  3540  029A  0DB7               	rlf	___flmul@grs+2,f
  3541  029B  0DB8               	rlf	___flmul@grs+3,f
  3542  029C  0BAE               	decfsz	??___flmul,f
  3543  029D  2A97               	goto	u2555
  3544  029E                     l2196:
  3545  029E  0839               	movf	___flmul@bexp,w
  3546  029F  0734               	addwf	___flmul@aexp,w
  3547  02A0  00AE               	movwf	??___flmul
  3548  02A1  01AF               	clrf	??___flmul+1
  3549  02A2  0DAF               	rlf	??___flmul+1,f
  3550  02A3  082E               	movf	??___flmul,w
  3551  02A4  3E82               	addlw	130
  3552  02A5  00BE               	movwf	___flmul@temp
  3553  02A6  082F               	movf	??___flmul+1,w
  3554  02A7  1803               	skipnc
  3555  02A8  3E01               	addlw	1
  3556  02A9  3EFF               	addlw	255
  3557  02AA  00BF               	movwf	___flmul@temp+1
  3558  02AB  2AC9               	goto	l2208
  3559  02AC                     l2198:
  3560  02AC  3001               	movlw	1
  3561  02AD  00AE               	movwf	??___flmul
  3562  02AE                     u2565:
  3563  02AE  1003               	clrc
  3564  02AF  0DBA               	rlf	___flmul@prod,f
  3565  02B0  0DBB               	rlf	___flmul@prod+1,f
  3566  02B1  0DBC               	rlf	___flmul@prod+2,f
  3567  02B2  0DBD               	rlf	___flmul@prod+3,f
  3568  02B3  0BAE               	decfsz	??___flmul,f
  3569  02B4  2AAE               	goto	u2565
  3570  02B5                     l2200:
  3571  02B5  1FB8               	btfss	___flmul@grs+3,7
  3572  02B6  2AB8               	goto	u2571
  3573  02B7  2AB9               	goto	u2570
  3574  02B8                     u2571:
  3575  02B8  2ABA               	goto	l2204
  3576  02B9                     u2570:
  3577  02B9                     l2202:
  3578  02B9  143A               	bsf	___flmul@prod,0
  3579  02BA                     l2204:
  3580  02BA  3001               	movlw	1
  3581  02BB  00AE               	movwf	??___flmul
  3582  02BC                     u2585:
  3583  02BC  1003               	clrc
  3584  02BD  0DB5               	rlf	___flmul@grs,f
  3585  02BE  0DB6               	rlf	___flmul@grs+1,f
  3586  02BF  0DB7               	rlf	___flmul@grs+2,f
  3587  02C0  0DB8               	rlf	___flmul@grs+3,f
  3588  02C1  0BAE               	decfsz	??___flmul,f
  3589  02C2  2ABC               	goto	u2585
  3590  02C3                     l2206:
  3591  02C3  30FF               	movlw	255
  3592  02C4  07BE               	addwf	___flmul@temp,f
  3593  02C5  1803               	skipnc
  3594  02C6  0ABF               	incf	___flmul@temp+1,f
  3595  02C7  30FF               	movlw	255
  3596  02C8  07BF               	addwf	___flmul@temp+1,f
  3597  02C9                     l2208:
  3598  02C9  1FBC               	btfss	___flmul@prod+2,7
  3599  02CA  2ACC               	goto	u2591
  3600  02CB  2ACD               	goto	u2590
  3601  02CC                     u2591:
  3602  02CC  2AAC               	goto	l2198
  3603  02CD                     u2590:
  3604  02CD                     l2210:
  3605  02CD  01B4               	clrf	___flmul@aexp
  3606  02CE                     l2212:
  3607  02CE  1FB8               	btfss	___flmul@grs+3,7
  3608  02CF  2AD1               	goto	u2601
  3609  02D0  2AD2               	goto	u2600
  3610  02D1                     u2601:
  3611  02D1  2AEE               	goto	l2220
  3612  02D2                     u2600:
  3613  02D2                     l2214:
  3614  02D2  30FF               	movlw	255
  3615  02D3  0535               	andwf	___flmul@grs,w
  3616  02D4  00AE               	movwf	??___flmul
  3617  02D5  30FF               	movlw	255
  3618  02D6  0536               	andwf	___flmul@grs+1,w
  3619  02D7  00AF               	movwf	??___flmul+1
  3620  02D8  30FF               	movlw	255
  3621  02D9  0537               	andwf	___flmul@grs+2,w
  3622  02DA  00B0               	movwf	??___flmul+2
  3623  02DB  307F               	movlw	127
  3624  02DC  0538               	andwf	___flmul@grs+3,w
  3625  02DD  00B1               	movwf	??___flmul+3
  3626  02DE  0831               	movf	??___flmul+3,w
  3627  02DF  0430               	iorwf	??___flmul+2,w
  3628  02E0  042F               	iorwf	??___flmul+1,w
  3629  02E1  042E               	iorwf	??___flmul,w
  3630  02E2  1903               	skipnz
  3631  02E3  2AE5               	goto	u2611
  3632  02E4  2AE6               	goto	u2610
  3633  02E5                     u2611:
  3634  02E5  2AE9               	goto	l681
  3635  02E6                     u2610:
  3636  02E6                     l2216:
  3637  02E6  01B4               	clrf	___flmul@aexp
  3638  02E7  0AB4               	incf	___flmul@aexp,f
  3639  02E8  2AEE               	goto	l2220
  3640  02E9                     l681:
  3641  02E9  1C3A               	btfss	___flmul@prod,0
  3642  02EA  2AEC               	goto	u2621
  3643  02EB  2AED               	goto	u2620
  3644  02EC                     u2621:
  3645  02EC  2AEE               	goto	l2220
  3646  02ED                     u2620:
  3647  02ED  2AE6               	goto	l2216
  3648  02EE                     l2220:
  3649  02EE  0834               	movf	___flmul@aexp,w
  3650  02EF  1903               	btfsc	3,2
  3651  02F0  2AF2               	goto	u2631
  3652  02F1  2AF3               	goto	u2630
  3653  02F2                     u2631:
  3654  02F2  2B24               	goto	l2230
  3655  02F3                     u2630:
  3656  02F3                     l2222:
  3657  02F3  3001               	movlw	1
  3658  02F4  07BA               	addwf	___flmul@prod,f
  3659  02F5  3000               	movlw	0
  3660  02F6  1803               	skipnc
  3661  02F7  3001               	movlw	1
  3662  02F8  07BB               	addwf	___flmul@prod+1,f
  3663  02F9  3000               	movlw	0
  3664  02FA  1803               	skipnc
  3665  02FB  3001               	movlw	1
  3666  02FC  07BC               	addwf	___flmul@prod+2,f
  3667  02FD  3000               	movlw	0
  3668  02FE  1803               	skipnc
  3669  02FF  3001               	movlw	1
  3670  0300  07BD               	addwf	___flmul@prod+3,f
  3671  0301                     l2224:
  3672  0301  1C3D               	btfss	___flmul@prod+3,0
  3673  0302  2B04               	goto	u2641
  3674  0303  2B05               	goto	u2640
  3675  0304                     u2641:
  3676  0304  2B24               	goto	l2230
  3677  0305                     u2640:
  3678  0305                     l2226:
  3679  0305  083A               	movf	___flmul@prod,w
  3680  0306  00AE               	movwf	??___flmul
  3681  0307  083B               	movf	___flmul@prod+1,w
  3682  0308  00AF               	movwf	??___flmul+1
  3683  0309  083C               	movf	___flmul@prod+2,w
  3684  030A  00B0               	movwf	??___flmul+2
  3685  030B  083D               	movf	___flmul@prod+3,w
  3686  030C  00B1               	movwf	??___flmul+3
  3687  030D  3001               	movlw	1
  3688  030E  00B2               	movwf	??___flmul+4
  3689  030F                     u2655:
  3690  030F  0D31               	rlf	??___flmul+3,w
  3691  0310  0CB1               	rrf	??___flmul+3,f
  3692  0311  0CB0               	rrf	??___flmul+2,f
  3693  0312  0CAF               	rrf	??___flmul+1,f
  3694  0313  0CAE               	rrf	??___flmul,f
  3695  0314                     u2650:
  3696  0314  0BB2               	decfsz	??___flmul+4,f
  3697  0315  2B0F               	goto	u2655
  3698  0316  0831               	movf	??___flmul+3,w
  3699  0317  00BD               	movwf	___flmul@prod+3
  3700  0318  0830               	movf	??___flmul+2,w
  3701  0319  00BC               	movwf	___flmul@prod+2
  3702  031A  082F               	movf	??___flmul+1,w
  3703  031B  00BB               	movwf	___flmul@prod+1
  3704  031C  082E               	movf	??___flmul,w
  3705  031D  00BA               	movwf	___flmul@prod
  3706  031E                     l2228:
  3707  031E  3001               	movlw	1
  3708  031F  07BE               	addwf	___flmul@temp,f
  3709  0320  1803               	skipnc
  3710  0321  0ABF               	incf	___flmul@temp+1,f
  3711  0322  3000               	movlw	0
  3712  0323  07BF               	addwf	___flmul@temp+1,f
  3713  0324                     l2230:
  3714  0324  083F               	movf	___flmul@temp+1,w
  3715  0325  3A80               	xorlw	128
  3716  0326  00FF               	movwf	btemp+1
  3717  0327  3080               	movlw	128
  3718  0328  027F               	subwf	btemp+1,w
  3719  0329  1D03               	skipz
  3720  032A  2B2D               	goto	u2665
  3721  032B  30FF               	movlw	255
  3722  032C  023E               	subwf	___flmul@temp,w
  3723  032D                     u2665:
  3724  032D  1C03               	skipc
  3725  032E  2B30               	goto	u2661
  3726  032F  2B31               	goto	u2660
  3727  0330                     u2661:
  3728  0330  2B3C               	goto	l2234
  3729  0331                     u2660:
  3730  0331                     l2232:
  3731  0331  307F               	movlw	127
  3732  0332  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0333  1303               	bcf	3,6	;RP1=0, select bank0
  3734  0334  00BD               	movwf	___flmul@prod+3
  3735  0335  3080               	movlw	128
  3736  0336  00BC               	movwf	___flmul@prod+2
  3737  0337  3000               	movlw	0
  3738  0338  00BB               	movwf	___flmul@prod+1
  3739  0339  3000               	movlw	0
  3740  033A  00BA               	movwf	___flmul@prod
  3741  033B  2B71               	goto	l687
  3742  033C                     l2234:
  3743  033C  1283               	bcf	3,5	;RP0=0, select bank0
  3744  033D  1303               	bcf	3,6	;RP1=0, select bank0
  3745  033E  083F               	movf	___flmul@temp+1,w
  3746  033F  3A80               	xorlw	128
  3747  0340  00FF               	movwf	btemp+1
  3748  0341  3080               	movlw	128
  3749  0342  027F               	subwf	btemp+1,w
  3750  0343  1D03               	skipz
  3751  0344  2B47               	goto	u2675
  3752  0345  3001               	movlw	1
  3753  0346  023E               	subwf	___flmul@temp,w
  3754  0347                     u2675:
  3755  0347  1803               	skipnc
  3756  0348  2B4A               	goto	u2671
  3757  0349  2B4B               	goto	u2670
  3758  034A                     u2671:
  3759  034A  2B57               	goto	l2240
  3760  034B                     u2670:
  3761  034B                     l2236:
  3762  034B  3000               	movlw	0
  3763  034C  1283               	bcf	3,5	;RP0=0, select bank0
  3764  034D  1303               	bcf	3,6	;RP1=0, select bank0
  3765  034E  00BD               	movwf	___flmul@prod+3
  3766  034F  3000               	movlw	0
  3767  0350  00BC               	movwf	___flmul@prod+2
  3768  0351  3000               	movlw	0
  3769  0352  00BB               	movwf	___flmul@prod+1
  3770  0353  3000               	movlw	0
  3771  0354  00BA               	movwf	___flmul@prod
  3772  0355                     l2238:
  3773  0355  01B3               	clrf	___flmul@sign
  3774  0356  2B71               	goto	l687
  3775  0357                     l2240:
  3776  0357  1283               	bcf	3,5	;RP0=0, select bank0
  3777  0358  1303               	bcf	3,6	;RP1=0, select bank0
  3778  0359  083E               	movf	___flmul@temp,w
  3779  035A  00AE               	movwf	??___flmul
  3780  035B  082E               	movf	??___flmul,w
  3781  035C  00B9               	movwf	___flmul@bexp
  3782  035D  30FF               	movlw	255
  3783  035E  05BA               	andwf	___flmul@prod,f
  3784  035F  30FF               	movlw	255
  3785  0360  05BB               	andwf	___flmul@prod+1,f
  3786  0361  307F               	movlw	127
  3787  0362  05BC               	andwf	___flmul@prod+2,f
  3788  0363  3000               	movlw	0
  3789  0364  05BD               	andwf	___flmul@prod+3,f
  3790  0365                     l2242:
  3791  0365  1C39               	btfss	___flmul@bexp,0
  3792  0366  2B68               	goto	u2681
  3793  0367  2B69               	goto	u2680
  3794  0368                     u2681:
  3795  0368  2B6A               	goto	l2246
  3796  0369                     u2680:
  3797  0369                     l2244:
  3798  0369  17BC               	bsf	___flmul@prod+2,7
  3799  036A                     l2246:
  3800  036A  0839               	movf	___flmul@bexp,w
  3801  036B  00AE               	movwf	??___flmul
  3802  036C  1003               	clrc
  3803  036D  0C2E               	rrf	??___flmul,w
  3804  036E  00AF               	movwf	??___flmul+1
  3805  036F  082F               	movf	??___flmul+1,w
  3806  0370  00BD               	movwf	___flmul@prod+3
  3807  0371                     l687:
  3808  0371  0833               	movf	___flmul@sign,w
  3809  0372  00AE               	movwf	??___flmul
  3810  0373  082E               	movf	??___flmul,w
  3811  0374  04BD               	iorwf	___flmul@prod+3,f
  3812  0375                     l2248:
  3813  0375  083D               	movf	___flmul@prod+3,w
  3814  0376  00A9               	movwf	?___flmul+3
  3815  0377  083C               	movf	___flmul@prod+2,w
  3816  0378  00A8               	movwf	?___flmul+2
  3817  0379  083B               	movf	___flmul@prod+1,w
  3818  037A  00A7               	movwf	?___flmul+1
  3819  037B  083A               	movf	___flmul@prod,w
  3820  037C  00A6               	movwf	?___flmul
  3821  037D                     l675:
  3822  037D  0008               	return
  3823  037E                     __end_of___flmul:
  3824                           
  3825                           	psect	text10
  3826  0E37                     __ptext10:	
  3827 ;; *************** function __Umul8_16 *****************
  3828 ;; Defined at:
  3829 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  multiplier      1    wreg     unsigned char 
  3832 ;;  multiplicand    1    2[COMMON] unsigned char 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  multiplier      1    4[BANK0 ] unsigned char 
  3835 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  3836 ;;  product         2    0[BANK0 ] unsigned int 
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  2    2[COMMON] unsigned int 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3846 ;;      Params:         2       0       0       0       0
  3847 ;;      Locals:         0       5       0       0       0
  3848 ;;      Temps:          2       0       0       0       0
  3849 ;;      Totals:         4       5       0       0       0
  3850 ;;Total ram usage:        9 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    1
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		___flmul
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           
  3861                           ;psect for function __Umul8_16
  3862  0E37                     __Umul8_16:
  3863                           
  3864                           ;incstack = 0
  3865                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3866                           ;__Umul8_16@multiplier stored from wreg
  3867  0E37  1283               	bcf	3,5	;RP0=0, select bank0
  3868  0E38  1303               	bcf	3,6	;RP1=0, select bank0
  3869  0E39  00A4               	movwf	__Umul8_16@multiplier
  3870  0E3A                     l2016:
  3871  0E3A  01A0               	clrf	__Umul8_16@product
  3872  0E3B  01A1               	clrf	__Umul8_16@product+1
  3873  0E3C                     l2018:
  3874  0E3C  0872               	movf	__Umul8_16@multiplicand,w
  3875  0E3D  00F4               	movwf	??__Umul8_16
  3876  0E3E  01F5               	clrf	??__Umul8_16+1
  3877  0E3F  0874               	movf	??__Umul8_16,w
  3878  0E40  00A2               	movwf	__Umul8_16@word_mpld
  3879  0E41  0875               	movf	??__Umul8_16+1,w
  3880  0E42  00A3               	movwf	__Umul8_16@word_mpld+1
  3881  0E43                     l2020:
  3882  0E43  1C24               	btfss	__Umul8_16@multiplier,0
  3883  0E44  2E46               	goto	u2191
  3884  0E45  2E47               	goto	u2190
  3885  0E46                     u2191:
  3886  0E46  2E4D               	goto	l694
  3887  0E47                     u2190:
  3888  0E47                     l2022:
  3889  0E47  0822               	movf	__Umul8_16@word_mpld,w
  3890  0E48  07A0               	addwf	__Umul8_16@product,f
  3891  0E49  1803               	skipnc
  3892  0E4A  0AA1               	incf	__Umul8_16@product+1,f
  3893  0E4B  0823               	movf	__Umul8_16@word_mpld+1,w
  3894  0E4C  07A1               	addwf	__Umul8_16@product+1,f
  3895  0E4D                     l694:
  3896  0E4D  3001               	movlw	1
  3897  0E4E                     u2205:
  3898  0E4E  1003               	clrc
  3899  0E4F  0DA2               	rlf	__Umul8_16@word_mpld,f
  3900  0E50  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  3901  0E51  3EFF               	addlw	-1
  3902  0E52  1D03               	skipz
  3903  0E53  2E4E               	goto	u2205
  3904  0E54  1003               	clrc
  3905  0E55  0CA4               	rrf	__Umul8_16@multiplier,f
  3906  0E56                     l2024:
  3907  0E56  0824               	movf	__Umul8_16@multiplier,w
  3908  0E57  1D03               	btfss	3,2
  3909  0E58  2E5A               	goto	u2211
  3910  0E59  2E5B               	goto	u2210
  3911  0E5A                     u2211:
  3912  0E5A  2E43               	goto	l2020
  3913  0E5B                     u2210:
  3914  0E5B                     l2026:
  3915  0E5B  0821               	movf	__Umul8_16@product+1,w
  3916  0E5C  00F3               	movwf	?__Umul8_16+1
  3917  0E5D  0820               	movf	__Umul8_16@product,w
  3918  0E5E  00F2               	movwf	?__Umul8_16
  3919  0E5F                     l696:
  3920  0E5F  0008               	return
  3921  0E60                     __end_of__Umul8_16:
  3922                           
  3923                           	psect	text11
  3924  0F73                     __ptext11:	
  3925 ;; *************** function _Lcd_Write_String *****************
  3926 ;; Defined at:
  3927 ;;		line 73 in file "LCD.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  a               2    7[COMMON] PTR unsigned char 
  3930 ;;		 -> main@buffer(20), STR_1(19), 
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  i               2    3[BANK0 ] int 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3942 ;;      Params:         2       0       0       0       0
  3943 ;;      Locals:         0       2       0       0       0
  3944 ;;      Temps:          0       3       0       0       0
  3945 ;;      Totals:         2       5       0       0       0
  3946 ;;Total ram usage:        7 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:    3
  3949 ;; This function calls:
  3950 ;;		_Lcd_Write_Char
  3951 ;; This function is called by:
  3952 ;;		_main
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           
  3957                           ;psect for function _Lcd_Write_String
  3958  0F73                     _Lcd_Write_String:
  3959  0F73                     l2042:	
  3960                           ;incstack = 0
  3961                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3962                           
  3963                           
  3964                           ;LCD.c: 74:     int i;;LCD.c: 75:     for (i = 0; a[i] != '\0'; i++)
  3965  0F73  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0F74  1303               	bcf	3,6	;RP1=0, select bank0
  3967  0F75  01A3               	clrf	Lcd_Write_String@i
  3968  0F76  01A4               	clrf	Lcd_Write_String@i+1
  3969  0F77  2F9C               	goto	l2048
  3970  0F78                     l2044:
  3971                           
  3972                           ;LCD.c: 76:         Lcd_Write_Char(a[i]);
  3973  0F78  0823               	movf	Lcd_Write_String@i,w
  3974  0F79  0777               	addwf	Lcd_Write_String@a,w
  3975  0F7A  00A1               	movwf	??_Lcd_Write_String+1
  3976  0F7B  0878               	movf	Lcd_Write_String@a+1,w
  3977  0F7C  00A0               	movwf	??_Lcd_Write_String
  3978  0F7D  1803               	skipnc
  3979  0F7E  0AA0               	incf	??_Lcd_Write_String,f
  3980  0F7F  1FA3               	btfss	Lcd_Write_String@i,7
  3981  0F80  2F82               	goto	u2220
  3982  0F81  03A0               	decf	??_Lcd_Write_String,f
  3983  0F82                     u2220:
  3984  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  3985  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  3986  0F84  0820               	movf	??_Lcd_Write_String,w
  3987  0F85  00A2               	movwf	??_Lcd_Write_String+2
  3988  0F86  0822               	movf	??_Lcd_Write_String+2,w
  3989  0F87  00FF               	movwf	btemp+1
  3990  0F88  0821               	movf	??_Lcd_Write_String+1,w
  3991  0F89  0084               	movwf	4
  3992  0F8A  120A  118A  27C0  120A  158A  	fcall	stringtab
  3993  0F8F  120A  158A  261A  120A  158A  	fcall	_Lcd_Write_Char
  3994  0F94                     l2046:
  3995  0F94  3001               	movlw	1
  3996  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3997  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3998  0F97  07A3               	addwf	Lcd_Write_String@i,f
  3999  0F98  1803               	skipnc
  4000  0F99  0AA4               	incf	Lcd_Write_String@i+1,f
  4001  0F9A  3000               	movlw	0
  4002  0F9B  07A4               	addwf	Lcd_Write_String@i+1,f
  4003  0F9C                     l2048:
  4004  0F9C  0823               	movf	Lcd_Write_String@i,w
  4005  0F9D  0777               	addwf	Lcd_Write_String@a,w
  4006  0F9E  00A1               	movwf	??_Lcd_Write_String+1
  4007  0F9F  0878               	movf	Lcd_Write_String@a+1,w
  4008  0FA0  00A0               	movwf	??_Lcd_Write_String
  4009  0FA1  1803               	skipnc
  4010  0FA2  0AA0               	incf	??_Lcd_Write_String,f
  4011  0FA3  1FA3               	btfss	Lcd_Write_String@i,7
  4012  0FA4  2FA6               	goto	u2230
  4013  0FA5  03A0               	decf	??_Lcd_Write_String,f
  4014  0FA6                     u2230:
  4015  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  4016  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  4017  0FA8  0820               	movf	??_Lcd_Write_String,w
  4018  0FA9  00A2               	movwf	??_Lcd_Write_String+2
  4019  0FAA  0822               	movf	??_Lcd_Write_String+2,w
  4020  0FAB  00FF               	movwf	btemp+1
  4021  0FAC  0821               	movf	??_Lcd_Write_String+1,w
  4022  0FAD  0084               	movwf	4
  4023  0FAE  120A  118A  27C0  120A  158A  	fcall	stringtab
  4024  0FB3  3A00               	xorlw	0
  4025  0FB4  1D03               	skipz
  4026  0FB5  2FB7               	goto	u2241
  4027  0FB6  2FB8               	goto	u2240
  4028  0FB7                     u2241:
  4029  0FB7  2F78               	goto	l2044
  4030  0FB8                     u2240:
  4031  0FB8                     l166:
  4032  0FB8  0008               	return
  4033  0FB9                     __end_of_Lcd_Write_String:
  4034                           
  4035                           	psect	text12
  4036  0E1A                     __ptext12:	
  4037 ;; *************** function _Lcd_Write_Char *****************
  4038 ;; Defined at:
  4039 ;;		line 58 in file "LCD.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  a               1    wreg     unsigned char 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  a               1    4[COMMON] unsigned char 
  4044 ;;  y               1    6[COMMON] unsigned char 
  4045 ;;  temp            1    5[COMMON] unsigned char 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0, pclath, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4055 ;;      Params:         0       0       0       0       0
  4056 ;;      Locals:         3       0       0       0       0
  4057 ;;      Temps:          1       0       0       0       0
  4058 ;;      Totals:         4       0       0       0       0
  4059 ;;Total ram usage:        4 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    2
  4062 ;; This function calls:
  4063 ;;		_Lcd_Port
  4064 ;; This function is called by:
  4065 ;;		_Lcd_Write_String
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           
  4070                           ;psect for function _Lcd_Write_Char
  4071  0E1A                     _Lcd_Write_Char:
  4072                           
  4073                           ;incstack = 0
  4074                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4075                           ;Lcd_Write_Char@a stored from wreg
  4076  0E1A  00F4               	movwf	Lcd_Write_Char@a
  4077  0E1B                     l1434:
  4078                           
  4079                           ;LCD.c: 59:     char temp, y;;LCD.c: 60:     temp = a;
  4080  0E1B  0874               	movf	Lcd_Write_Char@a,w
  4081  0E1C  00F3               	movwf	??_Lcd_Write_Char
  4082  0E1D  0873               	movf	??_Lcd_Write_Char,w
  4083  0E1E  00F5               	movwf	Lcd_Write_Char@temp
  4084                           
  4085                           ;LCD.c: 61:     y = temp;
  4086  0E1F  0875               	movf	Lcd_Write_Char@temp,w
  4087  0E20  00F3               	movwf	??_Lcd_Write_Char
  4088  0E21  0873               	movf	??_Lcd_Write_Char,w
  4089  0E22  00F6               	movwf	Lcd_Write_Char@y
  4090  0E23                     l1436:
  4091                           
  4092                           ;LCD.c: 62:     PORTEbits.RE0 = 1;
  4093  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  4094  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  4095  0E25  1409               	bsf	9,0	;volatile
  4096  0E26                     l1438:
  4097                           
  4098                           ;LCD.c: 63:     Lcd_Port(y);
  4099  0E26  0876               	movf	Lcd_Write_Char@y,w
  4100  0E27  120A  158A  25BD  120A  158A  	fcall	_Lcd_Port
  4101  0E2C                     l1440:
  4102                           
  4103                           ;LCD.c: 64:     PORTEbits.RE2 = 1;
  4104  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  4105  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  4106  0E2E  1509               	bsf	9,2	;volatile
  4107  0E2F                     l1442:
  4108                           
  4109                           ;LCD.c: 65:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  4110  0E2F  300D               	movlw	13
  4111  0E30  00F3               	movwf	??_Lcd_Write_Char
  4112  0E31                     u2737:
  4113  0E31  0BF3               	decfsz	??_Lcd_Write_Char,f
  4114  0E32  2E31               	goto	u2737
  4115  0E33                     l1444:
  4116                           
  4117                           ;LCD.c: 66:     PORTEbits.RE2 = 0;
  4118  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  4119  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  4120  0E35  1109               	bcf	9,2	;volatile
  4121  0E36                     l160:
  4122  0E36  0008               	return
  4123  0E37                     __end_of_Lcd_Write_Char:
  4124                           
  4125                           	psect	text13
  4126  0768                     __ptext13:	
  4127 ;; *************** function _Lcd_Set_Cursor *****************
  4128 ;; Defined at:
  4129 ;;		line 22 in file "LCD.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  a               1    wreg     unsigned char 
  4132 ;;  b               1    6[COMMON] unsigned char 
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;  a               1    0[BANK0 ] unsigned char 
  4135 ;;  temp            1    3[BANK0 ] unsigned char 
  4136 ;;  y               1    2[BANK0 ] unsigned char 
  4137 ;;  z               1    1[BANK0 ] unsigned char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  1    wreg      void 
  4140 ;; Registers used:
  4141 ;;		wreg, status,2, status,0, pclath, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4147 ;;      Params:         1       0       0       0       0
  4148 ;;      Locals:         0       4       0       0       0
  4149 ;;      Temps:          2       0       0       0       0
  4150 ;;      Totals:         3       4       0       0       0
  4151 ;;Total ram usage:        7 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    3
  4154 ;; This function calls:
  4155 ;;		_Lcd_Cmd
  4156 ;; This function is called by:
  4157 ;;		_main
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           
  4162                           ;psect for function _Lcd_Set_Cursor
  4163  0768                     _Lcd_Set_Cursor:
  4164                           
  4165                           ;incstack = 0
  4166                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4167                           ;Lcd_Set_Cursor@a stored from wreg
  4168  0768  1283               	bcf	3,5	;RP0=0, select bank0
  4169  0769  1303               	bcf	3,6	;RP1=0, select bank0
  4170  076A  00A0               	movwf	Lcd_Set_Cursor@a
  4171  076B                     l1532:
  4172                           
  4173                           ;LCD.c: 23:     char temp, z, y;;LCD.c: 24:     if (a == 1) {
  4174  076B  0320               	decf	Lcd_Set_Cursor@a,w
  4175  076C  1D03               	btfss	3,2
  4176  076D  2F6F               	goto	u1291
  4177  076E  2F70               	goto	u1290
  4178  076F                     u1291:
  4179  076F  2F95               	goto	l1542
  4180  0770                     u1290:
  4181  0770                     l1534:
  4182                           
  4183                           ;LCD.c: 25:         temp = 0x80 + b - 1;
  4184  0770  0876               	movf	Lcd_Set_Cursor@b,w
  4185  0771  3E7F               	addlw	127
  4186  0772  00F7               	movwf	??_Lcd_Set_Cursor
  4187  0773  0877               	movf	??_Lcd_Set_Cursor,w
  4188  0774  00A3               	movwf	Lcd_Set_Cursor@temp
  4189                           
  4190                           ;LCD.c: 26:         z = temp >> 4;
  4191  0775  0823               	movf	Lcd_Set_Cursor@temp,w
  4192  0776  00F7               	movwf	??_Lcd_Set_Cursor
  4193  0777  3004               	movlw	4
  4194  0778                     u1305:
  4195  0778  1003               	clrc
  4196  0779  0CF7               	rrf	??_Lcd_Set_Cursor,f
  4197  077A  3EFF               	addlw	-1
  4198  077B  1D03               	skipz
  4199  077C  2F78               	goto	u1305
  4200  077D  0877               	movf	??_Lcd_Set_Cursor,w
  4201  077E  00F8               	movwf	??_Lcd_Set_Cursor+1
  4202  077F  0878               	movf	??_Lcd_Set_Cursor+1,w
  4203  0780  00A1               	movwf	Lcd_Set_Cursor@z
  4204  0781                     l1536:
  4205                           
  4206                           ;LCD.c: 27:         y = temp & 0x0F;
  4207  0781  0823               	movf	Lcd_Set_Cursor@temp,w
  4208  0782  390F               	andlw	15
  4209  0783  00F7               	movwf	??_Lcd_Set_Cursor
  4210  0784  0877               	movf	??_Lcd_Set_Cursor,w
  4211  0785  00A2               	movwf	Lcd_Set_Cursor@y
  4212  0786                     l1538:
  4213                           
  4214                           ;LCD.c: 28:         Lcd_Cmd(z);
  4215  0786  0821               	movf	Lcd_Set_Cursor@z,w
  4216  0787  120A  158A  2600  120A  118A  	fcall	_Lcd_Cmd
  4217  078C                     l1540:
  4218                           
  4219                           ;LCD.c: 30:         Lcd_Cmd(y);
  4220  078C  1283               	bcf	3,5	;RP0=0, select bank0
  4221  078D  1303               	bcf	3,6	;RP1=0, select bank0
  4222  078E  0822               	movf	Lcd_Set_Cursor@y,w
  4223  078F  120A  158A  2600  120A  118A  	fcall	_Lcd_Cmd
  4224                           
  4225                           ;LCD.c: 31:     } else if (a == 2) {
  4226  0794  2FBF               	goto	l154
  4227  0795                     l1542:
  4228  0795  3002               	movlw	2
  4229  0796  0620               	xorwf	Lcd_Set_Cursor@a,w
  4230  0797  1D03               	btfss	3,2
  4231  0798  2F9A               	goto	u1311
  4232  0799  2F9B               	goto	u1310
  4233  079A                     u1311:
  4234  079A  2FBF               	goto	l154
  4235  079B                     u1310:
  4236  079B                     l1544:
  4237                           
  4238                           ;LCD.c: 32:         temp = 0xC0 + b - 1;
  4239  079B  0876               	movf	Lcd_Set_Cursor@b,w
  4240  079C  3EBF               	addlw	191
  4241  079D  00F7               	movwf	??_Lcd_Set_Cursor
  4242  079E  0877               	movf	??_Lcd_Set_Cursor,w
  4243  079F  00A3               	movwf	Lcd_Set_Cursor@temp
  4244                           
  4245                           ;LCD.c: 33:         z = temp >> 4;
  4246  07A0  0823               	movf	Lcd_Set_Cursor@temp,w
  4247  07A1  00F7               	movwf	??_Lcd_Set_Cursor
  4248  07A2  3004               	movlw	4
  4249  07A3                     u1325:
  4250  07A3  1003               	clrc
  4251  07A4  0CF7               	rrf	??_Lcd_Set_Cursor,f
  4252  07A5  3EFF               	addlw	-1
  4253  07A6  1D03               	skipz
  4254  07A7  2FA3               	goto	u1325
  4255  07A8  0877               	movf	??_Lcd_Set_Cursor,w
  4256  07A9  00F8               	movwf	??_Lcd_Set_Cursor+1
  4257  07AA  0878               	movf	??_Lcd_Set_Cursor+1,w
  4258  07AB  00A1               	movwf	Lcd_Set_Cursor@z
  4259  07AC                     l1546:
  4260                           
  4261                           ;LCD.c: 34:         y = temp & 0xF0;
  4262  07AC  0823               	movf	Lcd_Set_Cursor@temp,w
  4263  07AD  39F0               	andlw	240
  4264  07AE  00F7               	movwf	??_Lcd_Set_Cursor
  4265  07AF  0877               	movf	??_Lcd_Set_Cursor,w
  4266  07B0  00A2               	movwf	Lcd_Set_Cursor@y
  4267  07B1                     l1548:
  4268                           
  4269                           ;LCD.c: 35:         Lcd_Cmd(z);
  4270  07B1  0821               	movf	Lcd_Set_Cursor@z,w
  4271  07B2  120A  158A  2600  120A  118A  	fcall	_Lcd_Cmd
  4272  07B7                     l1550:
  4273                           
  4274                           ;LCD.c: 36:         Lcd_Cmd(y);
  4275  07B7  1283               	bcf	3,5	;RP0=0, select bank0
  4276  07B8  1303               	bcf	3,6	;RP1=0, select bank0
  4277  07B9  0822               	movf	Lcd_Set_Cursor@y,w
  4278  07BA  120A  158A  2600  120A  118A  	fcall	_Lcd_Cmd
  4279  07BF                     l154:
  4280  07BF  0008               	return
  4281  07C0                     __end_of_Lcd_Set_Cursor:
  4282                           
  4283                           	psect	text14
  4284  0FB9                     __ptext14:	
  4285 ;; *************** function _Lcd_Init *****************
  4286 ;; Defined at:
  4287 ;;		line 40 in file "LCD.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, status,2, status,0, pclath, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4301 ;;      Params:         0       0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0
  4303 ;;      Temps:          2       0       0       0       0
  4304 ;;      Totals:         2       0       0       0       0
  4305 ;;Total ram usage:        2 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    3
  4308 ;; This function calls:
  4309 ;;		_Lcd_Cmd
  4310 ;;		_Lcd_Port
  4311 ;; This function is called by:
  4312 ;;		_main
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           
  4317                           ;psect for function _Lcd_Init
  4318  0FB9                     _Lcd_Init:
  4319  0FB9                     l1520:	
  4320                           ;incstack = 0
  4321                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4322                           
  4323                           
  4324                           ;LCD.c: 41:     Lcd_Port(0x00);
  4325  0FB9  3000               	movlw	0
  4326  0FBA  120A  158A  25BD  120A  158A  	fcall	_Lcd_Port
  4327  0FBF                     l1522:
  4328                           
  4329                           ;LCD.c: 42:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4330  0FBF  301A               	movlw	26
  4331  0FC0  00F7               	movwf	??_Lcd_Init+1
  4332  0FC1  30F8               	movlw	248
  4333  0FC2  00F6               	movwf	??_Lcd_Init
  4334  0FC3                     u2747:
  4335  0FC3  0BF6               	decfsz	??_Lcd_Init,f
  4336  0FC4  2FC3               	goto	u2747
  4337  0FC5  0BF7               	decfsz	??_Lcd_Init+1,f
  4338  0FC6  2FC3               	goto	u2747
  4339  0FC7  0000               	nop
  4340  0FC8                     l1524:
  4341                           
  4342                           ;LCD.c: 43:     Lcd_Cmd(0x30);
  4343  0FC8  3030               	movlw	48
  4344  0FC9  120A  158A  2600  120A  158A  	fcall	_Lcd_Cmd
  4345                           
  4346                           ;LCD.c: 44:     _delay((unsigned long)((5)*(4000000/4000.0)));
  4347  0FCE  3007               	movlw	7
  4348  0FCF  00F7               	movwf	??_Lcd_Init+1
  4349  0FD0  307D               	movlw	125
  4350  0FD1  00F6               	movwf	??_Lcd_Init
  4351  0FD2                     u2757:
  4352  0FD2  0BF6               	decfsz	??_Lcd_Init,f
  4353  0FD3  2FD2               	goto	u2757
  4354  0FD4  0BF7               	decfsz	??_Lcd_Init+1,f
  4355  0FD5  2FD2               	goto	u2757
  4356  0FD6                     l1526:
  4357                           
  4358                           ;LCD.c: 45:     Lcd_Cmd(0x30);
  4359  0FD6  3030               	movlw	48
  4360  0FD7  120A  158A  2600  120A  158A  	fcall	_Lcd_Cmd
  4361  0FDC                     l1528:
  4362                           
  4363                           ;LCD.c: 46:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  4364  0FDC  3042               	movlw	66
  4365  0FDD  00F6               	movwf	??_Lcd_Init
  4366  0FDE                     u2767:
  4367  0FDE  0BF6               	decfsz	??_Lcd_Init,f
  4368  0FDF  2FDE               	goto	u2767
  4369  0FE0  0000               	nop
  4370                           
  4371                           ;LCD.c: 47:     Lcd_Cmd(0x30);
  4372  0FE1  3030               	movlw	48
  4373  0FE2  120A  158A  2600  120A  158A  	fcall	_Lcd_Cmd
  4374                           
  4375                           ;LCD.c: 49:     Lcd_Cmd(0x3C);
  4376  0FE7  303C               	movlw	60
  4377  0FE8  120A  158A  2600  120A  158A  	fcall	_Lcd_Cmd
  4378                           
  4379                           ;LCD.c: 51:     Lcd_Cmd(0x08);
  4380  0FED  3008               	movlw	8
  4381  0FEE  120A  158A  2600  120A  158A  	fcall	_Lcd_Cmd
  4382                           
  4383                           ;LCD.c: 53:     Lcd_Cmd(0x01);
  4384  0FF3  3001               	movlw	1
  4385  0FF4  120A  158A  2600  120A  158A  	fcall	_Lcd_Cmd
  4386                           
  4387                           ;LCD.c: 55:     Lcd_Cmd(0x06);
  4388  0FF9  3006               	movlw	6
  4389  0FFA  120A  158A  2600  120A  158A  	fcall	_Lcd_Cmd
  4390  0FFF                     l157:
  4391  0FFF  0008               	return
  4392  1000                     __end_of_Lcd_Init:
  4393                           
  4394                           	psect	text15
  4395  0DF3                     __ptext15:	
  4396 ;; *************** function _Lcd_Clear *****************
  4397 ;; Defined at:
  4398 ;;		line 17 in file "LCD.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;		None
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0, pclath, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4412 ;;      Params:         0       0       0       0       0
  4413 ;;      Locals:         0       0       0       0       0
  4414 ;;      Temps:          0       0       0       0       0
  4415 ;;      Totals:         0       0       0       0       0
  4416 ;;Total ram usage:        0 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    3
  4419 ;; This function calls:
  4420 ;;		_Lcd_Cmd
  4421 ;; This function is called by:
  4422 ;;		_main
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           
  4427                           ;psect for function _Lcd_Clear
  4428  0DF3                     _Lcd_Clear:
  4429  0DF3                     l1530:	
  4430                           ;incstack = 0
  4431                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4432                           
  4433                           
  4434                           ;LCD.c: 18:     Lcd_Cmd(0);
  4435  0DF3  3000               	movlw	0
  4436  0DF4  120A  158A  2600  120A  158A  	fcall	_Lcd_Cmd
  4437                           
  4438                           ;LCD.c: 19:     Lcd_Cmd(1);
  4439  0DF9  3001               	movlw	1
  4440  0DFA  120A  158A  2600  120A  158A  	fcall	_Lcd_Cmd
  4441  0DFF                     l148:
  4442  0DFF  0008               	return
  4443  0E00                     __end_of_Lcd_Clear:
  4444                           
  4445                           	psect	text16
  4446  0E00                     __ptext16:	
  4447 ;; *************** function _Lcd_Cmd *****************
  4448 ;; Defined at:
  4449 ;;		line 9 in file "LCD.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  a               1    wreg     unsigned char 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  a               1    5[COMMON] unsigned char 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0, pclath, cstack
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4463 ;;      Params:         0       0       0       0       0
  4464 ;;      Locals:         1       0       0       0       0
  4465 ;;      Temps:          2       0       0       0       0
  4466 ;;      Totals:         3       0       0       0       0
  4467 ;;Total ram usage:        3 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    2
  4470 ;; This function calls:
  4471 ;;		_Lcd_Port
  4472 ;; This function is called by:
  4473 ;;		_Lcd_Clear
  4474 ;;		_Lcd_Set_Cursor
  4475 ;;		_Lcd_Init
  4476 ;;		_Lcd_Shift_Right
  4477 ;;		_Lcd_Shift_Left
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           
  4482                           ;psect for function _Lcd_Cmd
  4483  0E00                     _Lcd_Cmd:
  4484                           
  4485                           ;incstack = 0
  4486                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4487                           ;Lcd_Cmd@a stored from wreg
  4488  0E00  00F5               	movwf	Lcd_Cmd@a
  4489  0E01                     l1424:
  4490                           
  4491                           ;LCD.c: 10:     PORTEbits.RE0 = 0;
  4492  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  4493  0E02  1303               	bcf	3,6	;RP1=0, select bank0
  4494  0E03  1009               	bcf	9,0	;volatile
  4495  0E04                     l1426:
  4496                           
  4497                           ;LCD.c: 11:     Lcd_Port(a);
  4498  0E04  0875               	movf	Lcd_Cmd@a,w
  4499  0E05  120A  158A  25BD  120A  158A  	fcall	_Lcd_Port
  4500  0E0A                     l1428:
  4501                           
  4502                           ;LCD.c: 12:     PORTEbits.RE2 = 1;
  4503  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  4504  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  4505  0E0C  1509               	bsf	9,2	;volatile
  4506  0E0D                     l1430:
  4507                           
  4508                           ;LCD.c: 13:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4509  0E0D  3006               	movlw	6
  4510  0E0E  00F4               	movwf	??_Lcd_Cmd+1
  4511  0E0F  3030               	movlw	48
  4512  0E10  00F3               	movwf	??_Lcd_Cmd
  4513  0E11                     u2777:
  4514  0E11  0BF3               	decfsz	??_Lcd_Cmd,f
  4515  0E12  2E11               	goto	u2777
  4516  0E13  0BF4               	decfsz	??_Lcd_Cmd+1,f
  4517  0E14  2E11               	goto	u2777
  4518  0E15  0000               	nop
  4519  0E16                     l1432:
  4520                           
  4521                           ;LCD.c: 14:     PORTEbits.RE2 = 0;
  4522  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  4523  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  4524  0E18  1109               	bcf	9,2	;volatile
  4525  0E19                     l145:
  4526  0E19  0008               	return
  4527  0E1A                     __end_of_Lcd_Cmd:
  4528                           
  4529                           	psect	text17
  4530  0DBD                     __ptext17:	
  4531 ;; *************** function _Lcd_Port *****************
  4532 ;; Defined at:
  4533 ;;		line 4 in file "LCD.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  a               1    wreg     unsigned char 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  a               1    2[COMMON] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4547 ;;      Params:         0       0       0       0       0
  4548 ;;      Locals:         1       0       0       0       0
  4549 ;;      Temps:          0       0       0       0       0
  4550 ;;      Totals:         1       0       0       0       0
  4551 ;;Total ram usage:        1 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; Hardware stack levels required when called:    1
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_Lcd_Cmd
  4558 ;;		_Lcd_Init
  4559 ;;		_Lcd_Write_Char
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           
  4564                           ;psect for function _Lcd_Port
  4565  0DBD                     _Lcd_Port:
  4566                           
  4567                           ;incstack = 0
  4568                           ; Regs used in _Lcd_Port: [wreg]
  4569                           ;Lcd_Port@a stored from wreg
  4570  0DBD  00F2               	movwf	Lcd_Port@a
  4571  0DBE                     l1382:
  4572                           
  4573                           ;LCD.c: 5:     PORTD = a;
  4574  0DBE  0872               	movf	Lcd_Port@a,w
  4575  0DBF  1283               	bcf	3,5	;RP0=0, select bank0
  4576  0DC0  1303               	bcf	3,6	;RP1=0, select bank0
  4577  0DC1  0088               	movwf	8	;volatile
  4578  0DC2                     l142:
  4579  0DC2  0008               	return
  4580  0DC3                     __end_of_Lcd_Port:
  4581                           
  4582                           	psect	text18
  4583  0DDC                     __ptext18:	
  4584 ;; *************** function _I2C_Master_Write *****************
  4585 ;; Defined at:
  4586 ;;		line 65 in file "I2C.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  d               2    2[COMMON] unsigned int 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;		None
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  1    wreg      void 
  4593 ;; Registers used:
  4594 ;;		wreg, status,2, status,0, pclath, cstack
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4600 ;;      Params:         2       0       0       0       0
  4601 ;;      Locals:         0       0       0       0       0
  4602 ;;      Temps:          0       0       0       0       0
  4603 ;;      Totals:         2       0       0       0       0
  4604 ;;Total ram usage:        2 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; Hardware stack levels required when called:    2
  4607 ;; This function calls:
  4608 ;;		_I2C_Master_Wait
  4609 ;; This function is called by:
  4610 ;;		_main
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           
  4615                           ;psect for function _I2C_Master_Write
  4616  0DDC                     _I2C_Master_Write:
  4617  0DDC                     l1626:	
  4618                           ;incstack = 0
  4619                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4620                           
  4621                           
  4622                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  4623  0DDC  120A  158A  25E6  120A  158A  	fcall	_I2C_Master_Wait
  4624  0DE1                     l1628:
  4625                           
  4626                           ;I2C.c: 68:     SSPBUF = d;
  4627  0DE1  0872               	movf	I2C_Master_Write@d,w
  4628  0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  4629  0DE3  1303               	bcf	3,6	;RP1=0, select bank0
  4630  0DE4  0093               	movwf	19	;volatile
  4631  0DE5                     l125:
  4632  0DE5  0008               	return
  4633  0DE6                     __end_of_I2C_Master_Write:
  4634                           
  4635                           	psect	text19
  4636  0DD3                     __ptext19:	
  4637 ;; *************** function _I2C_Master_Stop *****************
  4638 ;; Defined at:
  4639 ;;		line 55 in file "I2C.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;		None
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;		None
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  1    wreg      void 
  4646 ;; Registers used:
  4647 ;;		wreg, status,2, status,0, pclath, cstack
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4653 ;;      Params:         0       0       0       0       0
  4654 ;;      Locals:         0       0       0       0       0
  4655 ;;      Temps:          0       0       0       0       0
  4656 ;;      Totals:         0       0       0       0       0
  4657 ;;Total ram usage:        0 bytes
  4658 ;; Hardware stack levels used:    1
  4659 ;; Hardware stack levels required when called:    2
  4660 ;; This function calls:
  4661 ;;		_I2C_Master_Wait
  4662 ;; This function is called by:
  4663 ;;		_main
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           
  4668                           ;psect for function _I2C_Master_Stop
  4669  0DD3                     _I2C_Master_Stop:
  4670  0DD3                     l1646:	
  4671                           ;incstack = 0
  4672                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4673                           
  4674                           
  4675                           ;I2C.c: 57:     I2C_Master_Wait();
  4676  0DD3  120A  158A  25E6  120A  158A  	fcall	_I2C_Master_Wait
  4677  0DD8                     l1648:
  4678                           
  4679                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4680  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  4681  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  4682  0DDA  1511               	bsf	17,2	;volatile
  4683  0DDB                     l122:
  4684  0DDB  0008               	return
  4685  0DDC                     __end_of_I2C_Master_Stop:
  4686                           
  4687                           	psect	text20
  4688  0DCA                     __ptext20:	
  4689 ;; *************** function _I2C_Master_Start *****************
  4690 ;; Defined at:
  4691 ;;		line 39 in file "I2C.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;		None
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      void 
  4698 ;; Registers used:
  4699 ;;		wreg, status,2, status,0, pclath, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4705 ;;      Params:         0       0       0       0       0
  4706 ;;      Locals:         0       0       0       0       0
  4707 ;;      Temps:          0       0       0       0       0
  4708 ;;      Totals:         0       0       0       0       0
  4709 ;;Total ram usage:        0 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    2
  4712 ;; This function calls:
  4713 ;;		_I2C_Master_Wait
  4714 ;; This function is called by:
  4715 ;;		_main
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           
  4720                           ;psect for function _I2C_Master_Start
  4721  0DCA                     _I2C_Master_Start:
  4722  0DCA                     l1622:	
  4723                           ;incstack = 0
  4724                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4725                           
  4726                           
  4727                           ;I2C.c: 41:     I2C_Master_Wait();
  4728  0DCA  120A  158A  25E6  120A  158A  	fcall	_I2C_Master_Wait
  4729  0DCF                     l1624:
  4730                           
  4731                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4732  0DCF  1683               	bsf	3,5	;RP0=1, select bank1
  4733  0DD0  1303               	bcf	3,6	;RP1=0, select bank1
  4734  0DD1  1411               	bsf	17,0	;volatile
  4735  0DD2                     l116:
  4736  0DD2  0008               	return
  4737  0DD3                     __end_of_I2C_Master_Start:
  4738                           
  4739                           	psect	text21
  4740  0E8D                     __ptext21:	
  4741 ;; *************** function _I2C_Master_Read *****************
  4742 ;; Defined at:
  4743 ;;		line 74 in file "I2C.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  a               2    2[COMMON] unsigned short 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  temp            2    6[COMMON] unsigned short 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  2    2[COMMON] unsigned short 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0, pclath, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4757 ;;      Params:         2       0       0       0       0
  4758 ;;      Locals:         2       0       0       0       0
  4759 ;;      Temps:          2       0       0       0       0
  4760 ;;      Totals:         6       0       0       0       0
  4761 ;;Total ram usage:        6 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    2
  4764 ;; This function calls:
  4765 ;;		_I2C_Master_Wait
  4766 ;; This function is called by:
  4767 ;;		_main
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           
  4772                           ;psect for function _I2C_Master_Read
  4773  0E8D                     _I2C_Master_Read:
  4774  0E8D                     l1630:	
  4775                           ;incstack = 0
  4776                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4777                           
  4778                           
  4779                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4780  0E8D  120A  158A  25E6  120A  158A  	fcall	_I2C_Master_Wait
  4781  0E92                     l1632:
  4782                           
  4783                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4784  0E92  1683               	bsf	3,5	;RP0=1, select bank1
  4785  0E93  1303               	bcf	3,6	;RP1=0, select bank1
  4786  0E94  1591               	bsf	17,3	;volatile
  4787                           
  4788                           ;I2C.c: 79:     I2C_Master_Wait();
  4789  0E95  120A  158A  25E6  120A  158A  	fcall	_I2C_Master_Wait
  4790  0E9A                     l1634:
  4791                           
  4792                           ;I2C.c: 80:     temp = SSPBUF;
  4793  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  4794  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  4795  0E9C  0813               	movf	19,w	;volatile
  4796  0E9D  00F4               	movwf	??_I2C_Master_Read
  4797  0E9E  01F5               	clrf	??_I2C_Master_Read+1
  4798  0E9F  0874               	movf	??_I2C_Master_Read,w
  4799  0EA0  00F6               	movwf	I2C_Master_Read@temp
  4800  0EA1  0875               	movf	??_I2C_Master_Read+1,w
  4801  0EA2  00F7               	movwf	I2C_Master_Read@temp+1
  4802  0EA3                     l1636:
  4803                           
  4804                           ;I2C.c: 81:     I2C_Master_Wait();
  4805  0EA3  120A  158A  25E6  120A  158A  	fcall	_I2C_Master_Wait
  4806  0EA8                     l1638:
  4807                           
  4808                           ;I2C.c: 82:     if(a == 1){
  4809  0EA8  0372               	decf	I2C_Master_Read@a,w
  4810  0EA9  0473               	iorwf	I2C_Master_Read@a+1,w
  4811  0EAA  1D03               	btfss	3,2
  4812  0EAB  2EAD               	goto	u1431
  4813  0EAC  2EAE               	goto	u1430
  4814  0EAD                     u1431:
  4815  0EAD  2EB2               	goto	l128
  4816  0EAE                     u1430:
  4817  0EAE                     l1640:
  4818                           
  4819                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4820  0EAE  1683               	bsf	3,5	;RP0=1, select bank1
  4821  0EAF  1303               	bcf	3,6	;RP1=0, select bank1
  4822  0EB0  1291               	bcf	17,5	;volatile
  4823                           
  4824                           ;I2C.c: 84:     }else{
  4825  0EB1  2EB5               	goto	l129
  4826  0EB2                     l128:
  4827                           
  4828                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4829  0EB2  1683               	bsf	3,5	;RP0=1, select bank1
  4830  0EB3  1303               	bcf	3,6	;RP1=0, select bank1
  4831  0EB4  1691               	bsf	17,5	;volatile
  4832  0EB5                     l129:	
  4833                           ;I2C.c: 86:     }
  4834                           
  4835                           
  4836                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4837  0EB5  1611               	bsf	17,4	;volatile
  4838  0EB6                     l1642:
  4839                           
  4840                           ;I2C.c: 88:     return temp;
  4841  0EB6  0877               	movf	I2C_Master_Read@temp+1,w
  4842  0EB7  00F3               	movwf	?_I2C_Master_Read+1
  4843  0EB8  0876               	movf	I2C_Master_Read@temp,w
  4844  0EB9  00F2               	movwf	?_I2C_Master_Read
  4845  0EBA                     l130:
  4846  0EBA  0008               	return
  4847  0EBB                     __end_of_I2C_Master_Read:
  4848                           
  4849                           	psect	text22
  4850  0DE6                     __ptext22:	
  4851 ;; *************** function _I2C_Master_Wait *****************
  4852 ;; Defined at:
  4853 ;;		line 32 in file "I2C.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      void 
  4860 ;; Registers used:
  4861 ;;		wreg, status,2
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4867 ;;      Params:         0       0       0       0       0
  4868 ;;      Locals:         0       0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0
  4870 ;;      Totals:         0       0       0       0       0
  4871 ;;Total ram usage:        0 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; Hardware stack levels required when called:    1
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_I2C_Master_Start
  4878 ;;		_I2C_Master_Stop
  4879 ;;		_I2C_Master_Write
  4880 ;;		_I2C_Master_Read
  4881 ;;		_I2C_Master_RepeatedStart
  4882 ;; This function uses a non-reentrant model
  4883 ;;
  4884                           
  4885                           
  4886                           ;psect for function _I2C_Master_Wait
  4887  0DE6                     _I2C_Master_Wait:
  4888  0DE6                     l1420:	
  4889                           ;incstack = 0
  4890                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4891                           
  4892  0DE6                     l110:	
  4893                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4894                           
  4895  0DE6  1683               	bsf	3,5	;RP0=1, select bank1
  4896  0DE7  1303               	bcf	3,6	;RP1=0, select bank1
  4897  0DE8  1914               	btfsc	20,2	;volatile
  4898  0DE9  2DEB               	goto	u1111
  4899  0DEA  2DEC               	goto	u1110
  4900  0DEB                     u1111:
  4901  0DEB  2DE6               	goto	l110
  4902  0DEC                     u1110:
  4903  0DEC                     l1422:
  4904  0DEC  0811               	movf	17,w	;volatile
  4905  0DED  391F               	andlw	31
  4906  0DEE  1D03               	btfss	3,2
  4907  0DEF  2DF1               	goto	u1121
  4908  0DF0  2DF2               	goto	u1120
  4909  0DF1                     u1121:
  4910  0DF1  2DE6               	goto	l110
  4911  0DF2                     u1120:
  4912  0DF2                     l113:
  4913  0DF2  0008               	return
  4914  0DF3                     __end_of_I2C_Master_Wait:
  4915                           
  4916                           	psect	text23
  4917  0DC3                     __ptext23:	
  4918 ;; *************** function _isr *****************
  4919 ;; Defined at:
  4920 ;;		line 61 in file "main_master.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;		None
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;		None
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      void 
  4927 ;; Registers used:
  4928 ;;		None
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4934 ;;      Params:         0       0       0       0       0
  4935 ;;      Locals:         0       0       0       0       0
  4936 ;;      Temps:          2       0       0       0       0
  4937 ;;      Totals:         2       0       0       0       0
  4938 ;;Total ram usage:        2 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; This function calls:
  4941 ;;		Nothing
  4942 ;; This function is called by:
  4943 ;;		Interrupt level 1
  4944 ;; This function uses a non-reentrant model
  4945 ;;
  4946                           
  4947                           
  4948                           ;psect for function _isr
  4949  0DC3                     _isr:
  4950  0DC3                     i1l67:
  4951  0DC3  0871               	movf	??_isr+1,w
  4952  0DC4  008A               	movwf	10
  4953  0DC5  0E70               	swapf	??_isr,w
  4954  0DC6  0083               	movwf	3
  4955  0DC7  0EFE               	swapf	btemp,f
  4956  0DC8  0E7E               	swapf	btemp,w
  4957  0DC9  0009               	retfie
  4958  0DCA                     __end_of_isr:
  4959  007E                     btemp	set	126	;btemp
  4960  007E                     wtemp0	set	126
  4961                           
  4962                           	psect	intentry
  4963  0004                     __pintentry:	
  4964                           ;incstack = 0
  4965                           ; Regs used in _isr: []
  4966                           
  4967  0004                     interrupt_function:
  4968  007E                     saved_w	set	btemp
  4969  0004  00FE               	movwf	btemp
  4970  0005  0E03               	swapf	3,w
  4971  0006  00F0               	movwf	??_isr
  4972  0007  080A               	movf	10,w
  4973  0008  00F1               	movwf	??_isr+1
  4974  0009  120A  158A  2DC3   	ljmp	_isr
  4975                           
  4976                           	psect	config
  4977                           
  4978                           ;Config register CONFIG1 @ 0x2007
  4979                           ;	Oscillator Selection bits
  4980                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4981                           ;	Watchdog Timer Enable bit
  4982                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4983                           ;	Power-up Timer Enable bit
  4984                           ;	PWRTE = OFF, PWRT disabled
  4985                           ;	RE3/MCLR pin function select bit
  4986                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4987                           ;	Code Protection bit
  4988                           ;	CP = OFF, Program memory code protection is disabled
  4989                           ;	Data Code Protection bit
  4990                           ;	CPD = OFF, Data memory code protection is disabled
  4991                           ;	Brown Out Reset Selection bits
  4992                           ;	BOREN = OFF, BOR disabled
  4993                           ;	Internal External Switchover bit
  4994                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4995                           ;	Fail-Safe Clock Monitor Enabled bit
  4996                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4997                           ;	Low Voltage Programming Enable bit
  4998                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4999                           ;	In-Circuit Debugger Mode bit
  5000                           ;	DEBUG = 0x1, unprogrammed default
  5001  2007                     	org	8199
  5002  2007  20D4               	dw	8404
  5003                           
  5004                           ;Config register CONFIG2 @ 0x2008
  5005                           ;	Brown-out Reset Selection bit
  5006                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5007                           ;	Flash Program Memory Self Write Enable bits
  5008                           ;	WRT = OFF, Write protection off
  5009  2008                     	org	8200
  5010  2008  3FFF               	dw	16383

Data Sizes:
    Strings     37
    Constant    10
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     73      79
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_2(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> main@buffer(BANK0[20]), STR_1(CODE[19]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _I2C_Master_Init->___lldiv
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _sprintf->___lwmod
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    7991
                                             43 BANK0     30    30      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                            ___fltol
                           ___xxtofl
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    18      7    1548
                                              6 BANK0     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              6 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             32 BANK0     11     7      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3353
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     400
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     466
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     49      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 10 12:36:51 2021

                        pc 0002                         l78 0E8C                         fsr 0004  
      __Umul8_16@word_mpld 0022                        l110 0DE6                        l113 0DF2  
                      l130 0EBA                        l122 0DDB                        l107 0EF2  
                      l116 0DD2                        l125 0DE5                        l142 0DC2  
                      l128 0EB2                        l160 0E36                        l129 0EB5  
                      l145 0E19                        l154 07BF                        l322 0767  
                      l148 0DFF                        l157 0FFF                        l166 0FB8  
                      l282 05C7                        l472 06FF                        l721 0683  
                      l482 06FF                        l732 064D                        l733 0659  
                      l725 0631                        l558 0F72                        l479 06EA  
                      l719 05EC                        l568 0F2E                        l681 02E9  
                      l675 037D                        l694 0E4D                        l687 0371  
                      l696 0E5F                        _GIE 005F                        _isr 0DC3  
                      _val 007B                        fsr0 0004                        _vol 006D  
                      indf 0000               ___flmul@aexp 0034               ___flmul@bexp 0039  
             ___flmul@sign 0033               ___flmul@temp 003E               ___flmul@prod 003A  
             ___fltol@exp1 004A                       l2000 0F05                       l2010 0F24  
                     l2002 0F09                       l2020 0E43                       l2004 0F0D  
                     l2012 0F2A                       l2100 05A8                       l2022 0E47  
                     l2030 0E60                       l2006 0F17                       l2102 05B1  
                     l2024 0E56                       l2016 0E3A                       l2200 02B5  
                     l2120 002F                       l2112 001D                       l2040 0E7D  
                     l2032 0E77                       l2008 0F1D                       l2104 05C3  
                     l2042 0F73                       l2026 0E5B                       l2018 0E3C  
                     l2210 02CD                       l2202 02B9                       l2130 004B  
                     l2122 0034                       l2114 0024                       l2034 0E7A  
                     l2050 04E1                       l1420 0DE6                       l2044 0F78  
                     l2220 02EE                       l2212 02CE                       l2204 02BA  
                     l2140 0060                       l2132 0050                       l2124 0039  
                     l2116 002A                       l2036 0E7B                       l2052 04E6  
                     l2300 049B                       l1422 0DEC                       l1430 0E0D  
                     l2046 0F94                       l2222 02F3                       l2230 0324  
                     l2214 02D2                       l2206 02C3                       l2150 007C  
                     l2142 0065                       l2134 0056                       l2126 0041  
                     l2118 002E                       l2038 0E7C                       l2070 0526  
                     l2062 04F9                       l2054 04EC                       l2310 04CB  
                     l2302 04AA                       l1432 0E16                       l1424 0E01  
                     l1520 0FB9                       l1440 0E2C                       l2048 0F9C  
                     l2240 0357                       l2232 0331                       l2224 0301  
                     l2216 02E6                       l2208 02C9                       l2160 00A7  
                     l2152 0081                       l2144 006D                       l2136 005A  
                     l2128 0043                       l2080 0531                       l2072 052A  
                     l2064 0516                       l2056 04F3                       l2304 04AF  
                     l1426 0E04                       l1530 0DF3                       l1522 0FBF  
                     l1442 0E2F                       l1434 0E1B                       l2242 0365  
                     l2234 033C                       l2226 0305                       l2170 0144  
                     l2162 00C4                       l2146 006F                       l2138 005B  
                     l1450 0F37                       l2090 0564                       l2074 052F  
                     l2066 051E                       l2058 04F8                       l2306 04B8  
                     l1428 0E0A                       l1524 0FC8                       l1540 078C  
                     l1532 076B                       l1444 0E33                       l1436 0E23  
                     l2244 0369                       l2236 034B                       l2228 031E  
                     l2180 01A7                       l2172 014D                       l2164 00E0  
                     l2156 008A                       l2148 0077                       l1460 0F5A  
                     l1452 0F3A                       l2092 0568                       l2084 054D  
                     l2068 0522                       l2332 050B                       l2308 04C6  
                     l2260 03A8                       l2252 037E                       l1630 0E8D  
                     l1622 0DCA                       l1382 0DBE                       l1526 0FD6  
                     l1550 07B7                       l1534 0770                       l1542 0795  
                     l1438 0E26                       l2246 036A                       l2238 0355  
                     l2190 0247                       l2182 01C0                       l2174 015D  
                     l2166 010C                       l2158 009A                       l1462 0F60  
                     l1454 0F41                       l1446 0F2F                       l2094 056D  
                     l2086 0557                       l2270 041A                       l2262 03E7  
                     l2254 0395                       l1640 0EAE                       l1632 0E92  
                     l1624 0DCF                       l1528 0FDC                       l1544 079B  
                     l1536 0781                       l2248 0375                       l2192 026D  
                     l2184 01DD                       l2176 017A                       l2168 0128  
                     l1464 0F61                       l1456 0F45                       l1448 0F31  
                     l2096 059D                       l2088 055D                       l2280 0442  
                     l2272 0423                       l2264 03EB                       l2256 039E  
                     l1642 0EB6                       l1634 0E9A                       l1626 0DDC  
                     l1546 07AC                       l1538 0786                       l2194 0295  
                     l2186 020A                       l2178 018A                       l1650 0684  
                     l1466 0F68                       l1458 0F49                       l2098 05A4  
                     l2290 0470                       l2282 0451                       l2274 0428  
                     l2266 03EF                       l2258 03A4                       l1636 0EA3  
                     l1628 0DE1                       l1548 07B1                       l2196 029E  
                     l2188 021A                       l1660 06B0                       l1652 0691  
                     l1468 0F6E                       l2292 047F                       l2284 0456  
                     l2276 0431                       l2268 040E                       l1638 0EA8  
                     l1646 0DD3                       l2198 02AC                       l1662 06B8  
                     l1830 05D4                       l2294 0484                       l2286 045F  
                     l2278 043D                       l1648 0DD8                       l1680 06DF  
                     l1672 06C6                       l1664 06BA                       l1656 069A  
                     l1840 0602                       l1832 05E4                       l2296 048D  
                     l2288 046B                       l1682 06EF                       l1666 06BE  
                     l1674 06D8                       l1658 06AF                       l1850 0638  
                     l1842 060F                       l1834 05F4                       l1826 05CB  
                     l2298 0496                       l1684 06F4                       l1860 0671  
                     l1852 0643                       l1844 0616                       l1828 05D0  
                     l1862 0676                       l1854 0647                       l1846 061A  
                     l1838 05FD                       l1864 067A                       l1856 0651  
                     l1848 0628                       l1960 0712                       l1866 067B  
                     l1858 065B                       l1970 0741                       l1962 0715  
                     l1972 074F                       l1964 0722                       l1974 0750  
                     l1966 0726                       l1958 0700                       l1990 0EF0  
                     l1982 0EBB                       l1976 0759                       l1968 072F  
                     l1992 0EF1                       l1984 0EBF                       l1978 075F  
                     l1986 0EC2                       l1994 0EF3                       l1988 0EEF  
                     l1996 0EFB                       l1998 0EFE                       ?_isr 0070  
                     STR_1 07DA                       STR_2 07ED                       u1110 0DEC  
                     u1111 0DEB                       u1120 0DF2                       u2000 064D  
                     u1121 0DF1                       u2001 064C                       u2010 0651  
                     u1130 0F37                       u2011 0650                       u1131 0F36  
                     u2020 0666                       u1310 079B                       u2030 0676  
                     u2110 075F                       u1150 0F49                       u1311 079A  
                     u2031 0675                       u2111 075E                       u1151 0F48  
                     u2040 067A                       u2120 0ED2                       u1305 0778  
                     u2041 0679                       u2025 0661                       u2105 0751  
                     u1145 0F3B                       u2210 0E5B                       u2050 0712  
                     u1170 0F5A                       u2130 0EFB                       u2211 0E5A  
                     u2051 0711                       u1171 0F59                       u2131 0EFA  
                     u2220 0F82                       u1500 06DE                       u2300 05B1  
                     u1325 07A3                       u2205 0E4E                       u1501 06DD  
                     u2125 0ECD                       u1165 0F4A                       u2301 05B0  
                     u1430 0EAE                       u2230 0FA6                       u2070 0726  
                     u1190 0F6E                       u2150 0F0D                       u2310 05C3  
                     u1431 0EAD                       u2071 0725                       u1191 0F6D  
                     u1175 0F56                       u2151 0F0C                       u2311 05C2  
                     u2240 0FB8                       u2320 002E                       u1520 06EF  
                     u1440 0691                       u2160 0F17                       u2241 0FB7  
                     u2401 00D2                       u2321 002D                       u1521 06EE  
                     u1441 0690                       u2065 0717                       u1185 0F62  
                     u2161 0F16                       u2145 0EFF                       u1290 0770  
                     u2402 00D9                       u2330 0034                       u1530 06F4  
                     u1450 06A8                       u2090 0741                       u2250 04EC  
                     u1291 076F                       u2411 00EE                       u2403 00E0  
                     u2331 0033                       u1531 06F3                       u1515 06E1  
                     u2091 0740                       u2251 04EB                       u2412 00F5  
                     u2340 0039                       u1460 06BE                       u2180 0F2A  
                     u2260 0526                       u2501 0229                       u2421 011A  
                     u2413 00FC                       u2341 0038                       u1461 06BD  
                     u2085 0728                       u2181 0F29                       u2165 0F13  
                     u2261 0525                       u2190 0E47                       u2510 0253  
                     u2502 0230                       u2422 0121                       u2350 005A  
                     u1470 06C5                       u2270 054C                       u2191 0E46  
                     u2503 0237                       u2431 0136                       u2423 0128  
                     u2351 0059                       u1471 06C4                       u1455 06A3  
                     u2095 073D                       u2175 0F1E                       u2271 054B  
                     u2600 02D2                       u2432 013D                       u2360 0060  
                     u2280 0557                       u2601 02D1                       u2521 025F  
                     u2433 0144                       u2361 005F                       u2281 0556  
                     u2610 02E6                       u2530 027B                       u2522 0266  
                     u2370 0065                       u1490 06D7                       u2290 055D  
                     u2611 02E5                       u2523 026D                       u2515 024E  
                     u2451 016C                       u2371 0064                       u1491 06D6  
                     u2291 055C                       u2275 0548                       u2620 02ED  
                     u2452 0173                       u2380 007C                       u2621 02EC  
                     u2541 0287                       u2461 0199                       u2453 017A  
                     u2445 0146                       u2381 007B                       u1485 06C7  
                     u2630 02F3                       u2542 028E                       u2462 01A0  
                     u2390 0081                       u1910 05D0                       u2631 02F2  
                     u2543 0295                       u2535 0276                       u2463 01A7  
                     u2391 0080                       u1911 05CF                       u2640 0305  
                     u1920 05D4                       u2641 0304                       u2481 01CF  
                     u1921 05D3                       u2650 0314                       u2570 02B9  
                     u2482 01D6                       u1930 05F4                       u2571 02B8  
                     u2555 0297                       u2491 01FC                       u2483 01DD  
                     u2475 01A9                       u1931 05F3                       u2707 0478  
                     u2660 0331                       u2492 0203                       u2661 0330  
                     u2565 02AE                       u2493 020A                       u2717 04A3  
                     u2670 034B                       u2590 02CD                       u1950 0615  
                     u2671 034A                       u2655 030F                       u2591 02CC  
                     u1951 0614                       u2727 04D3                       u2680 0369  
                     u2737 0E31                       u2681 0368                       u2665 032D  
                     u2585 02BC                       u1945 0607                       u1970 0637  
                     u2747 0FC3                       u2675 0347                       u1971 0636  
                     _PEIE 005E                       u2757 0FD2                       u1965 0629  
                     u1990 0647                       u2767 0FDE                       u1991 0646  
                     u2777 0E11                       u1985 063C                       u2697 044A  
                     i1l67 0DC3          ?_Lcd_Write_String 0077                       _cont 006C  
                     _main 037E                       _val1 007A                       _val2 006B  
                     _full 0069                       _temp 006E                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0020            __end_of_Lcd_Cmd 0E1A  
                    ??_isr 0070           ?_I2C_Master_Init 0026           ?_I2C_Master_Read 0072  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070              ___fltol@sign1 0049  
                    ?_main 0070            __end_of___flmul 037E            __end_of___fltol 0700  
                    _ANSEL 0188            __end_of___lldiv 0768            __end_of___lwdiv 0F73  
          __end_of___lwmod 0F2F                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063            __end_of_dpowers 07DA                      _setup 0E60  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 05C8           __end_of_Lcd_Init 1000           __end_of_Lcd_Port 0DC3  
          __initialization 000F               __end_of_main 04DE                     ??_main 004B  
       __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0072  
       ??_I2C_Master_Start 0072         ??_I2C_Master_Write 0074                     ?_setup 0070  
                   _ANSELH 0189                  ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 001D  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013           __end_of___xxtofl 0684  
                ??___flmul 002E                  ??___fltol 0044                  ??___lldiv 0020  
                ??___lwdiv 0076                  ??___lwmod 0024         __size_of__Umul8_16 0029  
                   saved_w 007E                  ??_sprintf 002D            Lcd_Set_Cursor@a 0020  
          Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022            Lcd_Set_Cursor@z 0021  
             ___xxtofl@arg 0022               ___xxtofl@exp 0021               ___xxtofl@val 0072  
  __end_of__initialization 0019          __end_of_Lcd_Clear 0E00                 ___fltol@f1 0040  
           __pcstackCOMMON 0070              __end_of_setup 0E8D             _Lcd_Set_Cursor 0768  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 007A  
               __pbssBANK0 0069          __end_of__Umul8_16 0E60                 __pmaintext 037E  
               __pintentry 0004  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 07C0  
                ?___xxtofl 0072                 ??_Lcd_Init 0076                 ??_Lcd_Port 0072  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 07C0  
           _Lcd_Write_Char 0E1A                    _Lcd_Cmd 0E00                    ___flmul 001D  
                  ___fltol 0684                    ___lldiv 0700                    ___lwdiv 0F2F  
                  ___lwmod 0EF3            ?_Lcd_Set_Cursor 0076                    __ptext1 04DE  
                  __ptext2 0EF3                    __ptext3 0F2F                    __ptext4 0E60  
                  __ptext5 0EBB                    __ptext6 0700                    __ptext7 05C8  
                  __ptext8 0684                    __ptext9 001D                    _dpowers 07D0  
             __size_of_isr 0007                 ??___xxtofl 0076   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  _sprintf 04DE                    main@val 0068     __end_of_Lcd_Write_Char 0E37  
     end_of_initialization 0019  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0072            ___lldiv@counter 0025           I2C_Master_Init@c 0026  
         I2C_Master_Read@a 0072                  Lcd_Port@a 0072                  _PORTEbits 0009  
            ___xxtofl@sign 0020                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0023                ___flmul@grs 0035  
               main@buffer 0052                  _Lcd_Clear 0DF3           _Lcd_Write_String 0F73  
      start_initialization 000F                __end_of_isr 0DCA          __size_of_Lcd_Init 0047  
        __size_of_Lcd_Port 0006          ??_I2C_Master_Init 002A          ??_I2C_Master_Read 0074  
        ??_I2C_Master_Wait 0072          ??_I2C_Master_Stop 0072                 ?_Lcd_Clear 0070  
                __Umul8_16 0E37            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0076  
                ___flmul@a 002A                  ___flmul@b 0026                __pbssCOMMON 007A  
                ___latbits 0002              __pcstackBANK0 0020          __size_of___xxtofl 00BC  
                 ?_Lcd_Cmd 0070                sprintf@flag 0031                sprintf@prec 0032  
         _I2C_Master_Start 0DCA           _I2C_Master_Write 0DDC           ___lwdiv@dividend 0074  
         ??_Lcd_Set_Cursor 0077                   ?___flmul 0026                   ?___fltol 0040  
                 ?___lldiv 0072                 ?__Umul8_16 0072                   ?___lwdiv 0072  
                 ?___lwmod 0020                  __pstrings 07C0           ___lwdiv@quotient 0077  
                 ?_sprintf 0026             __size_of_setup 002D          interrupt_function 0004  
                 Lcd_Cmd@a 0075                ??_Lcd_Clear 0076                __stringbase 07CF  
         ??_Lcd_Write_Char 0073                   _Lcd_Init 0FB9                   _Lcd_Port 0DBD  
      I2C_Master_Read@temp 0076   __end_of_Lcd_Write_String 0FB9           __size_of_Lcd_Cmd 001A  
              ??__Umul8_16 0074           __size_of___flmul 0361           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___lwdiv 0044           __size_of___lwmod 003C  
       __end_of__stringtab 07D0                 sprintf@val 0033            _I2C_Master_Init 0EBB  
          _I2C_Master_Read 0E8D                   ___xxtofl 05C8            _I2C_Master_Wait 0DE6  
          _I2C_Master_Stop 0DD3            ___lwdiv@divisor 0072            ___lwdiv@counter 0079  
                 __ptext10 0E37                   __ptext11 0F73                   __ptext20 0DCA  
                 __ptext12 0E1A                   __ptext21 0E8D                   __ptext13 0768  
                 __ptext22 0DE6                   __ptext14 0FB9                   __ptext23 0DC3  
                 __ptext15 0DF3                   __ptext16 0E00                   __ptext17 0DBD  
                 __ptext18 0DDC                   __ptext19 0DD3           __size_of_sprintf 00EA  
            __size_of_main 0160                   main@val1 0067                   main@val2 0066  
 __end_of_I2C_Master_Start 0DD3   __end_of_I2C_Master_Write 0DE6         Lcd_Write_Char@temp 0075  
                 intlevel1 0000                  sprintf@ap 0030                  sprintf@sp 0035  
         ___lwmod@dividend 0022           ___lldiv@dividend 0076                  stringcode 07CA  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 0EF3    __end_of_I2C_Master_Read 0EBB  
  __end_of_I2C_Master_Wait 0DF3    __end_of_I2C_Master_Stop 0DDC         Lcd_Set_Cursor@temp 0023  
   __Umul8_16@multiplicand 0072                   sprintf@c 0036                   sprintf@f 0026  
         ___lldiv@quotient 0021          I2C_Master_Write@d 0072            ___lwmod@divisor 0020  
          ___lwmod@counter 0025                   stringdir 07CA                   stringtab 07C0  
              _SSPCON2bits 0091       __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
